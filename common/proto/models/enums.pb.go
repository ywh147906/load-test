// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/models/enums.proto

package models

import (
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RewardStatus int32

const (
	RewardStatus_Locked   RewardStatus = 0
	RewardStatus_Unlocked RewardStatus = 1
	RewardStatus_Received RewardStatus = 2
)

var RewardStatus_name = map[int32]string{
	0: "Locked",
	1: "Unlocked",
	2: "Received",
}

var RewardStatus_value = map[string]int32{
	"Locked":   0,
	"Unlocked": 1,
	"Received": 2,
}

func (RewardStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{0}
}

type TaskStatus int32

const (
	TaskStatus_NotStarted TaskStatus = 0
	TaskStatus_Processing TaskStatus = 1
	TaskStatus_Completed  TaskStatus = 2
	TaskStatus_Finished   TaskStatus = 3
	TaskStatus_CantAccept TaskStatus = 4
)

var TaskStatus_name = map[int32]string{
	0: "NotStarted",
	1: "Processing",
	2: "Completed",
	3: "Finished",
	4: "CantAccept",
}

var TaskStatus_value = map[string]int32{
	"NotStarted": 0,
	"Processing": 1,
	"Completed":  2,
	"Finished":   3,
	"CantAccept": 4,
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{1}
}

type TaskType int32

const (
	TaskType_TaskLogin                     TaskType = 0
	TaskType_TaskDailyActivity             TaskType = 1
	TaskType_TaskWeeklyActivity            TaskType = 2
	TaskType_TaskLevel                     TaskType = 3
	TaskType_TaskMapNpcTalk                TaskType = 4
	TaskType_TaskCityNpcTalk               TaskType = 5
	TaskType_TaskCityNpcBattle             TaskType = 6
	TaskType_TaskMove                      TaskType = 7
	TaskType_TaskKillMonster               TaskType = 8
	TaskType_TaskCollect                   TaskType = 9
	TaskType_TaskMapSubmit                 TaskType = 10
	TaskType_TaskCitySubmit                TaskType = 11
	TaskType_TaskGather                    TaskType = 12
	TaskType_TaskMapEvent                  TaskType = 13
	TaskType_TaskMainTask                  TaskType = 14
	TaskType_TaskAcceptMainTask            TaskType = 15
	TaskType_TaskCompleteMainTask          TaskType = 16
	TaskType_TaskHalfBodyTalk              TaskType = 17
	TaskType_TaskGetItemTaskAcc            TaskType = 18
	TaskType_TaskGetItemTask               TaskType = 19
	TaskType_TaskGoThroughMapPoint         TaskType = 20
	TaskType_TaskPassMainlineTask          TaskType = 21
	TaskType_TaskAcceptTaskThenWait        TaskType = 22
	TaskType_TaskMonsterHPBelowTo          TaskType = 23
	TaskType_TaskMainTaskIndex             TaskType = 24
	TaskType_TaskLevelExplore              TaskType = 25
	TaskType_TaskGivenMapEvent             TaskType = 26
	TaskType_TaskHitMonster                TaskType = 30
	TaskType_TaskBuildEquipAcc             TaskType = 31
	TaskType_TaskBuildEquip                TaskType = 32
	TaskType_TaskBuildQualityEquipAcc      TaskType = 33
	TaskType_TaskBuildQualityEquip         TaskType = 34
	TaskType_TaskBuildTargetEquip          TaskType = 35
	TaskType_TaskGetRelicsAcc              TaskType = 36
	TaskType_TaskPower                     TaskType = 37
	TaskType_TaskKillAnyMonster            TaskType = 38
	TaskType_TaskJoinGuild                 TaskType = 39
	TaskType_TaskTower                     TaskType = 40
	TaskType_TaskEnhanceEquipLevel         TaskType = 41
	TaskType_TaskLevelUpRelicsNumAcc       TaskType = 42
	TaskType_TaskLevelUpRelicsNum          TaskType = 43
	TaskType_TaskMergeStoneNumAcc          TaskType = 44
	TaskType_TaskMergeStoneNum             TaskType = 45
	TaskType_TaskPassDungeonNumAcc         TaskType = 46
	TaskType_TaskPassDungeonNum            TaskType = 47
	TaskType_TaskTaskMapEventNumAcc        TaskType = 48
	TaskType_TaskTaskMapEventNum           TaskType = 49
	TaskType_TaskArenaBattleNum            TaskType = 50
	TaskType_TaskGuildBossNumAcc           TaskType = 51
	TaskType_TaskGuildBossNum              TaskType = 52
	TaskType_TaskBuyShopItemNumAcc         TaskType = 53
	TaskType_TaskBuyShopItemNum            TaskType = 54
	TaskType_TaskDimensionBattleOnMapPoint TaskType = 55
	TaskType_TaskDimensionBattleThroughNpc TaskType = 56
	TaskType_TaskRacingNumAcc              TaskType = 57
	TaskType_TaskRacingNum                 TaskType = 58
	TaskType_TaskRacingRecord              TaskType = 59
	TaskType_TaskDivinationNumAcc          TaskType = 60
	TaskType_TaskDivinationNum             TaskType = 61
	TaskType_TaskGachaNumAcc               TaskType = 62
	TaskType_TaskGachaNum                  TaskType = 63
	TaskType_TaskConsumeItemAcc            TaskType = 64
	TaskType_TaskConsumeItem               TaskType = 65
	TaskType_TaskGainEquipmentNumAcc       TaskType = 66
	TaskType_TaskGainEquipmentNum          TaskType = 67
	TaskType_TaskRelicsStartNumAcc         TaskType = 68
	TaskType_TaskRelicsStartNum            TaskType = 69
	TaskType_TaskExpeditionNumAcc          TaskType = 70
	TaskType_TaskExpeditionNumA            TaskType = 71
	TaskType_TaskEnchatNumAcc              TaskType = 72
	TaskType_TaskEnchatNum                 TaskType = 73
	TaskType_TaskKillPlayerNumAcc          TaskType = 74
	TaskType_TaskKillPlayerNum             TaskType = 75
	TaskType_TaskRoleGetNum                TaskType = 76
	TaskType_TaskEnhanceNum                TaskType = 77
	TaskType_TaskSoulContractTotalLevel    TaskType = 78
	TaskType_TaskSoulContractHeroLevel     TaskType = 79
	TaskType_TaskSoulContractUpdateNum     TaskType = 80
	TaskType_TaskDimensionMonsterGroupFlag TaskType = 81
	TaskType_TaskFinishNpc                 TaskType = 82
	TaskType_TaskWearEquipNumAcc           TaskType = 83
	TaskType_TaskActiveTalent              TaskType = 84
	TaskType_TaskUpgradeTalentAcc          TaskType = 85
	TaskType_TaskUpgradeTalent             TaskType = 86
	TaskType_TaskFinishMapEvent            TaskType = 87
	TaskType_TaskRefineEquipSlotNum        TaskType = 88
	TaskType_TaskRefineEquipSlotNumAcc     TaskType = 89
	TaskType_TaskRelicsLvlTotal            TaskType = 90
	TaskType_TaskRelicsLvl                 TaskType = 91
	TaskType_TaskActiveSkillCnt            TaskType = 92
	TaskType_TaskEnterMapScene             TaskType = 93
	TaskType_TaskRitualUnlockHero          TaskType = 94
	TaskType_TaskChooseTalent              TaskType = 95
	TaskType_TaskManualUpTalent            TaskType = 96
	TaskType_TaskInlaySkillStoneAcc        TaskType = 97
	TaskType_TaskRitualTaskFinish          TaskType = 98
	TaskType_TaskCommitItem                TaskType = 99
	TaskType_TaskKillAllocateMonsterNum    TaskType = 100
	TaskType_TaskKillAnyMonsterNum         TaskType = 101
	TaskType_TaskArenaRank                 TaskType = 102
	TaskType_TaskKillBossHallKillBoos      TaskType = 104
	TaskType_TaskRitualTargetFinish        TaskType = 106
	TaskType_TaskMysteryBossKill           TaskType = 107
	TaskType_TaskPersonalBossKill          TaskType = 108
	TaskType_TaskAddFriendCnt              TaskType = 109
	TaskType_TaskFinishMainTaskCnt         TaskType = 110
	TaskType_TaskOwnFashionCnt             TaskType = 111
	TaskType_TaskRoleLvlUpCnt              TaskType = 112
	TaskType_TaskSoulLvlUpCnt              TaskType = 113
	TaskType_TaskPerformRitual             TaskType = 114
	TaskType_TaskJoinPersonBossAcc         TaskType = 115
	TaskType_TaskJoinPersonBoss            TaskType = 116
	TaskType_TaskBossHallKillRewardAcc     TaskType = 117
	TaskType_TaskBossHallKillReward        TaskType = 118
	TaskType_TaskBossHallJoinRewardAcc     TaskType = 119
	TaskType_TaskBossHallJoinReward        TaskType = 120
	TaskType_TaskLvlUpSkillAcc             TaskType = 121
	TaskType_TaskLvlUpSkill                TaskType = 122
	TaskType_TaskTotalSkillLvl             TaskType = 123
	TaskType_TaskHaveLvlUpperSkill         TaskType = 124
	TaskType_TaskChooseSkillAcc            TaskType = 125
	TaskType_TaskInlayLvlUpperStone        TaskType = 126
	TaskType_TaskInlayRune                 TaskType = 127
	TaskType_TaskRuneLvlUp                 TaskType = 128
	TaskType_TaskOweLvlUpperRune           TaskType = 129
	TaskType_TaskTowerChallengeSucc        TaskType = 130
	TaskType_TaskRelicsQualityGetAcc       TaskType = 131
	TaskType_TaskReachTitle                TaskType = 132
	TaskType_TaskGetQualityEquipmentAcc    TaskType = 133
	TaskType_TaskGetQualityEquipment       TaskType = 134
	TaskType_TaskEndPersonalBossRoundAcc   TaskType = 135
	TaskType_TaskEndPersonalBossRound      TaskType = 136
	TaskType_TaskSoulLvlReach              TaskType = 137
	TaskType_TaskMeltNStarsUpper           TaskType = 138
	TaskType_TaskFinishRLDungeon           TaskType = 139
	TaskType_TaskGetForeverFashion         TaskType = 140
	TaskType_TaskRuneLvlUpAcc              TaskType = 141
	TaskType_TaskReceiveDiscord            TaskType = 142
	TaskType_TaskEnhanceEquipUpperLevel    TaskType = 143
	TaskType_TaskActiveFashion             TaskType = 144
	TaskType_TaskRecycleEquip              TaskType = 145
	TaskType_TaskHangUpExp                 TaskType = 146
	TaskType_TaskShareEquip                TaskType = 147
)

var TaskType_name = map[int32]string{
	0:   "TaskLogin",
	1:   "TaskDailyActivity",
	2:   "TaskWeeklyActivity",
	3:   "TaskLevel",
	4:   "TaskMapNpcTalk",
	5:   "TaskCityNpcTalk",
	6:   "TaskCityNpcBattle",
	7:   "TaskMove",
	8:   "TaskKillMonster",
	9:   "TaskCollect",
	10:  "TaskMapSubmit",
	11:  "TaskCitySubmit",
	12:  "TaskGather",
	13:  "TaskMapEvent",
	14:  "TaskMainTask",
	15:  "TaskAcceptMainTask",
	16:  "TaskCompleteMainTask",
	17:  "TaskHalfBodyTalk",
	18:  "TaskGetItemTaskAcc",
	19:  "TaskGetItemTask",
	20:  "TaskGoThroughMapPoint",
	21:  "TaskPassMainlineTask",
	22:  "TaskAcceptTaskThenWait",
	23:  "TaskMonsterHPBelowTo",
	24:  "TaskMainTaskIndex",
	25:  "TaskLevelExplore",
	26:  "TaskGivenMapEvent",
	30:  "TaskHitMonster",
	31:  "TaskBuildEquipAcc",
	32:  "TaskBuildEquip",
	33:  "TaskBuildQualityEquipAcc",
	34:  "TaskBuildQualityEquip",
	35:  "TaskBuildTargetEquip",
	36:  "TaskGetRelicsAcc",
	37:  "TaskPower",
	38:  "TaskKillAnyMonster",
	39:  "TaskJoinGuild",
	40:  "TaskTower",
	41:  "TaskEnhanceEquipLevel",
	42:  "TaskLevelUpRelicsNumAcc",
	43:  "TaskLevelUpRelicsNum",
	44:  "TaskMergeStoneNumAcc",
	45:  "TaskMergeStoneNum",
	46:  "TaskPassDungeonNumAcc",
	47:  "TaskPassDungeonNum",
	48:  "TaskTaskMapEventNumAcc",
	49:  "TaskTaskMapEventNum",
	50:  "TaskArenaBattleNum",
	51:  "TaskGuildBossNumAcc",
	52:  "TaskGuildBossNum",
	53:  "TaskBuyShopItemNumAcc",
	54:  "TaskBuyShopItemNum",
	55:  "TaskDimensionBattleOnMapPoint",
	56:  "TaskDimensionBattleThroughNpc",
	57:  "TaskRacingNumAcc",
	58:  "TaskRacingNum",
	59:  "TaskRacingRecord",
	60:  "TaskDivinationNumAcc",
	61:  "TaskDivinationNum",
	62:  "TaskGachaNumAcc",
	63:  "TaskGachaNum",
	64:  "TaskConsumeItemAcc",
	65:  "TaskConsumeItem",
	66:  "TaskGainEquipmentNumAcc",
	67:  "TaskGainEquipmentNum",
	68:  "TaskRelicsStartNumAcc",
	69:  "TaskRelicsStartNum",
	70:  "TaskExpeditionNumAcc",
	71:  "TaskExpeditionNumA",
	72:  "TaskEnchatNumAcc",
	73:  "TaskEnchatNum",
	74:  "TaskKillPlayerNumAcc",
	75:  "TaskKillPlayerNum",
	76:  "TaskRoleGetNum",
	77:  "TaskEnhanceNum",
	78:  "TaskSoulContractTotalLevel",
	79:  "TaskSoulContractHeroLevel",
	80:  "TaskSoulContractUpdateNum",
	81:  "TaskDimensionMonsterGroupFlag",
	82:  "TaskFinishNpc",
	83:  "TaskWearEquipNumAcc",
	84:  "TaskActiveTalent",
	85:  "TaskUpgradeTalentAcc",
	86:  "TaskUpgradeTalent",
	87:  "TaskFinishMapEvent",
	88:  "TaskRefineEquipSlotNum",
	89:  "TaskRefineEquipSlotNumAcc",
	90:  "TaskRelicsLvlTotal",
	91:  "TaskRelicsLvl",
	92:  "TaskActiveSkillCnt",
	93:  "TaskEnterMapScene",
	94:  "TaskRitualUnlockHero",
	95:  "TaskChooseTalent",
	96:  "TaskManualUpTalent",
	97:  "TaskInlaySkillStoneAcc",
	98:  "TaskRitualTaskFinish",
	99:  "TaskCommitItem",
	100: "TaskKillAllocateMonsterNum",
	101: "TaskKillAnyMonsterNum",
	102: "TaskArenaRank",
	104: "TaskKillBossHallKillBoos",
	106: "TaskRitualTargetFinish",
	107: "TaskMysteryBossKill",
	108: "TaskPersonalBossKill",
	109: "TaskAddFriendCnt",
	110: "TaskFinishMainTaskCnt",
	111: "TaskOwnFashionCnt",
	112: "TaskRoleLvlUpCnt",
	113: "TaskSoulLvlUpCnt",
	114: "TaskPerformRitual",
	115: "TaskJoinPersonBossAcc",
	116: "TaskJoinPersonBoss",
	117: "TaskBossHallKillRewardAcc",
	118: "TaskBossHallKillReward",
	119: "TaskBossHallJoinRewardAcc",
	120: "TaskBossHallJoinReward",
	121: "TaskLvlUpSkillAcc",
	122: "TaskLvlUpSkill",
	123: "TaskTotalSkillLvl",
	124: "TaskHaveLvlUpperSkill",
	125: "TaskChooseSkillAcc",
	126: "TaskInlayLvlUpperStone",
	127: "TaskInlayRune",
	128: "TaskRuneLvlUp",
	129: "TaskOweLvlUpperRune",
	130: "TaskTowerChallengeSucc",
	131: "TaskRelicsQualityGetAcc",
	132: "TaskReachTitle",
	133: "TaskGetQualityEquipmentAcc",
	134: "TaskGetQualityEquipment",
	135: "TaskEndPersonalBossRoundAcc",
	136: "TaskEndPersonalBossRound",
	137: "TaskSoulLvlReach",
	138: "TaskMeltNStarsUpper",
	139: "TaskFinishRLDungeon",
	140: "TaskGetForeverFashion",
	141: "TaskRuneLvlUpAcc",
	142: "TaskReceiveDiscord",
	143: "TaskEnhanceEquipUpperLevel",
	144: "TaskActiveFashion",
	145: "TaskRecycleEquip",
	146: "TaskHangUpExp",
	147: "TaskShareEquip",
}

var TaskType_value = map[string]int32{
	"TaskLogin":                     0,
	"TaskDailyActivity":             1,
	"TaskWeeklyActivity":            2,
	"TaskLevel":                     3,
	"TaskMapNpcTalk":                4,
	"TaskCityNpcTalk":               5,
	"TaskCityNpcBattle":             6,
	"TaskMove":                      7,
	"TaskKillMonster":               8,
	"TaskCollect":                   9,
	"TaskMapSubmit":                 10,
	"TaskCitySubmit":                11,
	"TaskGather":                    12,
	"TaskMapEvent":                  13,
	"TaskMainTask":                  14,
	"TaskAcceptMainTask":            15,
	"TaskCompleteMainTask":          16,
	"TaskHalfBodyTalk":              17,
	"TaskGetItemTaskAcc":            18,
	"TaskGetItemTask":               19,
	"TaskGoThroughMapPoint":         20,
	"TaskPassMainlineTask":          21,
	"TaskAcceptTaskThenWait":        22,
	"TaskMonsterHPBelowTo":          23,
	"TaskMainTaskIndex":             24,
	"TaskLevelExplore":              25,
	"TaskGivenMapEvent":             26,
	"TaskHitMonster":                30,
	"TaskBuildEquipAcc":             31,
	"TaskBuildEquip":                32,
	"TaskBuildQualityEquipAcc":      33,
	"TaskBuildQualityEquip":         34,
	"TaskBuildTargetEquip":          35,
	"TaskGetRelicsAcc":              36,
	"TaskPower":                     37,
	"TaskKillAnyMonster":            38,
	"TaskJoinGuild":                 39,
	"TaskTower":                     40,
	"TaskEnhanceEquipLevel":         41,
	"TaskLevelUpRelicsNumAcc":       42,
	"TaskLevelUpRelicsNum":          43,
	"TaskMergeStoneNumAcc":          44,
	"TaskMergeStoneNum":             45,
	"TaskPassDungeonNumAcc":         46,
	"TaskPassDungeonNum":            47,
	"TaskTaskMapEventNumAcc":        48,
	"TaskTaskMapEventNum":           49,
	"TaskArenaBattleNum":            50,
	"TaskGuildBossNumAcc":           51,
	"TaskGuildBossNum":              52,
	"TaskBuyShopItemNumAcc":         53,
	"TaskBuyShopItemNum":            54,
	"TaskDimensionBattleOnMapPoint": 55,
	"TaskDimensionBattleThroughNpc": 56,
	"TaskRacingNumAcc":              57,
	"TaskRacingNum":                 58,
	"TaskRacingRecord":              59,
	"TaskDivinationNumAcc":          60,
	"TaskDivinationNum":             61,
	"TaskGachaNumAcc":               62,
	"TaskGachaNum":                  63,
	"TaskConsumeItemAcc":            64,
	"TaskConsumeItem":               65,
	"TaskGainEquipmentNumAcc":       66,
	"TaskGainEquipmentNum":          67,
	"TaskRelicsStartNumAcc":         68,
	"TaskRelicsStartNum":            69,
	"TaskExpeditionNumAcc":          70,
	"TaskExpeditionNumA":            71,
	"TaskEnchatNumAcc":              72,
	"TaskEnchatNum":                 73,
	"TaskKillPlayerNumAcc":          74,
	"TaskKillPlayerNum":             75,
	"TaskRoleGetNum":                76,
	"TaskEnhanceNum":                77,
	"TaskSoulContractTotalLevel":    78,
	"TaskSoulContractHeroLevel":     79,
	"TaskSoulContractUpdateNum":     80,
	"TaskDimensionMonsterGroupFlag": 81,
	"TaskFinishNpc":                 82,
	"TaskWearEquipNumAcc":           83,
	"TaskActiveTalent":              84,
	"TaskUpgradeTalentAcc":          85,
	"TaskUpgradeTalent":             86,
	"TaskFinishMapEvent":            87,
	"TaskRefineEquipSlotNum":        88,
	"TaskRefineEquipSlotNumAcc":     89,
	"TaskRelicsLvlTotal":            90,
	"TaskRelicsLvl":                 91,
	"TaskActiveSkillCnt":            92,
	"TaskEnterMapScene":             93,
	"TaskRitualUnlockHero":          94,
	"TaskChooseTalent":              95,
	"TaskManualUpTalent":            96,
	"TaskInlaySkillStoneAcc":        97,
	"TaskRitualTaskFinish":          98,
	"TaskCommitItem":                99,
	"TaskKillAllocateMonsterNum":    100,
	"TaskKillAnyMonsterNum":         101,
	"TaskArenaRank":                 102,
	"TaskKillBossHallKillBoos":      104,
	"TaskRitualTargetFinish":        106,
	"TaskMysteryBossKill":           107,
	"TaskPersonalBossKill":          108,
	"TaskAddFriendCnt":              109,
	"TaskFinishMainTaskCnt":         110,
	"TaskOwnFashionCnt":             111,
	"TaskRoleLvlUpCnt":              112,
	"TaskSoulLvlUpCnt":              113,
	"TaskPerformRitual":             114,
	"TaskJoinPersonBossAcc":         115,
	"TaskJoinPersonBoss":            116,
	"TaskBossHallKillRewardAcc":     117,
	"TaskBossHallKillReward":        118,
	"TaskBossHallJoinRewardAcc":     119,
	"TaskBossHallJoinReward":        120,
	"TaskLvlUpSkillAcc":             121,
	"TaskLvlUpSkill":                122,
	"TaskTotalSkillLvl":             123,
	"TaskHaveLvlUpperSkill":         124,
	"TaskChooseSkillAcc":            125,
	"TaskInlayLvlUpperStone":        126,
	"TaskInlayRune":                 127,
	"TaskRuneLvlUp":                 128,
	"TaskOweLvlUpperRune":           129,
	"TaskTowerChallengeSucc":        130,
	"TaskRelicsQualityGetAcc":       131,
	"TaskReachTitle":                132,
	"TaskGetQualityEquipmentAcc":    133,
	"TaskGetQualityEquipment":       134,
	"TaskEndPersonalBossRoundAcc":   135,
	"TaskEndPersonalBossRound":      136,
	"TaskSoulLvlReach":              137,
	"TaskMeltNStarsUpper":           138,
	"TaskFinishRLDungeon":           139,
	"TaskGetForeverFashion":         140,
	"TaskRuneLvlUpAcc":              141,
	"TaskReceiveDiscord":            142,
	"TaskEnhanceEquipUpperLevel":    143,
	"TaskActiveFashion":             144,
	"TaskRecycleEquip":              145,
	"TaskHangUpExp":                 146,
	"TaskShareEquip":                147,
}

func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{2}
}

type TaskKind int32

const (
	TaskKind_Daily       TaskKind = 0
	TaskKind_Weekly      TaskKind = 1
	TaskKind_NPC         TaskKind = 2
	TaskKind_Main        TaskKind = 3
	TaskKind_Side        TaskKind = 4
	TaskKind_Ritual      TaskKind = 5
	TaskKind_Achievement TaskKind = 6
)

var TaskKind_name = map[int32]string{
	0: "Daily",
	1: "Weekly",
	2: "NPC",
	3: "Main",
	4: "Side",
	5: "Ritual",
	6: "Achievement",
}

var TaskKind_value = map[string]int32{
	"Daily":       0,
	"Weekly":      1,
	"NPC":         2,
	"Main":        3,
	"Side":        4,
	"Ritual":      5,
	"Achievement": 6,
}

func (TaskKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{3}
}

type RewardType int32

const (
	RewardType_TypeItem RewardType = 0
	RewardType_TypeAttr RewardType = 1
)

var RewardType_name = map[int32]string{
	0: "TypeItem",
	1: "TypeAttr",
}

var RewardType_value = map[string]int32{
	"TypeItem": 0,
	"TypeAttr": 1,
}

func (RewardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{4}
}

type AttrBonusType int32

const (
	AttrBonusType_TypeAtlas      AttrBonusType = 0
	AttrBonusType_TypeRelics     AttrBonusType = 1
	AttrBonusType_TypeLoopTask   AttrBonusType = 2
	AttrBonusType_TypeTitle      AttrBonusType = 3
	AttrBonusType_TypeRelicsFunc AttrBonusType = 4
)

var AttrBonusType_name = map[int32]string{
	0: "TypeAtlas",
	1: "TypeRelics",
	2: "TypeLoopTask",
	3: "TypeTitle",
	4: "TypeRelicsFunc",
}

var AttrBonusType_value = map[string]int32{
	"TypeAtlas":      0,
	"TypeRelics":     1,
	"TypeLoopTask":   2,
	"TypeTitle":      3,
	"TypeRelicsFunc": 4,
}

func (AttrBonusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{5}
}

type SystemType int32

const (
	SystemType_SystemPadding         SystemType = 0
	SystemType_SystemEmail           SystemType = 1
	SystemType_SystemTask            SystemType = 2
	SystemType_SystemBag             SystemType = 3
	SystemType_SystemChat            SystemType = 4
	SystemType_SystemFriend          SystemType = 5
	SystemType_SystemMainTask        SystemType = 6
	SystemType_SystemSpaceGap        SystemType = 7
	SystemType_SystemAuction         SystemType = 8
	SystemType_SystemRanking         SystemType = 9
	SystemType_SystemTower           SystemType = 10
	SystemType_SystemDungeon         SystemType = 11
	SystemType_SystemLevelUp         SystemType = 12
	SystemType_SystemRelics          SystemType = 13
	SystemType_SystemShop            SystemType = 14
	SystemType_SystemArena           SystemType = 15
	SystemType_SystemGacha           SystemType = 16
	SystemType_SystemAtlas           SystemType = 17
	SystemType_SystemMainCity        SystemType = 1001
	SystemType_SystemMainBattle      SystemType = 1002
	SystemType_SystemPlayer          SystemType = 1003
	SystemType_SystemGuild           SystemType = 1004
	SystemType_SystemDailyTask       SystemType = 2001
	SystemType_SystemWeeklyTask      SystemType = 2002
	SystemType_SystemAchievement     SystemType = 2003
	SystemType_SystemChaosRitual     SystemType = 2004
	SystemType_SystemForge           SystemType = 2011
	SystemType_SystemDailySale       SystemType = 10002
	SystemType_SystemLevelGrowthFund SystemType = 10004
	SystemType_SystemWeeklySale      SystemType = 10008
	SystemType_SystemMonthlyCard     SystemType = 10011
	SystemType_SystemStellargemShop  SystemType = 10013
	SystemType_SystemPasses          SystemType = 10014
	SystemType_SystemZeroBuy         SystemType = 10015
	SystemType_SystemLimitTimePack   SystemType = 10020
)

var SystemType_name = map[int32]string{
	0:     "SystemPadding",
	1:     "SystemEmail",
	2:     "SystemTask",
	3:     "SystemBag",
	4:     "SystemChat",
	5:     "SystemFriend",
	6:     "SystemMainTask",
	7:     "SystemSpaceGap",
	8:     "SystemAuction",
	9:     "SystemRanking",
	10:    "SystemTower",
	11:    "SystemDungeon",
	12:    "SystemLevelUp",
	13:    "SystemRelics",
	14:    "SystemShop",
	15:    "SystemArena",
	16:    "SystemGacha",
	17:    "SystemAtlas",
	1001:  "SystemMainCity",
	1002:  "SystemMainBattle",
	1003:  "SystemPlayer",
	1004:  "SystemGuild",
	2001:  "SystemDailyTask",
	2002:  "SystemWeeklyTask",
	2003:  "SystemAchievement",
	2004:  "SystemChaosRitual",
	2011:  "SystemForge",
	10002: "SystemDailySale",
	10004: "SystemLevelGrowthFund",
	10008: "SystemWeeklySale",
	10011: "SystemMonthlyCard",
	10013: "SystemStellargemShop",
	10014: "SystemPasses",
	10015: "SystemZeroBuy",
	10020: "SystemLimitTimePack",
}

var SystemType_value = map[string]int32{
	"SystemPadding":         0,
	"SystemEmail":           1,
	"SystemTask":            2,
	"SystemBag":             3,
	"SystemChat":            4,
	"SystemFriend":          5,
	"SystemMainTask":        6,
	"SystemSpaceGap":        7,
	"SystemAuction":         8,
	"SystemRanking":         9,
	"SystemTower":           10,
	"SystemDungeon":         11,
	"SystemLevelUp":         12,
	"SystemRelics":          13,
	"SystemShop":            14,
	"SystemArena":           15,
	"SystemGacha":           16,
	"SystemAtlas":           17,
	"SystemMainCity":        1001,
	"SystemMainBattle":      1002,
	"SystemPlayer":          1003,
	"SystemGuild":           1004,
	"SystemDailyTask":       2001,
	"SystemWeeklyTask":      2002,
	"SystemAchievement":     2003,
	"SystemChaosRitual":     2004,
	"SystemForge":           2011,
	"SystemDailySale":       10002,
	"SystemLevelGrowthFund": 10004,
	"SystemWeeklySale":      10008,
	"SystemMonthlyCard":     10011,
	"SystemStellargemShop":  10013,
	"SystemPasses":          10014,
	"SystemZeroBuy":         10015,
	"SystemLimitTimePack":   10020,
}

func (SystemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{6}
}

// 战斗力组成部分
type CombatValueType int32

const (
	CombatValueType_CVTInvalid         CombatValueType = 0
	CombatValueType_CVTLevel           CombatValueType = 1
	CombatValueType_CVTEquip           CombatValueType = 2
	CombatValueType_CVTSkill           CombatValueType = 3
	CombatValueType_CVTRelics          CombatValueType = 4
	CombatValueType_CVTAtlas           CombatValueType = 5
	CombatValueType_CVTTask            CombatValueType = 6
	CombatValueType_CVTTitle           CombatValueType = 7
	CombatValueType_CVTSoulContract    CombatValueType = 8
	CombatValueType_CVTFashion         CombatValueType = 9
	CombatValueType_CVTGuildBless      CombatValueType = 10
	CombatValueType_CVTSpecialStoneAtk CombatValueType = 11
)

var CombatValueType_name = map[int32]string{
	0:  "CVTInvalid",
	1:  "CVTLevel",
	2:  "CVTEquip",
	3:  "CVTSkill",
	4:  "CVTRelics",
	5:  "CVTAtlas",
	6:  "CVTTask",
	7:  "CVTTitle",
	8:  "CVTSoulContract",
	9:  "CVTFashion",
	10: "CVTGuildBless",
	11: "CVTSpecialStoneAtk",
}

var CombatValueType_value = map[string]int32{
	"CVTInvalid":         0,
	"CVTLevel":           1,
	"CVTEquip":           2,
	"CVTSkill":           3,
	"CVTRelics":          4,
	"CVTAtlas":           5,
	"CVTTask":            6,
	"CVTTitle":           7,
	"CVTSoulContract":    8,
	"CVTFashion":         9,
	"CVTGuildBless":      10,
	"CVTSpecialStoneAtk": 11,
}

func (CombatValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{7}
}

// 词条加成类型 对应 relics_skilltype 表
type EntrySkillType int32

const (
	EntrySkillType_ESTInvalid                           EntrySkillType = 0
	EntrySkillType_ESTAttrAdd                           EntrySkillType = 2
	EntrySkillType_ESTHeroAttrAdd                       EntrySkillType = 3
	EntrySkillType_ESTUpgradeLvExpSub                   EntrySkillType = 4
	EntrySkillType_ESTIdleExpAdd                        EntrySkillType = 5
	EntrySkillType_ESTMonthCardAdd                      EntrySkillType = 6
	EntrySkillType_ESTQuarterCardAdd                    EntrySkillType = 7
	EntrySkillType_ESTForgeEquipQualityAdd              EntrySkillType = 9
	EntrySkillType_ESTDivinationNumAdd                  EntrySkillType = 10
	EntrySkillType_ESTArenaChallengeNumAdd              EntrySkillType = 11
	EntrySkillType_ESTRoguelikeChallengeNumAdd          EntrySkillType = 12
	EntrySkillType_ESTExpeditionExecutionLimitAdd       EntrySkillType = 13
	EntrySkillType_ESTExpeditionExecutionRecoverRateAdd EntrySkillType = 14
	EntrySkillType_ESTAnecdoteCurrencyAdd               EntrySkillType = 15
)

var EntrySkillType_name = map[int32]string{
	0:  "ESTInvalid",
	2:  "ESTAttrAdd",
	3:  "ESTHeroAttrAdd",
	4:  "ESTUpgradeLvExpSub",
	5:  "ESTIdleExpAdd",
	6:  "ESTMonthCardAdd",
	7:  "ESTQuarterCardAdd",
	9:  "ESTForgeEquipQualityAdd",
	10: "ESTDivinationNumAdd",
	11: "ESTArenaChallengeNumAdd",
	12: "ESTRoguelikeChallengeNumAdd",
	13: "ESTExpeditionExecutionLimitAdd",
	14: "ESTExpeditionExecutionRecoverRateAdd",
	15: "ESTAnecdoteCurrencyAdd",
}

var EntrySkillType_value = map[string]int32{
	"ESTInvalid":                           0,
	"ESTAttrAdd":                           2,
	"ESTHeroAttrAdd":                       3,
	"ESTUpgradeLvExpSub":                   4,
	"ESTIdleExpAdd":                        5,
	"ESTMonthCardAdd":                      6,
	"ESTQuarterCardAdd":                    7,
	"ESTForgeEquipQualityAdd":              9,
	"ESTDivinationNumAdd":                  10,
	"ESTArenaChallengeNumAdd":              11,
	"ESTRoguelikeChallengeNumAdd":          12,
	"ESTExpeditionExecutionLimitAdd":       13,
	"ESTExpeditionExecutionRecoverRateAdd": 14,
	"ESTAnecdoteCurrencyAdd":               15,
}

func (EntrySkillType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{8}
}

// 装备共鸣状态
type ResonanceStatus int32

const (
	ResonanceStatus_RSInvalid   ResonanceStatus = 0
	ResonanceStatus_RSReached   ResonanceStatus = 1
	ResonanceStatus_RSActivated ResonanceStatus = 2
)

var ResonanceStatus_name = map[int32]string{
	0: "RSInvalid",
	1: "RSReached",
	2: "RSActivated",
}

var ResonanceStatus_value = map[string]int32{
	"RSInvalid":   0,
	"RSReached":   1,
	"RSActivated": 2,
}

func (ResonanceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c170c50fddd359d, []int{9}
}

func init() {
	proto.RegisterEnum("models.RewardStatus", RewardStatus_name, RewardStatus_value)
	proto.RegisterEnum("models.TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterEnum("models.TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("models.TaskKind", TaskKind_name, TaskKind_value)
	proto.RegisterEnum("models.RewardType", RewardType_name, RewardType_value)
	proto.RegisterEnum("models.AttrBonusType", AttrBonusType_name, AttrBonusType_value)
	proto.RegisterEnum("models.SystemType", SystemType_name, SystemType_value)
	proto.RegisterEnum("models.CombatValueType", CombatValueType_name, CombatValueType_value)
	proto.RegisterEnum("models.EntrySkillType", EntrySkillType_name, EntrySkillType_value)
	proto.RegisterEnum("models.ResonanceStatus", ResonanceStatus_name, ResonanceStatus_value)
}

func init() { proto.RegisterFile("proto/models/enums.proto", fileDescriptor_9c170c50fddd359d) }

var fileDescriptor_9c170c50fddd359d = []byte{
	// 2426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x18, 0x49, 0x7b, 0x1c, 0x47,
	0x55, 0x2d, 0xcb, 0x92, 0x5d, 0xb2, 0xa4, 0xe7, 0xb6, 0x1d, 0x6f, 0xc9, 0x38, 0x09, 0x01, 0x82,
	0x20, 0x31, 0x10, 0x08, 0x3b, 0x44, 0x1a, 0x8f, 0x46, 0x4e, 0xa4, 0xb1, 0x32, 0x3d, 0x92, 0x49,
	0xc2, 0x56, 0xee, 0x7e, 0x9e, 0x69, 0x54, 0x53, 0xd5, 0xe9, 0xae, 0x1e, 0x69, 0xd8, 0xf7, 0x7d,
	0x09, 0x81, 0x03, 0xdf, 0xc7, 0x76, 0xe1, 0xc0, 0x4f, 0xc9, 0x31, 0x10, 0x0e, 0xf9, 0x3e, 0x2e,
	0x60, 0x5f, 0xd8, 0x0e, 0x5c, 0xb9, 0xf1, 0xbd, 0x5a, 0xba, 0x67, 0x64, 0x73, 0x9a, 0xa9, 0xb7,
	0xd4, 0xdb, 0xdf, 0xab, 0xd7, 0xec, 0x42, 0x96, 0x2b, 0xad, 0xae, 0x0e, 0x55, 0x82, 0xa2, 0xb8,
	0x8a, 0xb2, 0x1c, 0x16, 0x4f, 0x1a, 0x50, 0x38, 0x6f, 0x61, 0xab, 0x4f, 0xb3, 0x53, 0x5d, 0x3c,
	0xe0, 0x79, 0x12, 0x69, 0xae, 0xcb, 0x22, 0x64, 0x6c, 0x7e, 0x4b, 0xc5, 0xfb, 0x98, 0xc0, 0x4c,
	0x78, 0x8a, 0x9d, 0xd8, 0x95, 0xc2, 0x9e, 0x02, 0x3a, 0x75, 0x31, 0xc6, 0x74, 0x84, 0x09, 0xcc,
	0xae, 0xbe, 0xc0, 0x58, 0x8f, 0x17, 0xfb, 0x8e, 0x6b, 0x99, 0xb1, 0x8e, 0xd2, 0x91, 0xe6, 0xb9,
	0x36, 0x9c, 0xcb, 0x8c, 0xed, 0xe4, 0x2a, 0xc6, 0xa2, 0x48, 0x65, 0x1f, 0x82, 0x70, 0x89, 0x9d,
	0x6c, 0xaa, 0x61, 0x26, 0x90, 0xd0, 0xb3, 0x74, 0xd5, 0x46, 0x2a, 0xd3, 0x62, 0x80, 0x09, 0x1c,
	0x23, 0xe2, 0x26, 0x97, 0x7a, 0x2d, 0x8e, 0x31, 0xd3, 0x30, 0xb7, 0xfa, 0xeb, 0xcb, 0xec, 0x04,
	0xdd, 0xdd, 0x1b, 0x67, 0x48, 0x9c, 0xf4, 0x7f, 0x4b, 0xf5, 0x53, 0x09, 0x33, 0xe1, 0x39, 0x76,
	0x9a, 0x8e, 0xd7, 0x78, 0x2a, 0xc6, 0x6b, 0xb1, 0x4e, 0x47, 0xa9, 0x1e, 0x43, 0x10, 0x3e, 0xc0,
	0x42, 0x02, 0xdf, 0x44, 0xdc, 0x9f, 0x80, 0xcf, 0x56, 0xdc, 0x38, 0x42, 0x01, 0xc7, 0xc2, 0x90,
	0x2d, 0xd3, 0x71, 0x9b, 0x67, 0x9d, 0x2c, 0xee, 0x71, 0xb1, 0x0f, 0x73, 0xe1, 0x19, 0xb6, 0x42,
	0xb0, 0x66, 0xaa, 0xc7, 0x1e, 0x78, 0xdc, 0x8b, 0x71, 0xc0, 0x75, 0xae, 0xb5, 0x40, 0x98, 0x27,
	0xbd, 0x0d, 0xbf, 0x1a, 0x21, 0x2c, 0x78, 0xce, 0xe7, 0x52, 0x21, 0xb6, 0x95, 0x2c, 0x34, 0xe6,
	0x70, 0x22, 0x5c, 0x61, 0x8b, 0x86, 0x53, 0x09, 0x81, 0xb1, 0x86, 0x93, 0xe1, 0x69, 0xb6, 0xe4,
	0x64, 0x46, 0xe5, 0xad, 0x61, 0xaa, 0x81, 0x79, 0x35, 0xe8, 0x76, 0x07, 0x5b, 0x24, 0x27, 0x10,
	0xac, 0xcd, 0xf5, 0x00, 0x73, 0x38, 0x15, 0x02, 0x3b, 0xe5, 0xd8, 0x5a, 0x23, 0x94, 0x1a, 0x96,
	0x6a, 0x48, 0x2a, 0xe9, 0x17, 0x96, 0xbd, 0xd5, 0xd6, 0x71, 0x15, 0x7c, 0x25, 0xbc, 0xc0, 0xce,
	0x5a, 0x1d, 0xac, 0xc7, 0x2b, 0x0c, 0x84, 0x67, 0x19, 0xd0, 0xbf, 0x4d, 0x2e, 0x6e, 0xaf, 0xab,
	0x64, 0x6c, 0xac, 0x3d, 0xed, 0xef, 0x69, 0xa3, 0xbe, 0xae, 0x71, 0xe8, 0xae, 0x84, 0xd0, 0x1b,
	0x38, 0x01, 0x87, 0x33, 0xe1, 0x45, 0x76, 0xce, 0x00, 0x55, 0x6f, 0x90, 0xab, 0xb2, 0x3f, 0xd8,
	0xe6, 0xd9, 0x8e, 0x4a, 0xa5, 0x86, 0xb3, 0x5e, 0xee, 0x0e, 0x2f, 0x0a, 0x92, 0x29, 0x52, 0x89,
	0x86, 0xe9, 0x5c, 0x78, 0x89, 0x3d, 0x50, 0x6b, 0x6a, 0x62, 0x3b, 0x40, 0x79, 0x93, 0xa7, 0x1a,
	0x1e, 0xf0, 0x5c, 0xce, 0x85, 0x9b, 0x3b, 0xeb, 0x28, 0xd4, 0x41, 0x4f, 0xc1, 0x79, 0x1f, 0x05,
	0xaf, 0xff, 0x75, 0x99, 0xe0, 0x21, 0x5c, 0xf0, 0x46, 0x98, 0xa0, 0xb6, 0x0e, 0x33, 0xa1, 0x72,
	0x84, 0x8b, 0x9e, 0xb8, 0x9d, 0x8e, 0x50, 0x56, 0x5e, 0xbb, 0xe4, 0x7d, 0xbd, 0x99, 0x6a, 0x1f,
	0xa3, 0x86, 0x27, 0x5d, 0x2f, 0x53, 0x91, 0xb4, 0x5e, 0x2e, 0xd3, 0x8c, 0xcc, 0xbd, 0xe2, 0x49,
	0x6b, 0x30, 0x3c, 0x1c, 0x3e, 0xc8, 0x2e, 0x54, 0xb0, 0xe7, 0x4b, 0x2e, 0x52, 0x3d, 0xae, 0x38,
	0x1e, 0xf1, 0xbe, 0xb8, 0x07, 0x0b, 0x8f, 0x7a, 0xab, 0x0c, 0xaa, 0xc7, 0xf3, 0x3e, 0x6a, 0x8b,
	0x79, 0x8b, 0x57, 0xbf, 0x8d, 0xba, 0x8b, 0x22, 0x8d, 0x0b, 0xba, 0xea, 0x31, 0x9f, 0xa9, 0x3b,
	0xea, 0x00, 0x73, 0x78, 0xab, 0x0f, 0x09, 0xe5, 0xd6, 0x9a, 0x1c, 0x7b, 0xd5, 0xdf, 0xe6, 0xb3,
	0xe9, 0x59, 0x95, 0xca, 0x36, 0x5d, 0x0d, 0x6f, 0xf7, 0x9c, 0x3d, 0xc3, 0xf9, 0xb8, 0xd7, 0xa9,
	0x25, 0x07, 0x5c, 0xc6, 0x68, 0x84, 0xda, 0xf4, 0x7f, 0x47, 0x78, 0x99, 0x9d, 0xaf, 0x1c, 0xb7,
	0x9b, 0x59, 0xe9, 0x9d, 0x72, 0x48, 0x0a, 0xac, 0x7a, 0x85, 0x8f, 0x22, 0xe1, 0x9d, 0x55, 0x80,
	0x30, 0xef, 0x63, 0xa4, 0x95, 0x44, 0xc7, 0xf3, 0xae, 0x2a, 0x40, 0x93, 0x18, 0x78, 0xc2, 0xab,
	0x40, 0x79, 0x70, 0xad, 0x94, 0x7d, 0x54, 0xd2, 0x71, 0x3c, 0xe9, 0xed, 0x9a, 0x46, 0xc1, 0x55,
	0x9f, 0x20, 0x93, 0x29, 0xef, 0x78, 0xde, 0x1d, 0x9e, 0x67, 0x67, 0xee, 0x83, 0x83, 0xf7, 0x54,
	0xf9, 0x9f, 0xa3, 0xe4, 0xb6, 0x46, 0x09, 0xfe, 0x5e, 0xcf, 0x60, 0x1c, 0xb4, 0xae, 0x0a, 0x6f,
	0xe3, 0x53, 0x95, 0xeb, 0x27, 0x10, 0xf0, 0xbe, 0x3a, 0x8a, 0xe3, 0x68, 0xa0, 0x32, 0x4a, 0x75,
	0xc7, 0xf0, 0x7e, 0x2f, 0x61, 0x1a, 0x05, 0x4f, 0x87, 0x8f, 0xb0, 0x87, 0x4c, 0x1b, 0x4a, 0x87,
	0x28, 0x8b, 0x54, 0x49, 0x2b, 0xfd, 0x86, 0xac, 0x8a, 0xe1, 0x03, 0xff, 0x87, 0xc4, 0x15, 0x4d,
	0x27, 0x8b, 0xe1, 0x83, 0x5e, 0x9d, 0x2e, 0x8f, 0x53, 0xd9, 0x77, 0x32, 0x3f, 0xe4, 0x43, 0x5c,
	0x41, 0xe1, 0xc3, 0xd3, 0x84, 0x5d, 0x8c, 0x55, 0x9e, 0xc0, 0x47, 0x7c, 0x5c, 0xae, 0xa5, 0xa3,
	0x54, 0x72, 0x9d, 0x56, 0x5e, 0xfe, 0x68, 0xd5, 0x25, 0x27, 0x31, 0xf0, 0xb1, 0xaa, 0x9e, 0x79,
	0x3c, 0xe0, 0x8e, 0xf6, 0xe3, 0xbe, 0xad, 0x78, 0x20, 0x7c, 0xc2, 0x1b, 0xdd, 0x54, 0xb2, 0x28,
	0x87, 0x48, 0x46, 0x13, 0xe5, 0x33, 0x55, 0xa7, 0xac, 0xe1, 0xb0, 0xe6, 0x73, 0xaa, 0xcd, 0x53,
	0x69, 0x72, 0x6d, 0x58, 0x47, 0x6e, 0xdd, 0x6b, 0x78, 0x14, 0x09, 0x4d, 0xef, 0x73, 0x9b, 0x66,
	0x66, 0x6e, 0x38, 0xa6, 0x6b, 0x5e, 0xfc, 0x34, 0x0a, 0x5a, 0xfe, 0xb2, 0xd6, 0x61, 0x86, 0x49,
	0x3a, 0x61, 0xee, 0x86, 0xe7, 0x98, 0xc6, 0x40, 0xdb, 0xbb, 0xad, 0x25, 0xe3, 0x01, 0xf7, 0xf7,
	0x6f, 0x7a, 0xff, 0x56, 0x50, 0xb8, 0xee, 0xaf, 0xa6, 0x6a, 0xdb, 0x11, 0x7c, 0x8c, 0xb9, 0x23,
	0x7e, 0xd6, 0x7b, 0x72, 0x0a, 0x03, 0xcf, 0xf9, 0x56, 0xd1, 0x55, 0x02, 0xdb, 0x68, 0x2e, 0xd9,
	0xf2, 0x30, 0x57, 0x78, 0x04, 0xdb, 0x0e, 0x1b, 0xec, 0x92, 0x99, 0x92, 0xaa, 0x14, 0x4d, 0x25,
	0x75, 0xce, 0x63, 0xdd, 0x53, 0x9a, 0x0b, 0x5b, 0x91, 0x9d, 0xf0, 0x21, 0x76, 0xf1, 0x28, 0x7e,
	0x13, 0x73, 0x65, 0xd1, 0x37, 0xee, 0x87, 0xde, 0xcd, 0x12, 0xae, 0xcd, 0xed, 0x3b, 0xf7, 0xa4,
	0x98, 0x6b, 0x13, 0xed, 0x5c, 0x95, 0xd9, 0x86, 0xe0, 0x7d, 0x78, 0xde, 0x1b, 0x6b, 0xa7, 0x2d,
	0x65, 0x5d, 0xd7, 0x57, 0xc7, 0x4d, 0xe4, 0xb9, 0x09, 0x8a, 0xb3, 0x35, 0xf2, 0xee, 0x32, 0xe3,
	0x13, 0x7b, 0x5c, 0x50, 0x03, 0xed, 0x79, 0xdf, 0xec, 0x66, 0xfd, 0x9c, 0x27, 0x0e, 0x4c, 0xf4,
	0xbb, 0xde, 0x37, 0x53, 0x18, 0xd8, 0xf3, 0xd1, 0xb0, 0x22, 0xab, 0x4e, 0x7c, 0xd3, 0x97, 0x78,
	0x17, 0x6f, 0xa7, 0xd2, 0xf6, 0xa5, 0x48, 0x28, 0xe3, 0xbb, 0x4f, 0x7a, 0x43, 0xef, 0xc5, 0x91,
	0xa4, 0x17, 0xa6, 0x53, 0x62, 0x6b, 0x24, 0x8c, 0x0f, 0xe1, 0xc5, 0xaa, 0x54, 0x3c, 0x1c, 0x5e,
	0xaa, 0x67, 0x22, 0x19, 0x11, 0xed, 0xa7, 0x42, 0x34, 0xa5, 0x86, 0x4f, 0x79, 0x65, 0x5b, 0x52,
	0x63, 0x4e, 0xb3, 0x38, 0x46, 0x89, 0xf0, 0x69, 0x6f, 0x5d, 0x37, 0xd5, 0x25, 0x17, 0xf6, 0xb1,
	0x43, 0x01, 0x80, 0xcf, 0x78, 0x6f, 0x34, 0x07, 0x4a, 0x15, 0xde, 0xb8, 0xcf, 0xfa, 0xeb, 0xb7,
	0xb9, 0x24, 0xfa, 0xcc, 0xc1, 0x3f, 0xe7, 0x8d, 0xbb, 0x2e, 0x05, 0x1f, 0x1b, 0xa9, 0xa6, 0x1d,
	0x92, 0xf6, 0x7c, 0x5a, 0x46, 0xed, 0x1a, 0xb8, 0x55, 0x3d, 0x04, 0xd4, 0x70, 0x98, 0x9a, 0x19,
	0x0b, 0xb1, 0x4f, 0x19, 0xd3, 0xf9, 0x85, 0x50, 0x31, 0xd7, 0xe8, 0xe2, 0x4a, 0xae, 0x4a, 0x7c,
	0xe5, 0x4c, 0x4f, 0x06, 0x42, 0xa1, 0x77, 0x87, 0xe9, 0x87, 0x5d, 0x2e, 0xf7, 0xe1, 0xb6, 0x9f,
	0x5f, 0x44, 0x4d, 0x0d, 0x6f, 0x93, 0x0b, 0x61, 0xff, 0xab, 0x02, 0x06, 0x55, 0x48, 0x9c, 0x66,
	0x34, 0xa5, 0x9c, 0x6e, 0x9f, 0xf7, 0x69, 0xb2, 0x3d, 0xa6, 0xfb, 0xc7, 0xc4, 0x4c, 0x8c, 0xb0,
	0x5f, 0x4d, 0x79, 0xcc, 0x0b, 0x25, 0xb9, 0xa8, 0x30, 0xa2, 0x4a, 0xa0, 0x24, 0xd9, 0xc8, 0x53,
	0x94, 0x09, 0x79, 0x7e, 0xe8, 0x15, 0xf6, 0xf9, 0x60, 0x67, 0x39, 0xa1, 0xa4, 0x0f, 0xca, 0x8d,
	0x03, 0xb9, 0xc1, 0x8b, 0x41, 0xaa, 0x24, 0x81, 0x55, 0xd5, 0xee, 0x94, 0xc0, 0xad, 0x91, 0xd8,
	0xcd, 0x08, 0x9a, 0x79, 0x28, 0x15, 0x43, 0x05, 0x7d, 0xd9, 0x5f, 0xb1, 0x83, 0xf9, 0x6d, 0x95,
	0x0f, 0xad, 0x25, 0x90, 0x7b, 0xa1, 0x34, 0x27, 0xad, 0xa2, 0xa4, 0x26, 0x85, 0xa3, 0xf0, 0x21,
	0x9c, 0x46, 0x81, 0xf6, 0x39, 0x38, 0xe9, 0x26, 0xfb, 0x32, 0x26, 0xb6, 0xd2, 0xfb, 0xea, 0x5e,
	0x34, 0x8c, 0x8e, 0xb2, 0xd2, 0xd5, 0x35, 0xeb, 0xc1, 0x51, 0xd6, 0x1a, 0x0d, 0x87, 0x5e, 0x7f,
	0x63, 0x91, 0x49, 0x1c, 0x62, 0x19, 0xfb, 0xcc, 0xa8, 0xc1, 0xf0, 0x05, 0x4f, 0x6a, 0x92, 0xdf,
	0xc0, 0x28, 0xe3, 0xbf, 0xe8, 0x4d, 0xdd, 0xe4, 0x23, 0xeb, 0xad, 0x0c, 0x73, 0xcb, 0xf1, 0xa5,
	0xaa, 0x93, 0x9b, 0x1c, 0xae, 0x6e, 0xff, 0xf2, 0x54, 0xb6, 0x56, 0x3c, 0x94, 0xb0, 0xf0, 0x15,
	0x9f, 0x44, 0x06, 0xd7, 0x2d, 0x25, 0xc2, 0x57, 0xc3, 0xd0, 0x95, 0x59, 0x29, 0xad, 0x04, 0xf8,
	0x5a, 0x10, 0x5e, 0xb0, 0xe9, 0x71, 0xe3, 0xa0, 0x12, 0x6a, 0x88, 0xbf, 0x1e, 0x84, 0x97, 0xdd,
	0x28, 0xa7, 0xf7, 0x48, 0x73, 0xc0, 0x85, 0x40, 0xd9, 0xc7, 0xa8, 0x8c, 0x63, 0xf8, 0x46, 0x10,
	0x3e, 0x68, 0xc7, 0x85, 0xad, 0x58, 0xf7, 0x64, 0x6a, 0xa3, 0x69, 0x28, 0xdf, 0x0c, 0xc2, 0x33,
	0xae, 0xad, 0x22, 0x8f, 0x07, 0xbd, 0x94, 0xde, 0xdc, 0xdf, 0x0a, 0xc2, 0x2b, 0xb6, 0x20, 0xda,
	0xa8, 0x27, 0x9f, 0x58, 0x43, 0xd7, 0x86, 0xbe, 0x5d, 0xdd, 0x79, 0x1f, 0x02, 0xf8, 0x4e, 0x10,
	0x3e, 0xcc, 0x2e, 0xdb, 0xc2, 0x4f, 0x26, 0x33, 0xb6, 0xab, 0x4a, 0x69, 0xa2, 0xf3, 0xdd, 0x20,
	0x7c, 0xc8, 0xd6, 0xc8, 0xfd, 0x28, 0xe0, 0x7b, 0x41, 0x78, 0x6e, 0x2a, 0xef, 0x8c, 0x6e, 0xf0,
	0xfd, 0xca, 0x01, 0xdb, 0x28, 0x74, 0x87, 0xa6, 0x54, 0x61, 0x9c, 0x00, 0x3f, 0xa8, 0x30, 0x36,
	0xe1, 0xbb, 0x5b, 0xee, 0x9d, 0x03, 0x3f, 0x0c, 0xc2, 0x4b, 0xee, 0xed, 0x8c, 0x7a, 0x43, 0xe5,
	0x38, 0xc2, 0xdc, 0xa5, 0x3d, 0xfc, 0xa8, 0x12, 0x53, 0x39, 0x99, 0x94, 0xfb, 0x71, 0x10, 0x9e,
	0xf7, 0xad, 0xcf, 0x6c, 0x5e, 0xd7, 0xd2, 0xc2, 0x0c, 0xff, 0x9f, 0x54, 0x6e, 0x99, 0x7c, 0xe7,
	0x19, 0x0d, 0xec, 0xec, 0xf8, 0x29, 0xed, 0x44, 0xa7, 0xeb, 0x4e, 0xe8, 0x05, 0xbd, 0x52, 0x0b,
	0xc2, 0x78, 0x1c, 0x0b, 0xcb, 0x08, 0x3f, 0x0b, 0x7c, 0x90, 0x37, 0xb9, 0xec, 0xef, 0x66, 0xad,
	0xc3, 0x0c, 0x5e, 0xad, 0xe2, 0x11, 0x0d, 0x78, 0xee, 0x08, 0x7f, 0x1e, 0xac, 0xbe, 0x64, 0x97,
	0xa0, 0xe7, 0x52, 0x99, 0x84, 0x27, 0xd9, 0x71, 0xb3, 0x8a, 0xc1, 0x0c, 0x2d, 0x8e, 0x76, 0xfd,
	0x82, 0x20, 0x5c, 0x60, 0xc7, 0x3a, 0x3b, 0x4d, 0x98, 0x0d, 0x4f, 0xb0, 0x39, 0xaa, 0x78, 0x38,
	0x46, 0xff, 0xa2, 0x34, 0x41, 0x98, 0x23, 0x42, 0x57, 0xa6, 0xc7, 0x69, 0x5b, 0x5a, 0x8b, 0x07,
	0x29, 0x8e, 0xd0, 0x84, 0x6b, 0x7e, 0xf5, 0x71, 0xc6, 0x6c, 0x69, 0x98, 0xe5, 0x8f, 0xf6, 0xad,
	0x71, 0x66, 0x9f, 0x1a, 0x33, 0xfe, 0xb4, 0xa6, 0x75, 0x0e, 0xc1, 0x6a, 0xcc, 0x96, 0xe8, 0xdf,
	0xba, 0x92, 0x65, 0x51, 0x6d, 0x8a, 0x06, 0x2d, 0x78, 0x61, 0x57, 0x50, 0x3a, 0xda, 0x4c, 0x83,
	0xc0, 0xbc, 0x73, 0xc6, 0x19, 0x6e, 0x29, 0x95, 0x99, 0xa5, 0x64, 0xd6, 0x33, 0xd8, 0x44, 0xb3,
	0xcb, 0x61, 0xc5, 0xb0, 0x51, 0xca, 0x18, 0xe6, 0x56, 0x5f, 0x3b, 0xce, 0x58, 0x44, 0x1d, 0x70,
	0x68, 0x44, 0x9c, 0x66, 0x4b, 0xf6, 0xb4, 0xc3, 0x93, 0x84, 0x36, 0xdb, 0x19, 0xb2, 0xc0, 0x82,
	0x5a, 0x43, 0x9e, 0x0a, 0x08, 0x48, 0xae, 0xe3, 0xa8, 0xa4, 0xd8, 0xf3, 0x3a, 0xef, 0xdb, 0x65,
	0xd7, 0x1e, 0x9b, 0x03, 0xae, 0x61, 0x8e, 0xd4, 0xb2, 0x67, 0xdb, 0x32, 0xe1, 0x38, 0xe9, 0x61,
	0x21, 0xd5, 0xde, 0x36, 0x5f, 0xc3, 0xa2, 0x8c, 0xc7, 0xd8, 0xe6, 0x19, 0x2c, 0xd4, 0xca, 0xac,
	0x95, 0x31, 0x3d, 0x7a, 0xe0, 0x44, 0x0d, 0xa2, 0xee, 0x4f, 0xfa, 0x9d, 0xac, 0xf5, 0xb3, 0xfb,
	0x01, 0xab, 0x69, 0x7c, 0x5e, 0x2e, 0xd6, 0x20, 0xf7, 0xf8, 0xb7, 0xeb, 0xa7, 0xbb, 0xc9, 0xfa,
	0x6f, 0xa9, 0x56, 0x9c, 0x5e, 0xc2, 0xb0, 0x5c, 0x5f, 0x6c, 0xc6, 0x0d, 0xac, 0xd4, 0x00, 0xf3,
	0x94, 0x04, 0x98, 0xa0, 0x30, 0x21, 0x39, 0x4d, 0xe9, 0x54, 0x5b, 0x46, 0xdb, 0x2f, 0xfc, 0x63,
	0x81, 0xd2, 0xb1, 0x06, 0xba, 0x4d, 0xfb, 0x9f, 0x64, 0x9d, 0x53, 0xc0, 0x3e, 0xbb, 0xe0, 0x5f,
	0x0b, 0x21, 0x54, 0x02, 0xcc, 0xe6, 0xf3, 0xef, 0x85, 0xf0, 0x2c, 0x5b, 0x71, 0xb6, 0x50, 0x12,
	0x1a, 0x5f, 0xfd, 0x71, 0xa5, 0xbe, 0xd1, 0xe6, 0xa3, 0x01, 0xff, 0x69, 0x85, 0xea, 0xc1, 0xa9,
	0x33, 0x91, 0x71, 0x6f, 0x4c, 0xc0, 0x9b, 0x03, 0xae, 0x0a, 0x97, 0x9a, 0x7f, 0x5e, 0xa9, 0xc5,
	0x6d, 0xa8, 0xbc, 0x8f, 0xf0, 0x97, 0x95, 0x23, 0xe2, 0x22, 0x2e, 0x10, 0x5e, 0xed, 0x50, 0x51,
	0x4f, 0x78, 0xaf, 0x9d, 0xab, 0x03, 0x3d, 0xd8, 0xa0, 0xde, 0xf1, 0x8b, 0xce, 0x51, 0x55, 0x0c,
	0xcb, 0x2f, 0x3b, 0xb5, 0xc8, 0x6d, 0x25, 0xf5, 0x40, 0x8c, 0x9b, 0x34, 0x0b, 0x7e, 0xd5, 0x09,
	0x2f, 0xb2, 0xb3, 0xce, 0xc7, 0x1a, 0x85, 0xa0, 0x79, 0x6c, 0xbd, 0xfd, 0x9b, 0xce, 0x84, 0x3f,
	0x78, 0x51, 0x60, 0x01, 0xbf, 0xed, 0x50, 0xc5, 0x5a, 0xd0, 0x8b, 0x98, 0xab, 0xf5, 0x72, 0x0c,
	0xbf, 0xeb, 0x50, 0xef, 0x71, 0xca, 0xa4, 0xc3, 0x54, 0xf7, 0xd2, 0x21, 0xee, 0xf0, 0x78, 0x1f,
	0x7e, 0xdf, 0x59, 0x7d, 0x23, 0x60, 0x2b, 0x4d, 0x35, 0xbc, 0xc5, 0xf5, 0x1e, 0x17, 0x25, 0x9a,
	0x7c, 0x5e, 0x66, 0xac, 0xb9, 0xd7, 0xbb, 0x2e, 0x47, 0x5c, 0xa4, 0xee, 0x83, 0x4f, 0x73, 0xaf,
	0x67, 0x3b, 0x48, 0xe0, 0x4e, 0xb6, 0xee, 0x67, 0xdd, 0xc9, 0x4e, 0x96, 0x63, 0xe6, 0x83, 0xce,
	0x5e, 0xcf, 0x25, 0xc7, 0x9c, 0x43, 0xda, 0x38, 0x1f, 0x0f, 0x17, 0xd9, 0x42, 0x73, 0xaf, 0xe7,
	0x52, 0xd7, 0xa2, 0x6c, 0x91, 0x99, 0x6f, 0x26, 0x74, 0xcb, 0xc4, 0x83, 0x16, 0x4e, 0x38, 0x35,
	0x7c, 0x8b, 0x32, 0x9f, 0x4c, 0x9a, 0x7b, 0x3d, 0xbb, 0xa5, 0x09, 0x2c, 0x0a, 0x60, 0x34, 0xc9,
	0x88, 0x2f, 0xc3, 0x38, 0xe5, 0xee, 0x6d, 0xa5, 0xf7, 0x61, 0x71, 0xf5, 0xbf, 0xb3, 0x6c, 0xb9,
	0x25, 0x75, 0x6e, 0x1f, 0x5d, 0xde, 0xa8, 0x56, 0x34, 0x61, 0x94, 0x3d, 0x53, 0xaf, 0x58, 0x4b,
	0x12, 0x98, 0xa5, 0x5a, 0x6a, 0x45, 0x3d, 0x7a, 0xe5, 0x79, 0xd8, 0x31, 0xba, 0xbe, 0x15, 0xf5,
	0xdc, 0x4b, 0x76, 0x6b, 0xd4, 0x3a, 0xcc, 0xa2, 0xf2, 0x16, 0xcc, 0x91, 0x26, 0x74, 0x57, 0x22,
	0xb0, 0x75, 0x98, 0x11, 0xe9, 0x71, 0xb2, 0xa0, 0x15, 0xf5, 0x4c, 0xe0, 0x28, 0x6c, 0x04, 0x9c,
	0xa7, 0xd1, 0xdc, 0x8a, 0x7a, 0xcf, 0x97, 0x3c, 0xd7, 0x98, 0x7b, 0xf0, 0x02, 0x2d, 0x47, 0xad,
	0xa8, 0x67, 0xf2, 0xc7, 0xb8, 0xd1, 0xcd, 0x27, 0x42, 0x9e, 0xa4, 0x07, 0x56, 0x2b, 0xea, 0x4d,
	0x6f, 0x6f, 0x49, 0x02, 0xcc, 0x71, 0x99, 0xb2, 0xaa, 0xe6, 0xa7, 0x43, 0x2e, 0x86, 0x57, 0xd8,
	0xe5, 0x56, 0xd4, 0xeb, 0xaa, 0x7e, 0x89, 0x22, 0xdd, 0xc7, 0xa3, 0x04, 0xa7, 0xc2, 0x47, 0x59,
	0xa3, 0x15, 0xf5, 0xea, 0x5d, 0xa8, 0x75, 0x88, 0x71, 0x49, 0x7f, 0x4c, 0x46, 0x10, 0xcd, 0x52,
	0xf8, 0x38, 0x7b, 0xec, 0xfe, 0x34, 0xb4, 0x5b, 0x8e, 0x30, 0xef, 0x72, 0x8d, 0x44, 0xb9, 0x4c,
	0x2f, 0x05, 0xd2, 0x45, 0x62, 0x9c, 0x28, 0x8d, 0xcd, 0x32, 0xcf, 0x51, 0xc6, 0xc6, 0x80, 0x95,
	0xd5, 0x67, 0xd8, 0x4a, 0x17, 0x69, 0x5e, 0xca, 0x18, 0xdd, 0x77, 0xc0, 0x25, 0x76, 0xb2, 0x1b,
	0xd5, 0xae, 0x37, 0x47, 0x33, 0x31, 0xcd, 0x17, 0xc4, 0x15, 0xb6, 0xd8, 0x8d, 0xcc, 0x3c, 0xe2,
	0xe6, 0x3b, 0xe0, 0xfa, 0xf6, 0x9b, 0x7f, 0x6b, 0xcc, 0xfc, 0xe1, 0x4e, 0x23, 0x78, 0xed, 0x4e,
	0x23, 0x78, 0xfd, 0x4e, 0x23, 0xf8, 0xeb, 0x9d, 0x46, 0xf0, 0xf7, 0x3b, 0x8d, 0x99, 0xff, 0xdc,
	0x69, 0x04, 0xaf, 0xdc, 0x6d, 0xcc, 0xbc, 0x76, 0xb7, 0x11, 0xbc, 0x7e, 0xb7, 0x31, 0xf3, 0xe6,
	0xdd, 0xc6, 0xcc, 0x8b, 0x57, 0x62, 0x95, 0xca, 0x27, 0x0a, 0xcc, 0x47, 0x98, 0x5f, 0x8d, 0xd5,
	0x70, 0xa8, 0xe4, 0xd5, 0xc9, 0xef, 0x9b, 0xb7, 0xe6, 0xcd, 0xe9, 0xa9, 0xff, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x97, 0x7c, 0x44, 0xa8, 0xf6, 0x14, 0x00, 0x00,
}

func init() {
}
func (x RewardStatus) String() string {
	s, ok := RewardStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TaskStatus) String() string {
	s, ok := TaskStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TaskType) String() string {
	s, ok := TaskType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TaskKind) String() string {
	s, ok := TaskKind_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x RewardType) String() string {
	s, ok := RewardType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x AttrBonusType) String() string {
	s, ok := AttrBonusType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x SystemType) String() string {
	s, ok := SystemType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CombatValueType) String() string {
	s, ok := CombatValueType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x EntrySkillType) String() string {
	s, ok := EntrySkillType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ResonanceStatus) String() string {
	s, ok := ResonanceStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

var _ = coin_server_common_proto_jsonany.Any{}
