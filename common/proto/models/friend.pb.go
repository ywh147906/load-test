// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/models/friend.proto

package models

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RecvGiftType int32

const (
	RecvGiftType_neither     RecvGiftType = 0
	RecvGiftType_recv_no_get RecvGiftType = 1
	RecvGiftType_get         RecvGiftType = 2
)

var RecvGiftType_name = map[int32]string{
	0: "neither",
	1: "recv_no_get",
	2: "get",
}

var RecvGiftType_value = map[string]int32{
	"neither":     0,
	"recv_no_get": 1,
	"get":         2,
}

func (RecvGiftType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7c7cc46cad9a0f6e, []int{0}
}

// 好友列表
type FriendInfo struct {
	// RoleId
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// 添加好友时间
	CreateAt int64 `protobuf:"zigzag64,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// 接收礼物状态
	IsRecv RecvGiftType `protobuf:"varint,3,opt,name=is_recv,json=isRecv,proto3,enum=models.RecvGiftType" json:"is_recv,omitempty"`
	// 发送状态
	IsSend bool `protobuf:"varint,4,opt,name=is_send,json=isSend,proto3" json:"is_send,omitempty"`
	// 用户姓名
	NickName string `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	// 用户关卡数
	Stage string `protobuf:"bytes,6,opt,name=stage,proto3" json:"stage,omitempty"`
	// 用户战斗力
	Power int64 `protobuf:"zigzag64,7,opt,name=power,proto3" json:"power,omitempty"`
	// 头像
	Avatar int64 `protobuf:"zigzag64,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 头像框
	AvatarFrame int64 `protobuf:"zigzag64,9,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	// 等级
	Lvl int64 `protobuf:"zigzag64,10,opt,name=lvl,proto3" json:"lvl,omitempty"`
	// 上次在线时间
	LastLoginAt int64 `protobuf:"zigzag64,11,opt,name=last_login_at,json=lastLoginAt,proto3" json:"last_login_at,omitempty"`
	// 上次离线时间
	LastLogoutAt int64 `protobuf:"zigzag64,12,opt,name=last_logout_at,json=lastLogoutAt,proto3" json:"last_logout_at,omitempty"`
}

func (m *FriendInfo) Reset()      { *m = FriendInfo{} }
func (*FriendInfo) ProtoMessage() {}
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c7cc46cad9a0f6e, []int{0}
}
func (m *FriendInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendInfo.Merge(m, src)
}
func (m *FriendInfo) XXX_Size() int {
	return m.Size()
}
func (m *FriendInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendInfo proto.InternalMessageInfo

func (m *FriendInfo) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *FriendInfo) GetCreateAt() int64 {
	if m != nil {
		return m.CreateAt
	}
	return 0
}

func (m *FriendInfo) GetIsRecv() RecvGiftType {
	if m != nil {
		return m.IsRecv
	}
	return RecvGiftType_neither
}

func (m *FriendInfo) GetIsSend() bool {
	if m != nil {
		return m.IsSend
	}
	return false
}

func (m *FriendInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *FriendInfo) GetStage() string {
	if m != nil {
		return m.Stage
	}
	return ""
}

func (m *FriendInfo) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *FriendInfo) GetAvatar() int64 {
	if m != nil {
		return m.Avatar
	}
	return 0
}

func (m *FriendInfo) GetAvatarFrame() int64 {
	if m != nil {
		return m.AvatarFrame
	}
	return 0
}

func (m *FriendInfo) GetLvl() int64 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (m *FriendInfo) GetLastLoginAt() int64 {
	if m != nil {
		return m.LastLoginAt
	}
	return 0
}

func (m *FriendInfo) GetLastLogoutAt() int64 {
	if m != nil {
		return m.LastLogoutAt
	}
	return 0
}

func (*FriendInfo) XXX_MessageName() string {
	return "models.FriendInfo"
}

// 邀请列表
type RequestInfo struct {
	// RoleId
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// 添加好友时间
	CreateAt int64 `protobuf:"zigzag64,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// 用户姓名
	NickName string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	// 用户战斗力
	Power int64 `protobuf:"zigzag64,4,opt,name=power,proto3" json:"power,omitempty"`
	// 头像
	Avatar int64 `protobuf:"zigzag64,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 头像框
	AvatarFrame int64 `protobuf:"zigzag64,6,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	// 等级
	Lvl int64 `protobuf:"zigzag64,7,opt,name=lvl,proto3" json:"lvl,omitempty"`
}

func (m *RequestInfo) Reset()      { *m = RequestInfo{} }
func (*RequestInfo) ProtoMessage() {}
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c7cc46cad9a0f6e, []int{1}
}
func (m *RequestInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestInfo.Merge(m, src)
}
func (m *RequestInfo) XXX_Size() int {
	return m.Size()
}
func (m *RequestInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RequestInfo proto.InternalMessageInfo

func (m *RequestInfo) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *RequestInfo) GetCreateAt() int64 {
	if m != nil {
		return m.CreateAt
	}
	return 0
}

func (m *RequestInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *RequestInfo) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *RequestInfo) GetAvatar() int64 {
	if m != nil {
		return m.Avatar
	}
	return 0
}

func (m *RequestInfo) GetAvatarFrame() int64 {
	if m != nil {
		return m.AvatarFrame
	}
	return 0
}

func (m *RequestInfo) GetLvl() int64 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (*RequestInfo) XXX_MessageName() string {
	return "models.RequestInfo"
}

// 黑名单列表
type BlackListInfo struct {
	// RoleId
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// 添加好友时间
	CreateAt int64 `protobuf:"zigzag64,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// 用户姓名
	NickName string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	// 用户战斗力
	Power int64 `protobuf:"zigzag64,4,opt,name=power,proto3" json:"power,omitempty"`
	// 头像
	Avatar int64 `protobuf:"zigzag64,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 头像框
	AvatarFrame int64 `protobuf:"zigzag64,6,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	// 等级
	Lvl int64 `protobuf:"zigzag64,7,opt,name=lvl,proto3" json:"lvl,omitempty"`
}

func (m *BlackListInfo) Reset()      { *m = BlackListInfo{} }
func (*BlackListInfo) ProtoMessage() {}
func (*BlackListInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c7cc46cad9a0f6e, []int{2}
}
func (m *BlackListInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BlackListInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BlackListInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BlackListInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlackListInfo.Merge(m, src)
}
func (m *BlackListInfo) XXX_Size() int {
	return m.Size()
}
func (m *BlackListInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlackListInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlackListInfo proto.InternalMessageInfo

func (m *BlackListInfo) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *BlackListInfo) GetCreateAt() int64 {
	if m != nil {
		return m.CreateAt
	}
	return 0
}

func (m *BlackListInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *BlackListInfo) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *BlackListInfo) GetAvatar() int64 {
	if m != nil {
		return m.Avatar
	}
	return 0
}

func (m *BlackListInfo) GetAvatarFrame() int64 {
	if m != nil {
		return m.AvatarFrame
	}
	return 0
}

func (m *BlackListInfo) GetLvl() int64 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (*BlackListInfo) XXX_MessageName() string {
	return "models.BlackListInfo"
}
func init() {
	proto.RegisterEnum("models.RecvGiftType", RecvGiftType_name, RecvGiftType_value)
	proto.RegisterType((*FriendInfo)(nil), "models.FriendInfo")
	proto.RegisterType((*RequestInfo)(nil), "models.RequestInfo")
	proto.RegisterType((*BlackListInfo)(nil), "models.BlackListInfo")
}

func init() { proto.RegisterFile("proto/models/friend.proto", fileDescriptor_7c7cc46cad9a0f6e) }

var fileDescriptor_7c7cc46cad9a0f6e = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0x3d, 0x49, 0x63, 0x27, 0xd7, 0x69, 0x89, 0x46, 0x15, 0x18, 0x21, 0x0d, 0x21, 0x62,
	0x11, 0x21, 0x35, 0x91, 0x40, 0x3c, 0x40, 0xba, 0x28, 0xaa, 0x54, 0x58, 0x18, 0x56, 0x6c, 0xac,
	0xc1, 0xbe, 0x09, 0xa3, 0xda, 0x33, 0x61, 0x3c, 0x31, 0xe2, 0x2d, 0x78, 0x0c, 0xde, 0x03, 0x21,
	0x75, 0xd9, 0x65, 0x97, 0xe0, 0x6c, 0x10, 0x2b, 0x1e, 0x01, 0xcd, 0x4c, 0x41, 0x45, 0xfc, 0x6c,
	0x58, 0xb1, 0xbb, 0xe7, 0x3b, 0xd7, 0x3e, 0x9e, 0xa3, 0x31, 0xdc, 0x5c, 0x6b, 0x65, 0xd4, 0xbc,
	0x52, 0x05, 0x96, 0xf5, 0x7c, 0xa9, 0x05, 0xca, 0x62, 0xe6, 0x18, 0x0d, 0x3d, 0x9c, 0x7c, 0xe9,
	0x00, 0x1c, 0x39, 0xe3, 0x58, 0x2e, 0x15, 0xbd, 0x01, 0x91, 0x56, 0x25, 0x66, 0xa2, 0x48, 0xc8,
	0x98, 0x4c, 0x07, 0x69, 0x68, 0xe5, 0x71, 0x41, 0x6f, 0xc1, 0x20, 0xd7, 0xc8, 0x0d, 0x66, 0xdc,
	0x24, 0x9d, 0x31, 0x99, 0xd2, 0xb4, 0xef, 0xc1, 0xc2, 0xd0, 0x03, 0x88, 0x44, 0x9d, 0x69, 0xcc,
	0x9b, 0xa4, 0x3b, 0x26, 0xd3, 0xbd, 0xfb, 0xfb, 0x33, 0xff, 0xfa, 0x59, 0x8a, 0x79, 0xf3, 0x48,
	0x2c, 0xcd, 0xb3, 0x37, 0x6b, 0x4c, 0x43, 0x51, 0x5b, 0x6d, 0x43, 0x44, 0x9d, 0xd5, 0x28, 0x8b,
	0x64, 0x67, 0x4c, 0xa6, 0x7d, 0x6b, 0x3c, 0x45, 0xe9, 0x42, 0xa4, 0xc8, 0x4f, 0x33, 0xc9, 0x2b,
	0x4c, 0x7a, 0x2e, 0xbf, 0x6f, 0xc1, 0x13, 0x5e, 0x21, 0xdd, 0x87, 0x5e, 0x6d, 0xf8, 0x0a, 0x93,
	0xd0, 0x19, 0x5e, 0x58, 0xba, 0x56, 0xaf, 0x51, 0x27, 0x91, 0xfb, 0x26, 0x2f, 0xe8, 0x75, 0x08,
	0x79, 0xc3, 0x0d, 0xd7, 0x49, 0xdf, 0xe1, 0x4b, 0x45, 0xef, 0xc0, 0xd0, 0x4f, 0xd9, 0x52, 0xdb,
	0x8c, 0x81, 0x73, 0x63, 0xcf, 0x8e, 0x2c, 0xa2, 0x23, 0xe8, 0x96, 0x4d, 0x99, 0x80, 0x73, 0xec,
	0x48, 0x27, 0xb0, 0x5b, 0xf2, 0xda, 0x64, 0xa5, 0x5a, 0x09, 0x69, 0x8f, 0x1f, 0xfb, 0xa7, 0x2c,
	0x3c, 0xb1, 0x6c, 0x61, 0xe8, 0x5d, 0xd8, 0xfb, 0xbe, 0xa3, 0x36, 0xc6, 0x2e, 0x0d, 0xdd, 0xd2,
	0xf0, 0x72, 0x49, 0x6d, 0xcc, 0xc2, 0x4c, 0xde, 0x13, 0x88, 0x53, 0x7c, 0xb5, 0xc1, 0xda, 0xfc,
	0x43, 0xdb, 0x3f, 0xb5, 0xd4, 0xfd, 0xb5, 0x25, 0xdf, 0xc7, 0xce, 0xef, 0xfb, 0xe8, 0xfd, 0xb5,
	0x8f, 0xf0, 0x8f, 0x7d, 0x44, 0x3f, 0xfa, 0x98, 0x7c, 0x20, 0xb0, 0x7b, 0x58, 0xf2, 0xfc, 0xf4,
	0x44, 0xfc, 0xcf, 0xe7, 0xb8, 0xf7, 0x10, 0x86, 0x57, 0xaf, 0x27, 0x8d, 0x21, 0x92, 0x28, 0xcc,
	0x4b, 0xd4, 0xa3, 0x80, 0x5e, 0x83, 0xd8, 0xde, 0xe7, 0x4c, 0xaa, 0x6c, 0x85, 0x66, 0x44, 0x68,
	0x04, 0x5d, 0x3b, 0x74, 0x0e, 0x1f, 0x5f, 0x7c, 0x62, 0xc1, 0xbb, 0x96, 0x91, 0xb3, 0x96, 0x91,
	0xf3, 0x96, 0x91, 0x8f, 0x2d, 0x23, 0x9f, 0x5b, 0x16, 0x7c, 0x6d, 0x19, 0x79, 0xbb, 0x65, 0xc1,
	0xd9, 0x96, 0x91, 0xf3, 0x2d, 0x0b, 0x2e, 0xb6, 0x2c, 0x78, 0x7e, 0x3b, 0x57, 0x42, 0x1e, 0xd4,
	0xa8, 0x1b, 0xd4, 0xf3, 0x5c, 0x55, 0x95, 0x92, 0xf3, 0xab, 0x7f, 0xe5, 0x8b, 0xd0, 0xa9, 0x07,
	0xdf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x94, 0xb8, 0xde, 0x83, 0xac, 0x03, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFriendInfo.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolRequestInfo.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolBlackListInfo.Get().(proto.Message)
	})
}

var poolFriendInfo = &sync.Pool{New: func() interface{} { return &FriendInfo{} }}

func (m *FriendInfo) ReleasePool() { m.Reset(); poolFriendInfo.Put(m); m = nil }

var poolRequestInfo = &sync.Pool{New: func() interface{} { return &RequestInfo{} }}

func (m *RequestInfo) ReleasePool() { m.Reset(); poolRequestInfo.Put(m); m = nil }

var poolBlackListInfo = &sync.Pool{New: func() interface{} { return &BlackListInfo{} }}

func (m *BlackListInfo) ReleasePool() { m.Reset(); poolBlackListInfo.Put(m); m = nil }
func (x RecvGiftType) String() string {
	s, ok := RecvGiftType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *FriendInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*FriendInfo)
	if !ok {
		that2, ok := that.(FriendInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.CreateAt != that1.CreateAt {
		return false
	}
	if this.IsRecv != that1.IsRecv {
		return false
	}
	if this.IsSend != that1.IsSend {
		return false
	}
	if this.NickName != that1.NickName {
		return false
	}
	if this.Stage != that1.Stage {
		return false
	}
	if this.Power != that1.Power {
		return false
	}
	if this.Avatar != that1.Avatar {
		return false
	}
	if this.AvatarFrame != that1.AvatarFrame {
		return false
	}
	if this.Lvl != that1.Lvl {
		return false
	}
	if this.LastLoginAt != that1.LastLoginAt {
		return false
	}
	if this.LastLogoutAt != that1.LastLogoutAt {
		return false
	}
	return true
}
func (this *RequestInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RequestInfo)
	if !ok {
		that2, ok := that.(RequestInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.CreateAt != that1.CreateAt {
		return false
	}
	if this.NickName != that1.NickName {
		return false
	}
	if this.Power != that1.Power {
		return false
	}
	if this.Avatar != that1.Avatar {
		return false
	}
	if this.AvatarFrame != that1.AvatarFrame {
		return false
	}
	if this.Lvl != that1.Lvl {
		return false
	}
	return true
}
func (this *BlackListInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BlackListInfo)
	if !ok {
		that2, ok := that.(BlackListInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.CreateAt != that1.CreateAt {
		return false
	}
	if this.NickName != that1.NickName {
		return false
	}
	if this.Power != that1.Power {
		return false
	}
	if this.Avatar != that1.Avatar {
		return false
	}
	if this.AvatarFrame != that1.AvatarFrame {
		return false
	}
	if this.Lvl != that1.Lvl {
		return false
	}
	return true
}
func (m *FriendInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FriendInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastLogoutAt != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.LastLogoutAt)<<1)^uint64((m.LastLogoutAt>>63))))
		i--
		dAtA[i] = 0x60
	}
	if m.LastLoginAt != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.LastLoginAt)<<1)^uint64((m.LastLoginAt>>63))))
		i--
		dAtA[i] = 0x58
	}
	if m.Lvl != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Lvl)<<1)^uint64((m.Lvl>>63))))
		i--
		dAtA[i] = 0x50
	}
	if m.AvatarFrame != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.AvatarFrame)<<1)^uint64((m.AvatarFrame>>63))))
		i--
		dAtA[i] = 0x48
	}
	if m.Avatar != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Avatar)<<1)^uint64((m.Avatar>>63))))
		i--
		dAtA[i] = 0x40
	}
	if m.Power != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Power)<<1)^uint64((m.Power>>63))))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Stage) > 0 {
		i -= len(m.Stage)
		copy(dAtA[i:], m.Stage)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.Stage)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IsSend {
		i--
		if m.IsSend {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.IsRecv != 0 {
		i = encodeVarintFriend(dAtA, i, uint64(m.IsRecv))
		i--
		dAtA[i] = 0x18
	}
	if m.CreateAt != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.CreateAt)<<1)^uint64((m.CreateAt>>63))))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RequestInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Lvl != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Lvl)<<1)^uint64((m.Lvl>>63))))
		i--
		dAtA[i] = 0x38
	}
	if m.AvatarFrame != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.AvatarFrame)<<1)^uint64((m.AvatarFrame>>63))))
		i--
		dAtA[i] = 0x30
	}
	if m.Avatar != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Avatar)<<1)^uint64((m.Avatar>>63))))
		i--
		dAtA[i] = 0x28
	}
	if m.Power != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Power)<<1)^uint64((m.Power>>63))))
		i--
		dAtA[i] = 0x20
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CreateAt != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.CreateAt)<<1)^uint64((m.CreateAt>>63))))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BlackListInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BlackListInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BlackListInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Lvl != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Lvl)<<1)^uint64((m.Lvl>>63))))
		i--
		dAtA[i] = 0x38
	}
	if m.AvatarFrame != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.AvatarFrame)<<1)^uint64((m.AvatarFrame>>63))))
		i--
		dAtA[i] = 0x30
	}
	if m.Avatar != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Avatar)<<1)^uint64((m.Avatar>>63))))
		i--
		dAtA[i] = 0x28
	}
	if m.Power != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.Power)<<1)^uint64((m.Power>>63))))
		i--
		dAtA[i] = 0x20
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CreateAt != 0 {
		i = encodeVarintFriend(dAtA, i, uint64((uint64(m.CreateAt)<<1)^uint64((m.CreateAt>>63))))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintFriend(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintFriend(dAtA []byte, offset int, v uint64) int {
	offset -= sovFriend(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *FriendInfo) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.CreateAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("create_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CreateAt))
		needWriteComma = true
	}
	if m.IsRecv != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("is_recv")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.IsRecv))
		needWriteComma = true
	}
	if m.IsSend {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("is_send")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.IsSend)
		needWriteComma = true
	}
	if m.NickName != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("nick_name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.NickName)
		needWriteComma = true
	}
	if m.Stage != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("stage")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Stage)
		needWriteComma = true
	}
	if m.Power != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("power")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Power))
		needWriteComma = true
	}
	if m.Avatar != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("avatar")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Avatar))
		needWriteComma = true
	}
	if m.AvatarFrame != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("avatar_frame")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.AvatarFrame))
		needWriteComma = true
	}
	if m.Lvl != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lvl")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lvl))
		needWriteComma = true
	}
	if m.LastLoginAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("last_login_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LastLoginAt))
		needWriteComma = true
	}
	if m.LastLogoutAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("last_logout_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LastLogoutAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *RequestInfo) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.CreateAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("create_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CreateAt))
		needWriteComma = true
	}
	if m.NickName != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("nick_name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.NickName)
		needWriteComma = true
	}
	if m.Power != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("power")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Power))
		needWriteComma = true
	}
	if m.Avatar != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("avatar")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Avatar))
		needWriteComma = true
	}
	if m.AvatarFrame != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("avatar_frame")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.AvatarFrame))
		needWriteComma = true
	}
	if m.Lvl != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lvl")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lvl))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *BlackListInfo) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.CreateAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("create_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CreateAt))
		needWriteComma = true
	}
	if m.NickName != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("nick_name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.NickName)
		needWriteComma = true
	}
	if m.Power != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("power")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Power))
		needWriteComma = true
	}
	if m.Avatar != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("avatar")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Avatar))
		needWriteComma = true
	}
	if m.AvatarFrame != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("avatar_frame")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.AvatarFrame))
		needWriteComma = true
	}
	if m.Lvl != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lvl")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lvl))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *FriendInfo) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *FriendInfo) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *FriendInfo) GoString() string {
	return m.String()
}

func (m *RequestInfo) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *RequestInfo) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *RequestInfo) GoString() string {
	return m.String()
}

func (m *BlackListInfo) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *BlackListInfo) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *BlackListInfo) GoString() string {
	return m.String()
}

func (m *FriendInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sozFriend(uint64(m.CreateAt))
	}
	if m.IsRecv != 0 {
		n += 1 + sovFriend(uint64(m.IsRecv))
	}
	if m.IsSend {
		n += 2
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	l = len(m.Stage)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	if m.Power != 0 {
		n += 1 + sozFriend(uint64(m.Power))
	}
	if m.Avatar != 0 {
		n += 1 + sozFriend(uint64(m.Avatar))
	}
	if m.AvatarFrame != 0 {
		n += 1 + sozFriend(uint64(m.AvatarFrame))
	}
	if m.Lvl != 0 {
		n += 1 + sozFriend(uint64(m.Lvl))
	}
	if m.LastLoginAt != 0 {
		n += 1 + sozFriend(uint64(m.LastLoginAt))
	}
	if m.LastLogoutAt != 0 {
		n += 1 + sozFriend(uint64(m.LastLogoutAt))
	}
	return n
}

func (m *RequestInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sozFriend(uint64(m.CreateAt))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	if m.Power != 0 {
		n += 1 + sozFriend(uint64(m.Power))
	}
	if m.Avatar != 0 {
		n += 1 + sozFriend(uint64(m.Avatar))
	}
	if m.AvatarFrame != 0 {
		n += 1 + sozFriend(uint64(m.AvatarFrame))
	}
	if m.Lvl != 0 {
		n += 1 + sozFriend(uint64(m.Lvl))
	}
	return n
}

func (m *BlackListInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sozFriend(uint64(m.CreateAt))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovFriend(uint64(l))
	}
	if m.Power != 0 {
		n += 1 + sozFriend(uint64(m.Power))
	}
	if m.Avatar != 0 {
		n += 1 + sozFriend(uint64(m.Avatar))
	}
	if m.AvatarFrame != 0 {
		n += 1 + sozFriend(uint64(m.AvatarFrame))
	}
	if m.Lvl != 0 {
		n += 1 + sozFriend(uint64(m.Lvl))
	}
	return n
}

func sovFriend(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFriend(x uint64) (n int) {
	return sovFriend(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FriendInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFriend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FriendInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FriendInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.CreateAt = int64(v)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRecv", wireType)
			}
			m.IsRecv = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsRecv |= RecvGiftType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSend", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSend = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Power = int64(v)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Avatar = int64(v)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarFrame", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.AvatarFrame = int64(v)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lvl", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Lvl = int64(v)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastLoginAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.LastLoginAt = int64(v)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastLogoutAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.LastLogoutAt = int64(v)
		default:
			iNdEx = preIndex
			skippy, err := skipFriend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFriend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFriend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.CreateAt = int64(v)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Power = int64(v)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Avatar = int64(v)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarFrame", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.AvatarFrame = int64(v)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lvl", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Lvl = int64(v)
		default:
			iNdEx = preIndex
			skippy, err := skipFriend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFriend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BlackListInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFriend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlackListInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlackListInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.CreateAt = int64(v)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFriend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFriend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Power = int64(v)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Avatar = int64(v)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarFrame", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.AvatarFrame = int64(v)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lvl", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Lvl = int64(v)
		default:
			iNdEx = preIndex
			skippy, err := skipFriend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFriend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFriend(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFriend
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFriend
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFriend
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFriend
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFriend
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFriend        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFriend          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFriend = fmt.Errorf("proto: unexpected end of group")
)
