// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/journey.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JourneyErrorCode int32

const (
	JourneyErrorCode_ErrJourneyFreeNotFlush JourneyErrorCode = 0
)

var JourneyErrorCode_name = map[int32]string{
	0: "ErrJourneyFreeNotFlush",
}

var JourneyErrorCode_value = map[string]int32{
	"ErrJourneyFreeNotFlush": 0,
}

func (JourneyErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0}
}

type Journey struct {
}

func (m *Journey) Reset()      { *m = Journey{} }
func (*Journey) ProtoMessage() {}
func (*Journey) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0}
}
func (m *Journey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey.Merge(m, src)
}
func (m *Journey) XXX_Size() int {
	return m.Size()
}
func (m *Journey) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey.DiscardUnknown(m)
}

var xxx_messageInfo_Journey proto.InternalMessageInfo

func (*Journey) XXX_MessageName() string {
	return "service.Journey"
}

type Journey_GetInfoRequest struct {
}

func (m *Journey_GetInfoRequest) Reset()      { *m = Journey_GetInfoRequest{} }
func (*Journey_GetInfoRequest) ProtoMessage() {}
func (*Journey_GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 0}
}
func (m *Journey_GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_GetInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_GetInfoRequest.Merge(m, src)
}
func (m *Journey_GetInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Journey_GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_GetInfoRequest proto.InternalMessageInfo

func (*Journey_GetInfoRequest) XXX_MessageName() string {
	return "service.Journey.GetInfoRequest"
}

type Journey_GetInfoResponse struct {
	FreeFlushSeconds    int64 `protobuf:"varint,1,opt,name=free_flush_seconds,json=freeFlushSeconds,proto3" json:"free_flush_seconds,omitempty"`
	TodayGotCoin        int64 `protobuf:"varint,2,opt,name=today_got_coin,json=todayGotCoin,proto3" json:"today_got_coin,omitempty"`
	RougelikeUsed       int64 `protobuf:"varint,3,opt,name=rougelike_used,json=rougelikeUsed,proto3" json:"rougelike_used,omitempty"`
	RougelikeTotal      int64 `protobuf:"varint,4,opt,name=rougelike_total,json=rougelikeTotal,proto3" json:"rougelike_total,omitempty"`
	TowerUsed           int64 `protobuf:"varint,5,opt,name=tower_used,json=towerUsed,proto3" json:"tower_used,omitempty"`
	TowerTotal          int64 `protobuf:"varint,6,opt,name=tower_total,json=towerTotal,proto3" json:"tower_total,omitempty"`
	ArenaSeconds        int64 `protobuf:"varint,7,opt,name=arena_seconds,json=arenaSeconds,proto3" json:"arena_seconds,omitempty"`
	PersonalBossSeconds int64 `protobuf:"varint,8,opt,name=personal_boss_seconds,json=personalBossSeconds,proto3" json:"personal_boss_seconds,omitempty"`
	BossHallSeconds     int64 `protobuf:"varint,9,opt,name=boss_hall_seconds,json=bossHallSeconds,proto3" json:"boss_hall_seconds,omitempty"`
	BossHallIsOpen      bool  `protobuf:"varint,10,opt,name=boss_hall_is_open,json=bossHallIsOpen,proto3" json:"boss_hall_is_open,omitempty"`
}

func (m *Journey_GetInfoResponse) Reset()      { *m = Journey_GetInfoResponse{} }
func (*Journey_GetInfoResponse) ProtoMessage() {}
func (*Journey_GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 1}
}
func (m *Journey_GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_GetInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_GetInfoResponse.Merge(m, src)
}
func (m *Journey_GetInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Journey_GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_GetInfoResponse proto.InternalMessageInfo

func (m *Journey_GetInfoResponse) GetFreeFlushSeconds() int64 {
	if m != nil {
		return m.FreeFlushSeconds
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetTodayGotCoin() int64 {
	if m != nil {
		return m.TodayGotCoin
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetRougelikeUsed() int64 {
	if m != nil {
		return m.RougelikeUsed
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetRougelikeTotal() int64 {
	if m != nil {
		return m.RougelikeTotal
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetTowerUsed() int64 {
	if m != nil {
		return m.TowerUsed
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetTowerTotal() int64 {
	if m != nil {
		return m.TowerTotal
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetArenaSeconds() int64 {
	if m != nil {
		return m.ArenaSeconds
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetPersonalBossSeconds() int64 {
	if m != nil {
		return m.PersonalBossSeconds
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetBossHallSeconds() int64 {
	if m != nil {
		return m.BossHallSeconds
	}
	return 0
}

func (m *Journey_GetInfoResponse) GetBossHallIsOpen() bool {
	if m != nil {
		return m.BossHallIsOpen
	}
	return false
}

func (*Journey_GetInfoResponse) XXX_MessageName() string {
	return "service.Journey.GetInfoResponse"
}

type Journey_OpenFreeChestRequest struct {
}

func (m *Journey_OpenFreeChestRequest) Reset()      { *m = Journey_OpenFreeChestRequest{} }
func (*Journey_OpenFreeChestRequest) ProtoMessage() {}
func (*Journey_OpenFreeChestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 2}
}
func (m *Journey_OpenFreeChestRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_OpenFreeChestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_OpenFreeChestRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_OpenFreeChestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_OpenFreeChestRequest.Merge(m, src)
}
func (m *Journey_OpenFreeChestRequest) XXX_Size() int {
	return m.Size()
}
func (m *Journey_OpenFreeChestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_OpenFreeChestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_OpenFreeChestRequest proto.InternalMessageInfo

func (*Journey_OpenFreeChestRequest) XXX_MessageName() string {
	return "service.Journey.OpenFreeChestRequest"
}

type Journey_OpenFreeChestResponse struct {
	Items []*models.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *Journey_OpenFreeChestResponse) Reset()      { *m = Journey_OpenFreeChestResponse{} }
func (*Journey_OpenFreeChestResponse) ProtoMessage() {}
func (*Journey_OpenFreeChestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 3}
}
func (m *Journey_OpenFreeChestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_OpenFreeChestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_OpenFreeChestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_OpenFreeChestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_OpenFreeChestResponse.Merge(m, src)
}
func (m *Journey_OpenFreeChestResponse) XXX_Size() int {
	return m.Size()
}
func (m *Journey_OpenFreeChestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_OpenFreeChestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_OpenFreeChestResponse proto.InternalMessageInfo

func (m *Journey_OpenFreeChestResponse) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*Journey_OpenFreeChestResponse) XXX_MessageName() string {
	return "service.Journey.OpenFreeChestResponse"
}

type Journey_OpenTokenChestRequest struct {
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (m *Journey_OpenTokenChestRequest) Reset()      { *m = Journey_OpenTokenChestRequest{} }
func (*Journey_OpenTokenChestRequest) ProtoMessage() {}
func (*Journey_OpenTokenChestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 4}
}
func (m *Journey_OpenTokenChestRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_OpenTokenChestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_OpenTokenChestRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_OpenTokenChestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_OpenTokenChestRequest.Merge(m, src)
}
func (m *Journey_OpenTokenChestRequest) XXX_Size() int {
	return m.Size()
}
func (m *Journey_OpenTokenChestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_OpenTokenChestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_OpenTokenChestRequest proto.InternalMessageInfo

func (m *Journey_OpenTokenChestRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (*Journey_OpenTokenChestRequest) XXX_MessageName() string {
	return "service.Journey.OpenTokenChestRequest"
}

type Journey_OpenTokenChestResponse struct {
	Items []*models.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *Journey_OpenTokenChestResponse) Reset()      { *m = Journey_OpenTokenChestResponse{} }
func (*Journey_OpenTokenChestResponse) ProtoMessage() {}
func (*Journey_OpenTokenChestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 5}
}
func (m *Journey_OpenTokenChestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_OpenTokenChestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_OpenTokenChestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_OpenTokenChestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_OpenTokenChestResponse.Merge(m, src)
}
func (m *Journey_OpenTokenChestResponse) XXX_Size() int {
	return m.Size()
}
func (m *Journey_OpenTokenChestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_OpenTokenChestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_OpenTokenChestResponse proto.InternalMessageInfo

func (m *Journey_OpenTokenChestResponse) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*Journey_OpenTokenChestResponse) XXX_MessageName() string {
	return "service.Journey.OpenTokenChestResponse"
}

type Journey_RoguelikeFinishPush struct {
	Success     bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RoguelikeId int64 `protobuf:"varint,2,opt,name=roguelike_id,json=roguelikeId,proto3" json:"roguelike_id,omitempty"`
}

func (m *Journey_RoguelikeFinishPush) Reset()      { *m = Journey_RoguelikeFinishPush{} }
func (*Journey_RoguelikeFinishPush) ProtoMessage() {}
func (*Journey_RoguelikeFinishPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5f486e4c033cab7, []int{0, 6}
}
func (m *Journey_RoguelikeFinishPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Journey_RoguelikeFinishPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Journey_RoguelikeFinishPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Journey_RoguelikeFinishPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Journey_RoguelikeFinishPush.Merge(m, src)
}
func (m *Journey_RoguelikeFinishPush) XXX_Size() int {
	return m.Size()
}
func (m *Journey_RoguelikeFinishPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Journey_RoguelikeFinishPush.DiscardUnknown(m)
}

var xxx_messageInfo_Journey_RoguelikeFinishPush proto.InternalMessageInfo

func (m *Journey_RoguelikeFinishPush) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Journey_RoguelikeFinishPush) GetRoguelikeId() int64 {
	if m != nil {
		return m.RoguelikeId
	}
	return 0
}

func (*Journey_RoguelikeFinishPush) XXX_MessageName() string {
	return "service.Journey.RoguelikeFinishPush"
}
func init() {
	proto.RegisterEnum("service.JourneyErrorCode", JourneyErrorCode_name, JourneyErrorCode_value)
	proto.RegisterType((*Journey)(nil), "service.Journey")
	proto.RegisterType((*Journey_GetInfoRequest)(nil), "service.Journey.GetInfoRequest")
	proto.RegisterType((*Journey_GetInfoResponse)(nil), "service.Journey.GetInfoResponse")
	proto.RegisterType((*Journey_OpenFreeChestRequest)(nil), "service.Journey.OpenFreeChestRequest")
	proto.RegisterType((*Journey_OpenFreeChestResponse)(nil), "service.Journey.OpenFreeChestResponse")
	proto.RegisterType((*Journey_OpenTokenChestRequest)(nil), "service.Journey.OpenTokenChestRequest")
	proto.RegisterType((*Journey_OpenTokenChestResponse)(nil), "service.Journey.OpenTokenChestResponse")
	proto.RegisterType((*Journey_RoguelikeFinishPush)(nil), "service.Journey.RoguelikeFinishPush")
}

func init() { proto.RegisterFile("proto/service/journey.proto", fileDescriptor_a5f486e4c033cab7) }

var fileDescriptor_a5f486e4c033cab7 = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xc1, 0x4f, 0x13, 0x4f,
	0x14, 0xc7, 0xbb, 0xbf, 0xfe, 0x4a, 0x61, 0x80, 0x52, 0x17, 0xa8, 0x9b, 0x35, 0xae, 0x15, 0x31,
	0x22, 0x11, 0x9a, 0xe0, 0x51, 0x0f, 0x06, 0x02, 0x58, 0x0f, 0x68, 0x56, 0xbc, 0x78, 0xd9, 0x2c,
	0xbb, 0x8f, 0x76, 0x65, 0x3b, 0xaf, 0xce, 0xcc, 0x6a, 0xb8, 0x79, 0x31, 0x31, 0x26, 0x26, 0xdc,
	0x88, 0x89, 0x1e, 0x4d, 0xd4, 0x8b, 0x1e, 0xd0, 0xc4, 0xc4, 0xc4, 0x2b, 0x47, 0x8e, 0x78, 0xd3,
	0xd6, 0x12, 0xb8, 0xf9, 0x27, 0x98, 0x9d, 0xe9, 0x2e, 0xd8, 0x9b, 0xa7, 0x66, 0x3e, 0xdf, 0xcf,
	0x7b, 0xed, 0xf4, 0xbd, 0x21, 0x67, 0x9a, 0x0c, 0x05, 0x56, 0x38, 0xb0, 0x47, 0x81, 0x07, 0x95,
	0x07, 0x18, 0x31, 0x0a, 0x9b, 0xb3, 0x92, 0xea, 0xf9, 0x2e, 0x36, 0x4f, 0x2b, 0xab, 0x81, 0x3e,
	0x84, 0xbc, 0xb2, 0xe6, 0x72, 0x50, 0x86, 0x59, 0xea, 0x09, 0x6a, 0x8a, 0x4f, 0x7c, 0xcf, 0x91,
	0xfc, 0x2d, 0xd5, 0xcb, 0x2c, 0x92, 0xc2, 0x32, 0x88, 0x2a, 0x5d, 0x47, 0x1b, 0x1e, 0x46, 0xc0,
	0x85, 0xf9, 0x26, 0x4b, 0x46, 0x52, 0xc4, 0x9b, 0x48, 0x39, 0xe8, 0x57, 0x88, 0xbe, 0xce, 0x00,
	0x9c, 0xf5, 0x30, 0xe2, 0x75, 0x87, 0x83, 0x87, 0xd4, 0xe7, 0x86, 0x56, 0xd6, 0xa6, 0xb2, 0x76,
	0x31, 0x4e, 0x96, 0xe2, 0xe0, 0xae, 0xe2, 0xfa, 0x24, 0x29, 0x08, 0xf4, 0xdd, 0x4d, 0xa7, 0x86,
	0xc2, 0xf1, 0x30, 0xa0, 0xc6, 0x7f, 0xd2, 0x1c, 0x92, 0x74, 0x19, 0xc5, 0x02, 0x06, 0x54, 0xbf,
	0x48, 0x0a, 0x0c, 0xa3, 0x1a, 0x84, 0xc1, 0x06, 0x38, 0x11, 0x07, 0xdf, 0xc8, 0x4a, 0x6b, 0x38,
	0xa5, 0xf7, 0x38, 0xf8, 0xfa, 0x25, 0x32, 0x72, 0xac, 0x09, 0x14, 0x6e, 0x68, 0xfc, 0x2f, 0xbd,
	0xe3, 0xea, 0xd5, 0x98, 0xea, 0x67, 0x09, 0x11, 0xf8, 0x18, 0x98, 0xea, 0x95, 0x93, 0xce, 0x80,
	0x24, 0xb2, 0xcf, 0x39, 0x32, 0xa8, 0x62, 0xd5, 0xa3, 0x4f, 0xe6, 0xaa, 0x42, 0xd5, 0x5f, 0x20,
	0xc3, 0x2e, 0x03, 0xea, 0xa6, 0xd7, 0xcb, 0xab, 0x1f, 0x2d, 0x61, 0x72, 0xb5, 0x39, 0x32, 0xde,
	0x04, 0xc6, 0x91, 0xba, 0xa1, 0xb3, 0x86, 0x9c, 0xa7, 0x72, 0xbf, 0x94, 0x47, 0x93, 0x70, 0x1e,
	0x39, 0x4f, 0x6a, 0xa6, 0xc9, 0x29, 0xa9, 0xd6, 0xdd, 0x30, 0x4c, 0xfd, 0x01, 0xe9, 0x8f, 0xc4,
	0xc1, 0x4d, 0x37, 0x0c, 0x13, 0xf7, 0xf2, 0x49, 0x37, 0xe0, 0x0e, 0x36, 0x81, 0x1a, 0xa4, 0xac,
	0x4d, 0xf5, 0xdb, 0x85, 0xc4, 0xad, 0xf2, 0xdb, 0x4d, 0xa0, 0x66, 0x89, 0x8c, 0xc5, 0x9f, 0x4b,
	0x0c, 0x60, 0xa1, 0x0e, 0x5c, 0x24, 0xf3, 0xbb, 0x46, 0xc6, 0x7b, 0x78, 0x77, 0x88, 0x13, 0x24,
	0x17, 0x08, 0x68, 0xc4, 0x73, 0xcb, 0x4e, 0x0d, 0xce, 0x0d, 0xcd, 0xaa, 0xc5, 0x98, 0xad, 0x0a,
	0x68, 0xd8, 0x2a, 0x32, 0x67, 0x54, 0xf1, 0x2a, 0x6e, 0x00, 0x3d, 0xd9, 0x55, 0x1f, 0x23, 0x39,
	0x0f, 0x23, 0x2a, 0xba, 0x43, 0x57, 0x07, 0xf3, 0x3a, 0x29, 0xf5, 0xea, 0xff, 0xf0, 0x65, 0x36,
	0x19, 0xb5, 0xb1, 0x16, 0xc9, 0x19, 0x2e, 0x05, 0x34, 0xe0, 0xf5, 0x3b, 0x11, 0xaf, 0xeb, 0x06,
	0xc9, 0xf3, 0xc8, 0xf3, 0x80, 0xab, 0x0d, 0xeb, 0xb7, 0x93, 0xa3, 0x7e, 0x9e, 0x0c, 0xb1, 0xa4,
	0xc0, 0x09, 0xfc, 0xee, 0x5a, 0x0d, 0xa6, 0xac, 0xea, 0x4f, 0xaf, 0x92, 0x62, 0x77, 0xb5, 0x17,
	0x19, 0x43, 0xb6, 0x80, 0x3e, 0xe8, 0x37, 0x48, 0x69, 0x91, 0xb1, 0x2e, 0x8e, 0xff, 0x97, 0x15,
	0x14, 0x72, 0x61, 0x8b, 0x19, 0x73, 0xf2, 0xf9, 0x27, 0xa3, 0xac, 0x5b, 0x9d, 0xa7, 0x2f, 0x0e,
	0x77, 0xbe, 0xfc, 0xfa, 0xf6, 0xfa, 0xe8, 0xe5, 0xbb, 0xce, 0xd7, 0x27, 0x9d, 0xad, 0x0f, 0x07,
	0xdb, 0x9f, 0x8f, 0xb6, 0x77, 0x0e, 0x5e, 0xbd, 0xef, 0x3c, 0xfb, 0x38, 0xbf, 0xb2, 0xff, 0xd3,
	0xca, 0xbc, 0x6d, 0x59, 0xda, 0x6e, 0xcb, 0xd2, 0xf6, 0x5a, 0x96, 0xf6, 0xa3, 0x65, 0x69, 0x87,
	0x2d, 0x2b, 0xf3, 0xbb, 0x65, 0x69, 0x5b, 0x6d, 0x2b, 0xb3, 0xdb, 0xb6, 0xb4, 0xbd, 0xb6, 0x95,
	0xd9, 0x6f, 0x5b, 0x99, 0xfb, 0xe5, 0x78, 0xe7, 0x67, 0xe2, 0xe7, 0x09, 0xac, 0xe2, 0x61, 0xa3,
	0x81, 0xb4, 0xf2, 0xd7, 0x4b, 0x5e, 0xeb, 0x93, 0xc7, 0xab, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x4c, 0x7a, 0x29, 0xe1, 0x03, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_GetInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_GetInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_OpenFreeChestRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_OpenFreeChestResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_OpenTokenChestRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_OpenTokenChestResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolJourney_RoguelikeFinishPush.Get().(proto.Message)
	})
}

var poolJourney = &sync.Pool{New: func() interface{} { return &Journey{} }}

func (m *Journey) ReleasePool() { m.Reset(); poolJourney.Put(m); m = nil }

var poolJourney_GetInfoRequest = &sync.Pool{New: func() interface{} { return &Journey_GetInfoRequest{} }}

func (m *Journey_GetInfoRequest) ReleasePool() { m.Reset(); poolJourney_GetInfoRequest.Put(m); m = nil }

var poolJourney_GetInfoResponse = &sync.Pool{New: func() interface{} { return &Journey_GetInfoResponse{} }}

func (m *Journey_GetInfoResponse) ReleasePool() {
	m.Reset()
	poolJourney_GetInfoResponse.Put(m)
	m = nil
}

var poolJourney_OpenFreeChestRequest = &sync.Pool{New: func() interface{} { return &Journey_OpenFreeChestRequest{} }}

func (m *Journey_OpenFreeChestRequest) ReleasePool() {
	m.Reset()
	poolJourney_OpenFreeChestRequest.Put(m)
	m = nil
}

var poolJourney_OpenFreeChestResponse = &sync.Pool{New: func() interface{} { return &Journey_OpenFreeChestResponse{} }}

func (m *Journey_OpenFreeChestResponse) ReleasePool() {
	m.Reset()
	poolJourney_OpenFreeChestResponse.Put(m)
	m = nil
}

var poolJourney_OpenTokenChestRequest = &sync.Pool{New: func() interface{} { return &Journey_OpenTokenChestRequest{} }}

func (m *Journey_OpenTokenChestRequest) ReleasePool() {
	m.Reset()
	poolJourney_OpenTokenChestRequest.Put(m)
	m = nil
}

var poolJourney_OpenTokenChestResponse = &sync.Pool{New: func() interface{} { return &Journey_OpenTokenChestResponse{} }}

func (m *Journey_OpenTokenChestResponse) ReleasePool() {
	m.Reset()
	poolJourney_OpenTokenChestResponse.Put(m)
	m = nil
}

var poolJourney_RoguelikeFinishPush = &sync.Pool{New: func() interface{} { return &Journey_RoguelikeFinishPush{} }}

func (m *Journey_RoguelikeFinishPush) ReleasePool() {
	m.Reset()
	poolJourney_RoguelikeFinishPush.Put(m)
	m = nil
}
func (x JourneyErrorCode) String() string {
	s, ok := JourneyErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Journey) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey)
	if !ok {
		that2, ok := that.(Journey)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Journey_GetInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_GetInfoRequest)
	if !ok {
		that2, ok := that.(Journey_GetInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Journey_GetInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_GetInfoResponse)
	if !ok {
		that2, ok := that.(Journey_GetInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FreeFlushSeconds != that1.FreeFlushSeconds {
		return false
	}
	if this.TodayGotCoin != that1.TodayGotCoin {
		return false
	}
	if this.RougelikeUsed != that1.RougelikeUsed {
		return false
	}
	if this.RougelikeTotal != that1.RougelikeTotal {
		return false
	}
	if this.TowerUsed != that1.TowerUsed {
		return false
	}
	if this.TowerTotal != that1.TowerTotal {
		return false
	}
	if this.ArenaSeconds != that1.ArenaSeconds {
		return false
	}
	if this.PersonalBossSeconds != that1.PersonalBossSeconds {
		return false
	}
	if this.BossHallSeconds != that1.BossHallSeconds {
		return false
	}
	if this.BossHallIsOpen != that1.BossHallIsOpen {
		return false
	}
	return true
}
func (this *Journey_OpenFreeChestRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_OpenFreeChestRequest)
	if !ok {
		that2, ok := that.(Journey_OpenFreeChestRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Journey_OpenFreeChestResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_OpenFreeChestResponse)
	if !ok {
		that2, ok := that.(Journey_OpenFreeChestResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *Journey_OpenTokenChestRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_OpenTokenChestRequest)
	if !ok {
		that2, ok := that.(Journey_OpenTokenChestRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Count != that1.Count {
		return false
	}
	return true
}
func (this *Journey_OpenTokenChestResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_OpenTokenChestResponse)
	if !ok {
		that2, ok := that.(Journey_OpenTokenChestResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *Journey_RoguelikeFinishPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Journey_RoguelikeFinishPush)
	if !ok {
		that2, ok := that.(Journey_RoguelikeFinishPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Success != that1.Success {
		return false
	}
	if this.RoguelikeId != that1.RoguelikeId {
		return false
	}
	return true
}
func (m *Journey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Journey_GetInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_GetInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_GetInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Journey_GetInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_GetInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_GetInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BossHallIsOpen {
		i--
		if m.BossHallIsOpen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.BossHallSeconds != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.BossHallSeconds))
		i--
		dAtA[i] = 0x48
	}
	if m.PersonalBossSeconds != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.PersonalBossSeconds))
		i--
		dAtA[i] = 0x40
	}
	if m.ArenaSeconds != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.ArenaSeconds))
		i--
		dAtA[i] = 0x38
	}
	if m.TowerTotal != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.TowerTotal))
		i--
		dAtA[i] = 0x30
	}
	if m.TowerUsed != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.TowerUsed))
		i--
		dAtA[i] = 0x28
	}
	if m.RougelikeTotal != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.RougelikeTotal))
		i--
		dAtA[i] = 0x20
	}
	if m.RougelikeUsed != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.RougelikeUsed))
		i--
		dAtA[i] = 0x18
	}
	if m.TodayGotCoin != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.TodayGotCoin))
		i--
		dAtA[i] = 0x10
	}
	if m.FreeFlushSeconds != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.FreeFlushSeconds))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Journey_OpenFreeChestRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_OpenFreeChestRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_OpenFreeChestRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Journey_OpenFreeChestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_OpenFreeChestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_OpenFreeChestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJourney(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Journey_OpenTokenChestRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_OpenTokenChestRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_OpenTokenChestRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Count != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Journey_OpenTokenChestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_OpenTokenChestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_OpenTokenChestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJourney(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Journey_RoguelikeFinishPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Journey_RoguelikeFinishPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Journey_RoguelikeFinishPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RoguelikeId != 0 {
		i = encodeVarintJourney(dAtA, i, uint64(m.RoguelikeId))
		i--
		dAtA[i] = 0x10
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintJourney(dAtA []byte, offset int, v uint64) int {
	offset -= sovJourney(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Journey) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Journey_GetInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Journey_GetInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.FreeFlushSeconds != 0 {
		w.RawByte('"')
		w.RawString("free_flush_seconds")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.FreeFlushSeconds))
		needWriteComma = true
	}
	if m.TodayGotCoin != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("today_got_coin")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TodayGotCoin))
		needWriteComma = true
	}
	if m.RougelikeUsed != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("rougelike_used")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RougelikeUsed))
		needWriteComma = true
	}
	if m.RougelikeTotal != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("rougelike_total")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RougelikeTotal))
		needWriteComma = true
	}
	if m.TowerUsed != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("tower_used")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TowerUsed))
		needWriteComma = true
	}
	if m.TowerTotal != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("tower_total")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TowerTotal))
		needWriteComma = true
	}
	if m.ArenaSeconds != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("arena_seconds")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ArenaSeconds))
		needWriteComma = true
	}
	if m.PersonalBossSeconds != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("personal_boss_seconds")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.PersonalBossSeconds))
		needWriteComma = true
	}
	if m.BossHallSeconds != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("boss_hall_seconds")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BossHallSeconds))
		needWriteComma = true
	}
	if m.BossHallIsOpen {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("boss_hall_is_open")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.BossHallIsOpen)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Journey_OpenFreeChestRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Journey_OpenFreeChestResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Journey_OpenTokenChestRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Count != 0 {
		w.RawByte('"')
		w.RawString("count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Count))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Journey_OpenTokenChestResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Journey_RoguelikeFinishPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Success {
		w.RawByte('"')
		w.RawString("success")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Success)
		needWriteComma = true
	}
	if m.RoguelikeId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("roguelike_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RoguelikeId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Journey) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey) GoString() string {
	return m.String()
}

func (m *Journey_GetInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_GetInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_GetInfoRequest) GoString() string {
	return m.String()
}

func (m *Journey_GetInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_GetInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_GetInfoResponse) GoString() string {
	return m.String()
}

func (m *Journey_OpenFreeChestRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_OpenFreeChestRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_OpenFreeChestRequest) GoString() string {
	return m.String()
}

func (m *Journey_OpenFreeChestResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_OpenFreeChestResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_OpenFreeChestResponse) GoString() string {
	return m.String()
}

func (m *Journey_OpenTokenChestRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_OpenTokenChestRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_OpenTokenChestRequest) GoString() string {
	return m.String()
}

func (m *Journey_OpenTokenChestResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_OpenTokenChestResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_OpenTokenChestResponse) GoString() string {
	return m.String()
}

func (m *Journey_RoguelikeFinishPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Journey_RoguelikeFinishPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Journey_RoguelikeFinishPush) GoString() string {
	return m.String()
}

func (m *Journey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Journey_GetInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Journey_GetInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FreeFlushSeconds != 0 {
		n += 1 + sovJourney(uint64(m.FreeFlushSeconds))
	}
	if m.TodayGotCoin != 0 {
		n += 1 + sovJourney(uint64(m.TodayGotCoin))
	}
	if m.RougelikeUsed != 0 {
		n += 1 + sovJourney(uint64(m.RougelikeUsed))
	}
	if m.RougelikeTotal != 0 {
		n += 1 + sovJourney(uint64(m.RougelikeTotal))
	}
	if m.TowerUsed != 0 {
		n += 1 + sovJourney(uint64(m.TowerUsed))
	}
	if m.TowerTotal != 0 {
		n += 1 + sovJourney(uint64(m.TowerTotal))
	}
	if m.ArenaSeconds != 0 {
		n += 1 + sovJourney(uint64(m.ArenaSeconds))
	}
	if m.PersonalBossSeconds != 0 {
		n += 1 + sovJourney(uint64(m.PersonalBossSeconds))
	}
	if m.BossHallSeconds != 0 {
		n += 1 + sovJourney(uint64(m.BossHallSeconds))
	}
	if m.BossHallIsOpen {
		n += 2
	}
	return n
}

func (m *Journey_OpenFreeChestRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Journey_OpenFreeChestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovJourney(uint64(l))
		}
	}
	return n
}

func (m *Journey_OpenTokenChestRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Count != 0 {
		n += 1 + sovJourney(uint64(m.Count))
	}
	return n
}

func (m *Journey_OpenTokenChestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovJourney(uint64(l))
		}
	}
	return n
}

func (m *Journey_RoguelikeFinishPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	if m.RoguelikeId != 0 {
		n += 1 + sovJourney(uint64(m.RoguelikeId))
	}
	return n
}

func sovJourney(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozJourney(x uint64) (n int) {
	return sovJourney(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Journey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Journey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Journey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_GetInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_GetInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FreeFlushSeconds", wireType)
			}
			m.FreeFlushSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FreeFlushSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TodayGotCoin", wireType)
			}
			m.TodayGotCoin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TodayGotCoin |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RougelikeUsed", wireType)
			}
			m.RougelikeUsed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RougelikeUsed |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RougelikeTotal", wireType)
			}
			m.RougelikeTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RougelikeTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TowerUsed", wireType)
			}
			m.TowerUsed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TowerUsed |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TowerTotal", wireType)
			}
			m.TowerTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TowerTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArenaSeconds", wireType)
			}
			m.ArenaSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ArenaSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PersonalBossSeconds", wireType)
			}
			m.PersonalBossSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PersonalBossSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BossHallSeconds", wireType)
			}
			m.BossHallSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BossHallSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BossHallIsOpen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BossHallIsOpen = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_OpenFreeChestRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenFreeChestRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenFreeChestRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_OpenFreeChestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenFreeChestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenFreeChestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJourney
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJourney
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_OpenTokenChestRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenTokenChestRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenTokenChestRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_OpenTokenChestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenTokenChestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenTokenChestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJourney
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJourney
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Journey_RoguelikeFinishPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoguelikeFinishPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoguelikeFinishPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoguelikeId", wireType)
			}
			m.RoguelikeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoguelikeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipJourney(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthJourney
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipJourney(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowJourney
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJourney
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthJourney
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupJourney
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthJourney
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthJourney        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowJourney          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupJourney = fmt.Errorf("proto: unexpected end of group")
)
