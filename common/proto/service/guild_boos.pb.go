// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/guild_boos.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GuildBoosErrorCode int32

const (
	GuildBoosErrorCode_ErrorGuildBoosAlreadyRewards GuildBoosErrorCode = 0
)

var GuildBoosErrorCode_name = map[int32]string{
	0: "ErrorGuildBoosAlreadyRewards",
}

var GuildBoosErrorCode_value = map[string]int32{
	"ErrorGuildBoosAlreadyRewards": 0,
}

func (GuildBoosErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0}
}

type GuildBoos struct {
}

func (m *GuildBoos) Reset()      { *m = GuildBoos{} }
func (*GuildBoos) ProtoMessage() {}
func (*GuildBoos) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0}
}
func (m *GuildBoos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos.Merge(m, src)
}
func (m *GuildBoos) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos proto.InternalMessageInfo

func (*GuildBoos) XXX_MessageName() string {
	return "service.GuildBoos"
}

// 获取今天和过去可领取的奖品信息
type GuildBoos_GetCurrDayRewardsRequest struct {
}

func (m *GuildBoos_GetCurrDayRewardsRequest) Reset()      { *m = GuildBoos_GetCurrDayRewardsRequest{} }
func (*GuildBoos_GetCurrDayRewardsRequest) ProtoMessage() {}
func (*GuildBoos_GetCurrDayRewardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 0}
}
func (m *GuildBoos_GetCurrDayRewardsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_GetCurrDayRewardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_GetCurrDayRewardsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_GetCurrDayRewardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_GetCurrDayRewardsRequest.Merge(m, src)
}
func (m *GuildBoos_GetCurrDayRewardsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_GetCurrDayRewardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_GetCurrDayRewardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_GetCurrDayRewardsRequest proto.InternalMessageInfo

func (*GuildBoos_GetCurrDayRewardsRequest) XXX_MessageName() string {
	return "service.GuildBoos.GetCurrDayRewardsRequest"
}

type GuildBoos_OtherRewards struct {
	Timestamp   int64          `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SelfDamage  int64          `protobuf:"varint,2,opt,name=self_damage,json=selfDamage,proto3" json:"self_damage,omitempty"`
	TotalDamage int64          `protobuf:"varint,3,opt,name=total_damage,json=totalDamage,proto3" json:"total_damage,omitempty"`
	Items       []*models.Item `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *GuildBoos_OtherRewards) Reset()      { *m = GuildBoos_OtherRewards{} }
func (*GuildBoos_OtherRewards) ProtoMessage() {}
func (*GuildBoos_OtherRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 1}
}
func (m *GuildBoos_OtherRewards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_OtherRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_OtherRewards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_OtherRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_OtherRewards.Merge(m, src)
}
func (m *GuildBoos_OtherRewards) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_OtherRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_OtherRewards.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_OtherRewards proto.InternalMessageInfo

func (m *GuildBoos_OtherRewards) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GuildBoos_OtherRewards) GetSelfDamage() int64 {
	if m != nil {
		return m.SelfDamage
	}
	return 0
}

func (m *GuildBoos_OtherRewards) GetTotalDamage() int64 {
	if m != nil {
		return m.TotalDamage
	}
	return 0
}

func (m *GuildBoos_OtherRewards) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*GuildBoos_OtherRewards) XXX_MessageName() string {
	return "service.GuildBoos.OtherRewards"
}

type GuildBoos_CurrDayRewards struct {
	Damage int64          `protobuf:"varint,1,opt,name=damage,proto3" json:"damage,omitempty"`
	Status int64          `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Items  []*models.Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *GuildBoos_CurrDayRewards) Reset()      { *m = GuildBoos_CurrDayRewards{} }
func (*GuildBoos_CurrDayRewards) ProtoMessage() {}
func (*GuildBoos_CurrDayRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 2}
}
func (m *GuildBoos_CurrDayRewards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_CurrDayRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_CurrDayRewards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_CurrDayRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_CurrDayRewards.Merge(m, src)
}
func (m *GuildBoos_CurrDayRewards) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_CurrDayRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_CurrDayRewards.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_CurrDayRewards proto.InternalMessageInfo

func (m *GuildBoos_CurrDayRewards) GetDamage() int64 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *GuildBoos_CurrDayRewards) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GuildBoos_CurrDayRewards) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*GuildBoos_CurrDayRewards) XXX_MessageName() string {
	return "service.GuildBoos.CurrDayRewards"
}

type GuildBoos_GetCurrDayRewardsResponse struct {
	CurrDayRewards  []*GuildBoos_CurrDayRewards `protobuf:"bytes,1,rep,name=curr_day_rewards,json=currDayRewards,proto3" json:"curr_day_rewards,omitempty"`
	OtherDayRewards []*GuildBoos_OtherRewards   `protobuf:"bytes,2,rep,name=other_day_rewards,json=otherDayRewards,proto3" json:"other_day_rewards,omitempty"`
}

func (m *GuildBoos_GetCurrDayRewardsResponse) Reset()      { *m = GuildBoos_GetCurrDayRewardsResponse{} }
func (*GuildBoos_GetCurrDayRewardsResponse) ProtoMessage() {}
func (*GuildBoos_GetCurrDayRewardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 3}
}
func (m *GuildBoos_GetCurrDayRewardsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_GetCurrDayRewardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_GetCurrDayRewardsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_GetCurrDayRewardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_GetCurrDayRewardsResponse.Merge(m, src)
}
func (m *GuildBoos_GetCurrDayRewardsResponse) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_GetCurrDayRewardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_GetCurrDayRewardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_GetCurrDayRewardsResponse proto.InternalMessageInfo

func (m *GuildBoos_GetCurrDayRewardsResponse) GetCurrDayRewards() []*GuildBoos_CurrDayRewards {
	if m != nil {
		return m.CurrDayRewards
	}
	return nil
}

func (m *GuildBoos_GetCurrDayRewardsResponse) GetOtherDayRewards() []*GuildBoos_OtherRewards {
	if m != nil {
		return m.OtherDayRewards
	}
	return nil
}

func (*GuildBoos_GetCurrDayRewardsResponse) XXX_MessageName() string {
	return "service.GuildBoos.GetCurrDayRewardsResponse"
}

// 领取今天的奖品
type GuildBoos_RewardCurrDayRequest struct {
}

func (m *GuildBoos_RewardCurrDayRequest) Reset()      { *m = GuildBoos_RewardCurrDayRequest{} }
func (*GuildBoos_RewardCurrDayRequest) ProtoMessage() {}
func (*GuildBoos_RewardCurrDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 4}
}
func (m *GuildBoos_RewardCurrDayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_RewardCurrDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_RewardCurrDayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_RewardCurrDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_RewardCurrDayRequest.Merge(m, src)
}
func (m *GuildBoos_RewardCurrDayRequest) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_RewardCurrDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_RewardCurrDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_RewardCurrDayRequest proto.InternalMessageInfo

func (*GuildBoos_RewardCurrDayRequest) XXX_MessageName() string {
	return "service.GuildBoos.RewardCurrDayRequest"
}

type GuildBoos_RewardCurrDayResponse struct {
	CurrDayRewards  []*GuildBoos_CurrDayRewards `protobuf:"bytes,1,rep,name=curr_day_rewards,json=currDayRewards,proto3" json:"curr_day_rewards,omitempty"`
	OtherDayRewards []*GuildBoos_OtherRewards   `protobuf:"bytes,2,rep,name=other_day_rewards,json=otherDayRewards,proto3" json:"other_day_rewards,omitempty"`
}

func (m *GuildBoos_RewardCurrDayResponse) Reset()      { *m = GuildBoos_RewardCurrDayResponse{} }
func (*GuildBoos_RewardCurrDayResponse) ProtoMessage() {}
func (*GuildBoos_RewardCurrDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 5}
}
func (m *GuildBoos_RewardCurrDayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_RewardCurrDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_RewardCurrDayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_RewardCurrDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_RewardCurrDayResponse.Merge(m, src)
}
func (m *GuildBoos_RewardCurrDayResponse) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_RewardCurrDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_RewardCurrDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_RewardCurrDayResponse proto.InternalMessageInfo

func (m *GuildBoos_RewardCurrDayResponse) GetCurrDayRewards() []*GuildBoos_CurrDayRewards {
	if m != nil {
		return m.CurrDayRewards
	}
	return nil
}

func (m *GuildBoos_RewardCurrDayResponse) GetOtherDayRewards() []*GuildBoos_OtherRewards {
	if m != nil {
		return m.OtherDayRewards
	}
	return nil
}

func (*GuildBoos_RewardCurrDayResponse) XXX_MessageName() string {
	return "service.GuildBoos.RewardCurrDayResponse"
}

// 领取之前的奖品
type GuildBoos_RewardOtherDayRequest struct {
}

func (m *GuildBoos_RewardOtherDayRequest) Reset()      { *m = GuildBoos_RewardOtherDayRequest{} }
func (*GuildBoos_RewardOtherDayRequest) ProtoMessage() {}
func (*GuildBoos_RewardOtherDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 6}
}
func (m *GuildBoos_RewardOtherDayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_RewardOtherDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_RewardOtherDayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_RewardOtherDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_RewardOtherDayRequest.Merge(m, src)
}
func (m *GuildBoos_RewardOtherDayRequest) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_RewardOtherDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_RewardOtherDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_RewardOtherDayRequest proto.InternalMessageInfo

func (*GuildBoos_RewardOtherDayRequest) XXX_MessageName() string {
	return "service.GuildBoos.RewardOtherDayRequest"
}

type GuildBoos_RewardOtherDayResponse struct {
	CurrDayRewards  []*GuildBoos_CurrDayRewards `protobuf:"bytes,1,rep,name=curr_day_rewards,json=currDayRewards,proto3" json:"curr_day_rewards,omitempty"`
	OtherDayRewards []*GuildBoos_OtherRewards   `protobuf:"bytes,2,rep,name=other_day_rewards,json=otherDayRewards,proto3" json:"other_day_rewards,omitempty"`
}

func (m *GuildBoos_RewardOtherDayResponse) Reset()      { *m = GuildBoos_RewardOtherDayResponse{} }
func (*GuildBoos_RewardOtherDayResponse) ProtoMessage() {}
func (*GuildBoos_RewardOtherDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 7}
}
func (m *GuildBoos_RewardOtherDayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_RewardOtherDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_RewardOtherDayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_RewardOtherDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_RewardOtherDayResponse.Merge(m, src)
}
func (m *GuildBoos_RewardOtherDayResponse) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_RewardOtherDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_RewardOtherDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_RewardOtherDayResponse proto.InternalMessageInfo

func (m *GuildBoos_RewardOtherDayResponse) GetCurrDayRewards() []*GuildBoos_CurrDayRewards {
	if m != nil {
		return m.CurrDayRewards
	}
	return nil
}

func (m *GuildBoos_RewardOtherDayResponse) GetOtherDayRewards() []*GuildBoos_OtherRewards {
	if m != nil {
		return m.OtherDayRewards
	}
	return nil
}

func (*GuildBoos_RewardOtherDayResponse) XXX_MessageName() string {
	return "service.GuildBoos.RewardOtherDayResponse"
}

// 检查是否可以进入工会Boos
type GuildBoos_CanEnterRequest struct {
}

func (m *GuildBoos_CanEnterRequest) Reset()      { *m = GuildBoos_CanEnterRequest{} }
func (*GuildBoos_CanEnterRequest) ProtoMessage() {}
func (*GuildBoos_CanEnterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 8}
}
func (m *GuildBoos_CanEnterRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_CanEnterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_CanEnterRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_CanEnterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_CanEnterRequest.Merge(m, src)
}
func (m *GuildBoos_CanEnterRequest) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_CanEnterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_CanEnterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_CanEnterRequest proto.InternalMessageInfo

func (*GuildBoos_CanEnterRequest) XXX_MessageName() string {
	return "service.GuildBoos.CanEnterRequest"
}

type GuildBoos_CanEnterResponse struct {
	Can           bool  `protobuf:"varint,1,opt,name=can,proto3" json:"can,omitempty"`
	RemainSeconds int64 `protobuf:"varint,2,opt,name=remain_seconds,json=remainSeconds,proto3" json:"remain_seconds,omitempty"`
	TotalDamage   int64 `protobuf:"varint,3,opt,name=total_damage,json=totalDamage,proto3" json:"total_damage,omitempty"`
	RefreshRemain int64 `protobuf:"varint,4,opt,name=refresh_remain,json=refreshRemain,proto3" json:"refresh_remain,omitempty"`
}

func (m *GuildBoos_CanEnterResponse) Reset()      { *m = GuildBoos_CanEnterResponse{} }
func (*GuildBoos_CanEnterResponse) ProtoMessage() {}
func (*GuildBoos_CanEnterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_64a883d649329a4e, []int{0, 9}
}
func (m *GuildBoos_CanEnterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildBoos_CanEnterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildBoos_CanEnterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildBoos_CanEnterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildBoos_CanEnterResponse.Merge(m, src)
}
func (m *GuildBoos_CanEnterResponse) XXX_Size() int {
	return m.Size()
}
func (m *GuildBoos_CanEnterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildBoos_CanEnterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuildBoos_CanEnterResponse proto.InternalMessageInfo

func (m *GuildBoos_CanEnterResponse) GetCan() bool {
	if m != nil {
		return m.Can
	}
	return false
}

func (m *GuildBoos_CanEnterResponse) GetRemainSeconds() int64 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

func (m *GuildBoos_CanEnterResponse) GetTotalDamage() int64 {
	if m != nil {
		return m.TotalDamage
	}
	return 0
}

func (m *GuildBoos_CanEnterResponse) GetRefreshRemain() int64 {
	if m != nil {
		return m.RefreshRemain
	}
	return 0
}

func (*GuildBoos_CanEnterResponse) XXX_MessageName() string {
	return "service.GuildBoos.CanEnterResponse"
}
func init() {
	proto.RegisterEnum("service.GuildBoosErrorCode", GuildBoosErrorCode_name, GuildBoosErrorCode_value)
	proto.RegisterType((*GuildBoos)(nil), "service.GuildBoos")
	proto.RegisterType((*GuildBoos_GetCurrDayRewardsRequest)(nil), "service.GuildBoos.GetCurrDayRewardsRequest")
	proto.RegisterType((*GuildBoos_OtherRewards)(nil), "service.GuildBoos.OtherRewards")
	proto.RegisterType((*GuildBoos_CurrDayRewards)(nil), "service.GuildBoos.CurrDayRewards")
	proto.RegisterType((*GuildBoos_GetCurrDayRewardsResponse)(nil), "service.GuildBoos.GetCurrDayRewardsResponse")
	proto.RegisterType((*GuildBoos_RewardCurrDayRequest)(nil), "service.GuildBoos.RewardCurrDayRequest")
	proto.RegisterType((*GuildBoos_RewardCurrDayResponse)(nil), "service.GuildBoos.RewardCurrDayResponse")
	proto.RegisterType((*GuildBoos_RewardOtherDayRequest)(nil), "service.GuildBoos.RewardOtherDayRequest")
	proto.RegisterType((*GuildBoos_RewardOtherDayResponse)(nil), "service.GuildBoos.RewardOtherDayResponse")
	proto.RegisterType((*GuildBoos_CanEnterRequest)(nil), "service.GuildBoos.CanEnterRequest")
	proto.RegisterType((*GuildBoos_CanEnterResponse)(nil), "service.GuildBoos.CanEnterResponse")
}

func init() { proto.RegisterFile("proto/service/guild_boos.proto", fileDescriptor_64a883d649329a4e) }

var fileDescriptor_64a883d649329a4e = []byte{
	// 592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0x4f, 0x6b, 0x13, 0x4f,
	0x18, 0xc7, 0x77, 0x9a, 0xfe, 0xfa, 0x6b, 0xa7, 0x35, 0x4d, 0x17, 0x8d, 0xeb, 0x12, 0xa6, 0x69,
	0x40, 0xa8, 0x42, 0x37, 0xa0, 0x37, 0x6f, 0xe6, 0x8f, 0x45, 0x0a, 0x06, 0xb6, 0xb7, 0x5e, 0x96,
	0xc9, 0xee, 0x34, 0x5d, 0xc8, 0xee, 0xc4, 0x99, 0x89, 0xd2, 0xa3, 0x1e, 0x3c, 0x78, 0xa9, 0xa0,
	0xf6, 0xe0, 0x51, 0x28, 0x78, 0xb5, 0x10, 0x7a, 0xd0, 0x17, 0xd0, 0x63, 0x8f, 0x3d, 0xea, 0xc6,
	0xa0, 0xde, 0x7c, 0x07, 0xca, 0xce, 0x6c, 0x36, 0x4d, 0xa8, 0x22, 0x9e, 0x7a, 0xdb, 0xf9, 0x7e,
	0x9f, 0xf9, 0xcc, 0xf3, 0x87, 0x67, 0x21, 0xea, 0x30, 0x2a, 0x68, 0x99, 0x13, 0xf6, 0xc8, 0x77,
	0x49, 0xb9, 0xd5, 0xf5, 0xdb, 0x9e, 0xd3, 0xa4, 0x94, 0x5b, 0xd2, 0xd0, 0xff, 0x4f, 0x1c, 0xf3,
	0xaa, 0x0a, 0x0c, 0xa8, 0x47, 0xda, 0xbc, 0xdc, 0xc4, 0x9c, 0xa8, 0x08, 0x33, 0x3f, 0x61, 0xb4,
	0x94, 0x5e, 0xfa, 0x39, 0x0b, 0xe7, 0xd6, 0x63, 0x5c, 0x85, 0x52, 0x6e, 0x9a, 0xd0, 0x58, 0x27,
	0xa2, 0xda, 0x65, 0xac, 0x86, 0x77, 0x6d, 0xf2, 0x18, 0x33, 0x8f, 0xdb, 0xe4, 0x61, 0x97, 0x70,
	0x61, 0xbe, 0x02, 0x70, 0xa1, 0x21, 0x76, 0x08, 0x4b, 0x74, 0xbd, 0x00, 0xe7, 0x84, 0x1f, 0x10,
	0x2e, 0x70, 0xd0, 0x31, 0x40, 0x11, 0xac, 0x66, 0xec, 0x91, 0xa0, 0x2f, 0xc3, 0x79, 0x4e, 0xda,
	0xdb, 0x8e, 0x87, 0x03, 0xdc, 0x22, 0xc6, 0x94, 0xf4, 0x61, 0x2c, 0xd5, 0xa4, 0xa2, 0xaf, 0xc0,
	0x05, 0x41, 0x05, 0x6e, 0x0f, 0x23, 0x32, 0x32, 0x62, 0x5e, 0x6a, 0x49, 0x48, 0x09, 0xfe, 0xe7,
	0x0b, 0x12, 0x70, 0x63, 0xba, 0x98, 0x59, 0x9d, 0xbf, 0xb5, 0x60, 0xa9, 0xf4, 0xad, 0xfb, 0x82,
	0x04, 0xb6, 0xb2, 0x4c, 0x0f, 0x66, 0xc7, 0xf3, 0xd5, 0xf3, 0x70, 0x26, 0x41, 0xaa, 0xa4, 0x92,
	0x53, 0xac, 0x73, 0x81, 0x45, 0x97, 0x27, 0xc9, 0x24, 0xa7, 0xd1, 0x2b, 0x99, 0xdf, 0xbf, 0xd2,
	0x03, 0xf0, 0xda, 0x39, 0x9d, 0xe1, 0x1d, 0x1a, 0x72, 0xa2, 0x6f, 0xc0, 0x9c, 0xdb, 0x65, 0xcc,
	0xf1, 0xf0, 0xae, 0xc3, 0x94, 0x67, 0x00, 0x09, 0x5b, 0xb1, 0x92, 0xc9, 0x58, 0x69, 0x93, 0xad,
	0x09, 0x48, 0xd6, 0x1d, 0x4f, 0x7f, 0x03, 0x2e, 0xd1, 0xb8, 0xcd, 0x63, 0xb4, 0x29, 0x49, 0x5b,
	0x3e, 0x87, 0x76, 0x76, 0x24, 0xf6, 0xa2, 0xbc, 0x39, 0x82, 0x99, 0x75, 0x78, 0x59, 0x7d, 0xa6,
	0x8f, 0xca, 0x61, 0xde, 0x59, 0x7b, 0xda, 0x33, 0x6e, 0x9c, 0x99, 0xbc, 0x5e, 0xa8, 0x33, 0x46,
	0x59, 0x7a, 0xbe, 0xdb, 0x66, 0x04, 0x7b, 0x29, 0xe6, 0x3d, 0x80, 0x57, 0x26, 0x38, 0x17, 0xbe,
	0xf4, 0x7b, 0xc3, 0x94, 0x1b, 0xa9, 0xf1, 0x4f, 0xb5, 0x1f, 0x02, 0x98, 0x9f, 0x04, 0x5d, 0xf8,
	0xe2, 0x97, 0xe0, 0x62, 0x15, 0x87, 0xf5, 0x50, 0xc4, 0x31, 0x6a, 0x7f, 0x5f, 0x03, 0x98, 0x1b,
	0x69, 0x49, 0x05, 0x39, 0x98, 0x71, 0x71, 0x28, 0x17, 0x65, 0xd6, 0x8e, 0x3f, 0xf5, 0xeb, 0x30,
	0xcb, 0x48, 0x80, 0xfd, 0xd0, 0xe1, 0xc4, 0xa5, 0xa1, 0x37, 0xdc, 0x96, 0x4b, 0x4a, 0xdd, 0x54,
	0xe2, 0xdf, 0x6c, 0xaf, 0x24, 0x6d, 0x33, 0xc2, 0x77, 0x1c, 0x75, 0xd7, 0x98, 0x1e, 0x92, 0xa4,
	0x6a, 0x4b, 0xf1, 0xe6, 0x16, 0xd4, 0xd3, 0xaa, 0xe4, 0x20, 0xaa, 0xd4, 0x23, 0x7a, 0x0d, 0xfe,
	0x71, 0x2a, 0x39, 0xcd, 0x2c, 0x3d, 0xef, 0x19, 0x48, 0x2f, 0x0c, 0x8e, 0x0e, 0xbe, 0x7c, 0x7c,
	0x53, 0x69, 0x34, 0x36, 0x07, 0x07, 0xfb, 0x83, 0x97, 0x4f, 0x06, 0x47, 0x87, 0x5f, 0x3f, 0xec,
	0x7d, 0x7f, 0xfb, 0x6c, 0xb0, 0xb7, 0x5f, 0x79, 0x70, 0xfa, 0x19, 0x69, 0xef, 0x22, 0x04, 0x8e,
	0x23, 0x04, 0x4e, 0x22, 0x04, 0x3e, 0x45, 0x08, 0x7c, 0x8b, 0x90, 0xf6, 0x23, 0x42, 0xe0, 0x45,
	0x1f, 0x69, 0xc7, 0x7d, 0x04, 0x4e, 0xfa, 0x48, 0x3b, 0xed, 0x23, 0x6d, 0xab, 0xe8, 0x52, 0x3f,
	0x5c, 0x8b, 0x5b, 0x4d, 0x58, 0xd9, 0xa5, 0x41, 0x40, 0xc3, 0xf2, 0xd8, 0x8f, 0xb7, 0x39, 0x23,
	0x8f, 0xb7, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xcf, 0xc3, 0xf8, 0x5f, 0x90, 0x05, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_GetCurrDayRewardsRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_OtherRewards.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_CurrDayRewards.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_GetCurrDayRewardsResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_RewardCurrDayRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_RewardCurrDayResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_RewardOtherDayRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_RewardOtherDayResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_CanEnterRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildBoos_CanEnterResponse.Get().(proto.Message)
	})
}

var poolGuildBoos = &sync.Pool{New: func() interface{} { return &GuildBoos{} }}

func (m *GuildBoos) ReleasePool() { m.Reset(); poolGuildBoos.Put(m); m = nil }

var poolGuildBoos_GetCurrDayRewardsRequest = &sync.Pool{New: func() interface{} { return &GuildBoos_GetCurrDayRewardsRequest{} }}

func (m *GuildBoos_GetCurrDayRewardsRequest) ReleasePool() {
	m.Reset()
	poolGuildBoos_GetCurrDayRewardsRequest.Put(m)
	m = nil
}

var poolGuildBoos_OtherRewards = &sync.Pool{New: func() interface{} { return &GuildBoos_OtherRewards{} }}

func (m *GuildBoos_OtherRewards) ReleasePool() { m.Reset(); poolGuildBoos_OtherRewards.Put(m); m = nil }

var poolGuildBoos_CurrDayRewards = &sync.Pool{New: func() interface{} { return &GuildBoos_CurrDayRewards{} }}

func (m *GuildBoos_CurrDayRewards) ReleasePool() {
	m.Reset()
	poolGuildBoos_CurrDayRewards.Put(m)
	m = nil
}

var poolGuildBoos_GetCurrDayRewardsResponse = &sync.Pool{New: func() interface{} { return &GuildBoos_GetCurrDayRewardsResponse{} }}

func (m *GuildBoos_GetCurrDayRewardsResponse) ReleasePool() {
	m.Reset()
	poolGuildBoos_GetCurrDayRewardsResponse.Put(m)
	m = nil
}

var poolGuildBoos_RewardCurrDayRequest = &sync.Pool{New: func() interface{} { return &GuildBoos_RewardCurrDayRequest{} }}

func (m *GuildBoos_RewardCurrDayRequest) ReleasePool() {
	m.Reset()
	poolGuildBoos_RewardCurrDayRequest.Put(m)
	m = nil
}

var poolGuildBoos_RewardCurrDayResponse = &sync.Pool{New: func() interface{} { return &GuildBoos_RewardCurrDayResponse{} }}

func (m *GuildBoos_RewardCurrDayResponse) ReleasePool() {
	m.Reset()
	poolGuildBoos_RewardCurrDayResponse.Put(m)
	m = nil
}

var poolGuildBoos_RewardOtherDayRequest = &sync.Pool{New: func() interface{} { return &GuildBoos_RewardOtherDayRequest{} }}

func (m *GuildBoos_RewardOtherDayRequest) ReleasePool() {
	m.Reset()
	poolGuildBoos_RewardOtherDayRequest.Put(m)
	m = nil
}

var poolGuildBoos_RewardOtherDayResponse = &sync.Pool{New: func() interface{} { return &GuildBoos_RewardOtherDayResponse{} }}

func (m *GuildBoos_RewardOtherDayResponse) ReleasePool() {
	m.Reset()
	poolGuildBoos_RewardOtherDayResponse.Put(m)
	m = nil
}

var poolGuildBoos_CanEnterRequest = &sync.Pool{New: func() interface{} { return &GuildBoos_CanEnterRequest{} }}

func (m *GuildBoos_CanEnterRequest) ReleasePool() {
	m.Reset()
	poolGuildBoos_CanEnterRequest.Put(m)
	m = nil
}

var poolGuildBoos_CanEnterResponse = &sync.Pool{New: func() interface{} { return &GuildBoos_CanEnterResponse{} }}

func (m *GuildBoos_CanEnterResponse) ReleasePool() {
	m.Reset()
	poolGuildBoos_CanEnterResponse.Put(m)
	m = nil
}
func (x GuildBoosErrorCode) String() string {
	s, ok := GuildBoosErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *GuildBoos) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos)
	if !ok {
		that2, ok := that.(GuildBoos)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GuildBoos_GetCurrDayRewardsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_GetCurrDayRewardsRequest)
	if !ok {
		that2, ok := that.(GuildBoos_GetCurrDayRewardsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GuildBoos_OtherRewards) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_OtherRewards)
	if !ok {
		that2, ok := that.(GuildBoos_OtherRewards)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Timestamp != that1.Timestamp {
		return false
	}
	if this.SelfDamage != that1.SelfDamage {
		return false
	}
	if this.TotalDamage != that1.TotalDamage {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *GuildBoos_CurrDayRewards) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_CurrDayRewards)
	if !ok {
		that2, ok := that.(GuildBoos_CurrDayRewards)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Damage != that1.Damage {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *GuildBoos_GetCurrDayRewardsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_GetCurrDayRewardsResponse)
	if !ok {
		that2, ok := that.(GuildBoos_GetCurrDayRewardsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.CurrDayRewards) != len(that1.CurrDayRewards) {
		return false
	}
	for i := range this.CurrDayRewards {
		if !this.CurrDayRewards[i].Equal(that1.CurrDayRewards[i]) {
			return false
		}
	}
	if len(this.OtherDayRewards) != len(that1.OtherDayRewards) {
		return false
	}
	for i := range this.OtherDayRewards {
		if !this.OtherDayRewards[i].Equal(that1.OtherDayRewards[i]) {
			return false
		}
	}
	return true
}
func (this *GuildBoos_RewardCurrDayRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_RewardCurrDayRequest)
	if !ok {
		that2, ok := that.(GuildBoos_RewardCurrDayRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GuildBoos_RewardCurrDayResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_RewardCurrDayResponse)
	if !ok {
		that2, ok := that.(GuildBoos_RewardCurrDayResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.CurrDayRewards) != len(that1.CurrDayRewards) {
		return false
	}
	for i := range this.CurrDayRewards {
		if !this.CurrDayRewards[i].Equal(that1.CurrDayRewards[i]) {
			return false
		}
	}
	if len(this.OtherDayRewards) != len(that1.OtherDayRewards) {
		return false
	}
	for i := range this.OtherDayRewards {
		if !this.OtherDayRewards[i].Equal(that1.OtherDayRewards[i]) {
			return false
		}
	}
	return true
}
func (this *GuildBoos_RewardOtherDayRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_RewardOtherDayRequest)
	if !ok {
		that2, ok := that.(GuildBoos_RewardOtherDayRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GuildBoos_RewardOtherDayResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_RewardOtherDayResponse)
	if !ok {
		that2, ok := that.(GuildBoos_RewardOtherDayResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.CurrDayRewards) != len(that1.CurrDayRewards) {
		return false
	}
	for i := range this.CurrDayRewards {
		if !this.CurrDayRewards[i].Equal(that1.CurrDayRewards[i]) {
			return false
		}
	}
	if len(this.OtherDayRewards) != len(that1.OtherDayRewards) {
		return false
	}
	for i := range this.OtherDayRewards {
		if !this.OtherDayRewards[i].Equal(that1.OtherDayRewards[i]) {
			return false
		}
	}
	return true
}
func (this *GuildBoos_CanEnterRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_CanEnterRequest)
	if !ok {
		that2, ok := that.(GuildBoos_CanEnterRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GuildBoos_CanEnterResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildBoos_CanEnterResponse)
	if !ok {
		that2, ok := that.(GuildBoos_CanEnterResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Can != that1.Can {
		return false
	}
	if this.RemainSeconds != that1.RemainSeconds {
		return false
	}
	if this.TotalDamage != that1.TotalDamage {
		return false
	}
	if this.RefreshRemain != that1.RefreshRemain {
		return false
	}
	return true
}
func (m *GuildBoos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GuildBoos_GetCurrDayRewardsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_GetCurrDayRewardsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_GetCurrDayRewardsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GuildBoos_OtherRewards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_OtherRewards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_OtherRewards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.TotalDamage != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.TotalDamage))
		i--
		dAtA[i] = 0x18
	}
	if m.SelfDamage != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.SelfDamage))
		i--
		dAtA[i] = 0x10
	}
	if m.Timestamp != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GuildBoos_CurrDayRewards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_CurrDayRewards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_CurrDayRewards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Status != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.Damage != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.Damage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GuildBoos_GetCurrDayRewardsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_GetCurrDayRewardsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_GetCurrDayRewardsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OtherDayRewards) > 0 {
		for iNdEx := len(m.OtherDayRewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OtherDayRewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CurrDayRewards) > 0 {
		for iNdEx := len(m.CurrDayRewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CurrDayRewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GuildBoos_RewardCurrDayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_RewardCurrDayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_RewardCurrDayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GuildBoos_RewardCurrDayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_RewardCurrDayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_RewardCurrDayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OtherDayRewards) > 0 {
		for iNdEx := len(m.OtherDayRewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OtherDayRewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CurrDayRewards) > 0 {
		for iNdEx := len(m.CurrDayRewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CurrDayRewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GuildBoos_RewardOtherDayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_RewardOtherDayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_RewardOtherDayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GuildBoos_RewardOtherDayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_RewardOtherDayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_RewardOtherDayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OtherDayRewards) > 0 {
		for iNdEx := len(m.OtherDayRewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OtherDayRewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CurrDayRewards) > 0 {
		for iNdEx := len(m.CurrDayRewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CurrDayRewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuildBoos(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GuildBoos_CanEnterRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_CanEnterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_CanEnterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GuildBoos_CanEnterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildBoos_CanEnterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildBoos_CanEnterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RefreshRemain != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.RefreshRemain))
		i--
		dAtA[i] = 0x20
	}
	if m.TotalDamage != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.TotalDamage))
		i--
		dAtA[i] = 0x18
	}
	if m.RemainSeconds != 0 {
		i = encodeVarintGuildBoos(dAtA, i, uint64(m.RemainSeconds))
		i--
		dAtA[i] = 0x10
	}
	if m.Can {
		i--
		if m.Can {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGuildBoos(dAtA []byte, offset int, v uint64) int {
	offset -= sovGuildBoos(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *GuildBoos) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GuildBoos_GetCurrDayRewardsRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GuildBoos_OtherRewards) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Timestamp != 0 {
		w.RawByte('"')
		w.RawString("timestamp")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Timestamp))
		needWriteComma = true
	}
	if m.SelfDamage != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("self_damage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SelfDamage))
		needWriteComma = true
	}
	if m.TotalDamage != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("total_damage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TotalDamage))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildBoos_CurrDayRewards) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Damage != 0 {
		w.RawByte('"')
		w.RawString("damage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Damage))
		needWriteComma = true
	}
	if m.Status != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("status")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Status))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildBoos_GetCurrDayRewardsResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("curr_day_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.CurrDayRewards == nil {
		w.RawString("null")
	} else if len(m.CurrDayRewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.CurrDayRewards {
			v.JsonBytes(w)
			if i != len(m.CurrDayRewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("other_day_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.OtherDayRewards == nil {
		w.RawString("null")
	} else if len(m.OtherDayRewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.OtherDayRewards {
			v.JsonBytes(w)
			if i != len(m.OtherDayRewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildBoos_RewardCurrDayRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GuildBoos_RewardCurrDayResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("curr_day_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.CurrDayRewards == nil {
		w.RawString("null")
	} else if len(m.CurrDayRewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.CurrDayRewards {
			v.JsonBytes(w)
			if i != len(m.CurrDayRewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("other_day_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.OtherDayRewards == nil {
		w.RawString("null")
	} else if len(m.OtherDayRewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.OtherDayRewards {
			v.JsonBytes(w)
			if i != len(m.OtherDayRewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildBoos_RewardOtherDayRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GuildBoos_RewardOtherDayResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("curr_day_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.CurrDayRewards == nil {
		w.RawString("null")
	} else if len(m.CurrDayRewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.CurrDayRewards {
			v.JsonBytes(w)
			if i != len(m.CurrDayRewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("other_day_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.OtherDayRewards == nil {
		w.RawString("null")
	} else if len(m.OtherDayRewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.OtherDayRewards {
			v.JsonBytes(w)
			if i != len(m.OtherDayRewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildBoos_CanEnterRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GuildBoos_CanEnterResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Can {
		w.RawByte('"')
		w.RawString("can")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Can)
		needWriteComma = true
	}
	if m.RemainSeconds != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("remain_seconds")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RemainSeconds))
		needWriteComma = true
	}
	if m.TotalDamage != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("total_damage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TotalDamage))
		needWriteComma = true
	}
	if m.RefreshRemain != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("refresh_remain")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RefreshRemain))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildBoos) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos) GoString() string {
	return m.String()
}

func (m *GuildBoos_GetCurrDayRewardsRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_GetCurrDayRewardsRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_GetCurrDayRewardsRequest) GoString() string {
	return m.String()
}

func (m *GuildBoos_OtherRewards) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_OtherRewards) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_OtherRewards) GoString() string {
	return m.String()
}

func (m *GuildBoos_CurrDayRewards) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_CurrDayRewards) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_CurrDayRewards) GoString() string {
	return m.String()
}

func (m *GuildBoos_GetCurrDayRewardsResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_GetCurrDayRewardsResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_GetCurrDayRewardsResponse) GoString() string {
	return m.String()
}

func (m *GuildBoos_RewardCurrDayRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_RewardCurrDayRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_RewardCurrDayRequest) GoString() string {
	return m.String()
}

func (m *GuildBoos_RewardCurrDayResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_RewardCurrDayResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_RewardCurrDayResponse) GoString() string {
	return m.String()
}

func (m *GuildBoos_RewardOtherDayRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_RewardOtherDayRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_RewardOtherDayRequest) GoString() string {
	return m.String()
}

func (m *GuildBoos_RewardOtherDayResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_RewardOtherDayResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_RewardOtherDayResponse) GoString() string {
	return m.String()
}

func (m *GuildBoos_CanEnterRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_CanEnterRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_CanEnterRequest) GoString() string {
	return m.String()
}

func (m *GuildBoos_CanEnterResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildBoos_CanEnterResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildBoos_CanEnterResponse) GoString() string {
	return m.String()
}

func (m *GuildBoos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GuildBoos_GetCurrDayRewardsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GuildBoos_OtherRewards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != 0 {
		n += 1 + sovGuildBoos(uint64(m.Timestamp))
	}
	if m.SelfDamage != 0 {
		n += 1 + sovGuildBoos(uint64(m.SelfDamage))
	}
	if m.TotalDamage != 0 {
		n += 1 + sovGuildBoos(uint64(m.TotalDamage))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	return n
}

func (m *GuildBoos_CurrDayRewards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Damage != 0 {
		n += 1 + sovGuildBoos(uint64(m.Damage))
	}
	if m.Status != 0 {
		n += 1 + sovGuildBoos(uint64(m.Status))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	return n
}

func (m *GuildBoos_GetCurrDayRewardsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CurrDayRewards) > 0 {
		for _, e := range m.CurrDayRewards {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	if len(m.OtherDayRewards) > 0 {
		for _, e := range m.OtherDayRewards {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	return n
}

func (m *GuildBoos_RewardCurrDayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GuildBoos_RewardCurrDayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CurrDayRewards) > 0 {
		for _, e := range m.CurrDayRewards {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	if len(m.OtherDayRewards) > 0 {
		for _, e := range m.OtherDayRewards {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	return n
}

func (m *GuildBoos_RewardOtherDayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GuildBoos_RewardOtherDayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CurrDayRewards) > 0 {
		for _, e := range m.CurrDayRewards {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	if len(m.OtherDayRewards) > 0 {
		for _, e := range m.OtherDayRewards {
			l = e.Size()
			n += 1 + l + sovGuildBoos(uint64(l))
		}
	}
	return n
}

func (m *GuildBoos_CanEnterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GuildBoos_CanEnterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Can {
		n += 2
	}
	if m.RemainSeconds != 0 {
		n += 1 + sovGuildBoos(uint64(m.RemainSeconds))
	}
	if m.TotalDamage != 0 {
		n += 1 + sovGuildBoos(uint64(m.TotalDamage))
	}
	if m.RefreshRemain != 0 {
		n += 1 + sovGuildBoos(uint64(m.RefreshRemain))
	}
	return n
}

func sovGuildBoos(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGuildBoos(x uint64) (n int) {
	return sovGuildBoos(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GuildBoos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildBoos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildBoos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_GetCurrDayRewardsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCurrDayRewardsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCurrDayRewardsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_OtherRewards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OtherRewards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OtherRewards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfDamage", wireType)
			}
			m.SelfDamage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SelfDamage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalDamage", wireType)
			}
			m.TotalDamage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalDamage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_CurrDayRewards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CurrDayRewards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CurrDayRewards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Damage", wireType)
			}
			m.Damage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Damage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_GetCurrDayRewardsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCurrDayRewardsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCurrDayRewardsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrDayRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrDayRewards = append(m.CurrDayRewards, &GuildBoos_CurrDayRewards{})
			if err := m.CurrDayRewards[len(m.CurrDayRewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherDayRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtherDayRewards = append(m.OtherDayRewards, &GuildBoos_OtherRewards{})
			if err := m.OtherDayRewards[len(m.OtherDayRewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_RewardCurrDayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RewardCurrDayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RewardCurrDayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_RewardCurrDayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RewardCurrDayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RewardCurrDayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrDayRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrDayRewards = append(m.CurrDayRewards, &GuildBoos_CurrDayRewards{})
			if err := m.CurrDayRewards[len(m.CurrDayRewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherDayRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtherDayRewards = append(m.OtherDayRewards, &GuildBoos_OtherRewards{})
			if err := m.OtherDayRewards[len(m.OtherDayRewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_RewardOtherDayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RewardOtherDayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RewardOtherDayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_RewardOtherDayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RewardOtherDayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RewardOtherDayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrDayRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrDayRewards = append(m.CurrDayRewards, &GuildBoos_CurrDayRewards{})
			if err := m.CurrDayRewards[len(m.CurrDayRewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherDayRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildBoos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtherDayRewards = append(m.OtherDayRewards, &GuildBoos_OtherRewards{})
			if err := m.OtherDayRewards[len(m.OtherDayRewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_CanEnterRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CanEnterRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CanEnterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildBoos_CanEnterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CanEnterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CanEnterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Can", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Can = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemainSeconds", wireType)
			}
			m.RemainSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RemainSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalDamage", wireType)
			}
			m.TotalDamage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalDamage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshRemain", wireType)
			}
			m.RefreshRemain = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshRemain |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuildBoos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildBoos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGuildBoos(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGuildBoos
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuildBoos
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGuildBoos
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGuildBoos
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGuildBoos
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGuildBoos        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGuildBoos          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGuildBoos = fmt.Errorf("proto: unexpected end of group")
)
