// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/game_to_client_battle.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	_ "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GameToClientBattle struct {
}

func (m *GameToClientBattle) Reset()      { *m = GameToClientBattle{} }
func (*GameToClientBattle) ProtoMessage() {}
func (*GameToClientBattle) Descriptor() ([]byte, []int) {
	return fileDescriptor_022c4ddc96024e35, []int{0}
}
func (m *GameToClientBattle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GameToClientBattle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GameToClientBattle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GameToClientBattle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameToClientBattle.Merge(m, src)
}
func (m *GameToClientBattle) XXX_Size() int {
	return m.Size()
}
func (m *GameToClientBattle) XXX_DiscardUnknown() {
	xxx_messageInfo_GameToClientBattle.DiscardUnknown(m)
}

var xxx_messageInfo_GameToClientBattle proto.InternalMessageInfo

func (*GameToClientBattle) XXX_MessageName() string {
	return "service.GameToClientBattle"
}
func init() {
	proto.RegisterType((*GameToClientBattle)(nil), "service.GameToClientBattle")
}

func init() {
	proto.RegisterFile("proto/service/game_to_client_battle.proto", fileDescriptor_022c4ddc96024e35)
}

var fileDescriptor_022c4ddc96024e35 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x4f, 0xcc, 0x4d, 0x8d, 0x2f,
	0xc9, 0x8f, 0x4f, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0x89, 0x4f, 0x4a, 0x2c, 0x29, 0xc9, 0x49, 0xd5,
	0x03, 0xab, 0x11, 0x62, 0x87, 0x2a, 0x92, 0x92, 0x84, 0xe8, 0xc9, 0xcd, 0x4f, 0x49, 0xcd, 0x29,
	0xd6, 0x47, 0x56, 0x23, 0x25, 0x8e, 0x22, 0x55, 0x5a, 0x9c, 0x5a, 0x04, 0x95, 0x40, 0xd5, 0x93,
	0x91, 0x9a, 0x98, 0x02, 0x93, 0x52, 0x12, 0xe1, 0x12, 0x72, 0x4f, 0xcc, 0x4d, 0x0d, 0xc9, 0x77,
	0x06, 0x5b, 0xea, 0x04, 0x36, 0xcf, 0xc9, 0xef, 0xc6, 0x43, 0x39, 0x86, 0x15, 0x8f, 0xe4, 0x18,
	0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x17, 0x8f, 0xe4,
	0x18, 0x3e, 0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc4, 0x63, 0x39, 0xc6, 0x0b, 0x8f,
	0xe5, 0x18, 0x6e, 0x3c, 0x96, 0x63, 0x88, 0x52, 0x48, 0xce, 0xcf, 0xcc, 0xd3, 0x05, 0x39, 0x30,
	0xb5, 0x48, 0x3f, 0x39, 0x3f, 0x37, 0x37, 0x3f, 0x4f, 0x1f, 0xc5, 0x67, 0x49, 0x6c, 0x60, 0xae,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xee, 0xc3, 0x87, 0xf1, 0x00, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGameToClientBattle.Get().(proto.Message)
	})
}

var poolGameToClientBattle = &sync.Pool{New: func() interface{} { return &GameToClientBattle{} }}

func (m *GameToClientBattle) ReleasePool() { m.Reset(); poolGameToClientBattle.Put(m); m = nil }
func (this *GameToClientBattle) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GameToClientBattle)
	if !ok {
		that2, ok := that.(GameToClientBattle)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *GameToClientBattle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GameToClientBattle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GameToClientBattle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintGameToClientBattle(dAtA []byte, offset int, v uint64) int {
	offset -= sovGameToClientBattle(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *GameToClientBattle) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GameToClientBattle) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GameToClientBattle) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GameToClientBattle) GoString() string {
	return m.String()
}

func (m *GameToClientBattle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovGameToClientBattle(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGameToClientBattle(x uint64) (n int) {
	return sovGameToClientBattle(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GameToClientBattle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGameToClientBattle
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GameToClientBattle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GameToClientBattle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGameToClientBattle(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGameToClientBattle
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGameToClientBattle(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGameToClientBattle
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGameToClientBattle
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGameToClientBattle
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGameToClientBattle
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGameToClientBattle
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGameToClientBattle
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGameToClientBattle        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGameToClientBattle          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGameToClientBattle = fmt.Errorf("proto: unexpected end of group")
)
