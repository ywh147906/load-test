// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/stage.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	_ "github.com/ywh147906/load-test/common/proto/battle"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StageErrorCode int32

const (
	StageErrorCode_ErrStageIdNotExist       StageErrorCode = 0
	StageErrorCode_ErrStageNotUnlock        StageErrorCode = 1
	StageErrorCode_ErrStageExploreNotFinish StageErrorCode = 2
)

var StageErrorCode_name = map[int32]string{
	0: "ErrStageIdNotExist",
	1: "ErrStageNotUnlock",
	2: "ErrStageExploreNotFinish",
}

var StageErrorCode_value = map[string]int32{
	"ErrStageIdNotExist":       0,
	"ErrStageNotUnlock":        1,
	"ErrStageExploreNotFinish": 2,
}

func (StageErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0}
}

type Stage struct {
}

func (m *Stage) Reset()      { *m = Stage{} }
func (*Stage) ProtoMessage() {}
func (*Stage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0}
}
func (m *Stage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage.Merge(m, src)
}
func (m *Stage) XXX_Size() int {
	return m.Size()
}
func (m *Stage) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage.DiscardUnknown(m)
}

var xxx_messageInfo_Stage proto.InternalMessageInfo

func (*Stage) XXX_MessageName() string {
	return "service.Stage"
}

type Stage_GetStageListRequest struct {
}

func (m *Stage_GetStageListRequest) Reset()      { *m = Stage_GetStageListRequest{} }
func (*Stage_GetStageListRequest) ProtoMessage() {}
func (*Stage_GetStageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 0}
}
func (m *Stage_GetStageListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_GetStageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_GetStageListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_GetStageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_GetStageListRequest.Merge(m, src)
}
func (m *Stage_GetStageListRequest) XXX_Size() int {
	return m.Size()
}
func (m *Stage_GetStageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_GetStageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_GetStageListRequest proto.InternalMessageInfo

func (*Stage_GetStageListRequest) XXX_MessageName() string {
	return "service.Stage.GetStageListRequest"
}

type Stage_GetStageListResponse struct {
	CurrStageId int64                  `protobuf:"varint,1,opt,name=curr_stage_id,json=currStageId,proto3" json:"curr_stage_id,omitempty"`
	Explore     []*models.StageExplore `protobuf:"bytes,2,rep,name=explore,proto3" json:"explore,omitempty"`
}

func (m *Stage_GetStageListResponse) Reset()      { *m = Stage_GetStageListResponse{} }
func (*Stage_GetStageListResponse) ProtoMessage() {}
func (*Stage_GetStageListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 1}
}
func (m *Stage_GetStageListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_GetStageListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_GetStageListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_GetStageListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_GetStageListResponse.Merge(m, src)
}
func (m *Stage_GetStageListResponse) XXX_Size() int {
	return m.Size()
}
func (m *Stage_GetStageListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_GetStageListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_GetStageListResponse proto.InternalMessageInfo

func (m *Stage_GetStageListResponse) GetCurrStageId() int64 {
	if m != nil {
		return m.CurrStageId
	}
	return 0
}

func (m *Stage_GetStageListResponse) GetExplore() []*models.StageExplore {
	if m != nil {
		return m.Explore
	}
	return nil
}

func (*Stage_GetStageListResponse) XXX_MessageName() string {
	return "service.Stage.GetStageListResponse"
}

type Stage_GetExploreRewardRequest struct {
	StageId int64 `protobuf:"varint,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
}

func (m *Stage_GetExploreRewardRequest) Reset()      { *m = Stage_GetExploreRewardRequest{} }
func (*Stage_GetExploreRewardRequest) ProtoMessage() {}
func (*Stage_GetExploreRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 2}
}
func (m *Stage_GetExploreRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_GetExploreRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_GetExploreRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_GetExploreRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_GetExploreRewardRequest.Merge(m, src)
}
func (m *Stage_GetExploreRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *Stage_GetExploreRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_GetExploreRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_GetExploreRewardRequest proto.InternalMessageInfo

func (m *Stage_GetExploreRewardRequest) GetStageId() int64 {
	if m != nil {
		return m.StageId
	}
	return 0
}

func (*Stage_GetExploreRewardRequest) XXX_MessageName() string {
	return "service.Stage.GetExploreRewardRequest"
}

type Stage_GetExploreRewardResponse struct {
	Reward map[int64]int64 `protobuf:"bytes,1,rep,name=reward,proto3" json:"reward,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Stage_GetExploreRewardResponse) Reset()      { *m = Stage_GetExploreRewardResponse{} }
func (*Stage_GetExploreRewardResponse) ProtoMessage() {}
func (*Stage_GetExploreRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 3}
}
func (m *Stage_GetExploreRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_GetExploreRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_GetExploreRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_GetExploreRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_GetExploreRewardResponse.Merge(m, src)
}
func (m *Stage_GetExploreRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *Stage_GetExploreRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_GetExploreRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_GetExploreRewardResponse proto.InternalMessageInfo

func (m *Stage_GetExploreRewardResponse) GetReward() map[int64]int64 {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (*Stage_GetExploreRewardResponse) XXX_MessageName() string {
	return "service.Stage.GetExploreRewardResponse"
}

type Stage_CheatUnlockAllStageRequest struct {
}

func (m *Stage_CheatUnlockAllStageRequest) Reset()      { *m = Stage_CheatUnlockAllStageRequest{} }
func (*Stage_CheatUnlockAllStageRequest) ProtoMessage() {}
func (*Stage_CheatUnlockAllStageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 4}
}
func (m *Stage_CheatUnlockAllStageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_CheatUnlockAllStageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_CheatUnlockAllStageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_CheatUnlockAllStageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_CheatUnlockAllStageRequest.Merge(m, src)
}
func (m *Stage_CheatUnlockAllStageRequest) XXX_Size() int {
	return m.Size()
}
func (m *Stage_CheatUnlockAllStageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_CheatUnlockAllStageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_CheatUnlockAllStageRequest proto.InternalMessageInfo

func (*Stage_CheatUnlockAllStageRequest) XXX_MessageName() string {
	return "service.Stage.CheatUnlockAllStageRequest"
}

type Stage_CheatUnlockAllStageResponse struct {
}

func (m *Stage_CheatUnlockAllStageResponse) Reset()      { *m = Stage_CheatUnlockAllStageResponse{} }
func (*Stage_CheatUnlockAllStageResponse) ProtoMessage() {}
func (*Stage_CheatUnlockAllStageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 5}
}
func (m *Stage_CheatUnlockAllStageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_CheatUnlockAllStageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_CheatUnlockAllStageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_CheatUnlockAllStageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_CheatUnlockAllStageResponse.Merge(m, src)
}
func (m *Stage_CheatUnlockAllStageResponse) XXX_Size() int {
	return m.Size()
}
func (m *Stage_CheatUnlockAllStageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_CheatUnlockAllStageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_CheatUnlockAllStageResponse proto.InternalMessageInfo

func (*Stage_CheatUnlockAllStageResponse) XXX_MessageName() string {
	return "service.Stage.CheatUnlockAllStageResponse"
}

type Stage_CheatSetExploreDegreeRequest struct {
	StageId int64 `protobuf:"varint,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
}

func (m *Stage_CheatSetExploreDegreeRequest) Reset()      { *m = Stage_CheatSetExploreDegreeRequest{} }
func (*Stage_CheatSetExploreDegreeRequest) ProtoMessage() {}
func (*Stage_CheatSetExploreDegreeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 6}
}
func (m *Stage_CheatSetExploreDegreeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_CheatSetExploreDegreeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_CheatSetExploreDegreeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_CheatSetExploreDegreeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_CheatSetExploreDegreeRequest.Merge(m, src)
}
func (m *Stage_CheatSetExploreDegreeRequest) XXX_Size() int {
	return m.Size()
}
func (m *Stage_CheatSetExploreDegreeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_CheatSetExploreDegreeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_CheatSetExploreDegreeRequest proto.InternalMessageInfo

func (m *Stage_CheatSetExploreDegreeRequest) GetStageId() int64 {
	if m != nil {
		return m.StageId
	}
	return 0
}

func (*Stage_CheatSetExploreDegreeRequest) XXX_MessageName() string {
	return "service.Stage.CheatSetExploreDegreeRequest"
}

type Stage_CheatSetExploreDegreeResponse struct {
}

func (m *Stage_CheatSetExploreDegreeResponse) Reset()      { *m = Stage_CheatSetExploreDegreeResponse{} }
func (*Stage_CheatSetExploreDegreeResponse) ProtoMessage() {}
func (*Stage_CheatSetExploreDegreeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ddc9538bfe97132, []int{0, 7}
}
func (m *Stage_CheatSetExploreDegreeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Stage_CheatSetExploreDegreeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Stage_CheatSetExploreDegreeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Stage_CheatSetExploreDegreeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stage_CheatSetExploreDegreeResponse.Merge(m, src)
}
func (m *Stage_CheatSetExploreDegreeResponse) XXX_Size() int {
	return m.Size()
}
func (m *Stage_CheatSetExploreDegreeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Stage_CheatSetExploreDegreeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Stage_CheatSetExploreDegreeResponse proto.InternalMessageInfo

func (*Stage_CheatSetExploreDegreeResponse) XXX_MessageName() string {
	return "service.Stage.CheatSetExploreDegreeResponse"
}
func init() {
	proto.RegisterEnum("service.StageErrorCode", StageErrorCode_name, StageErrorCode_value)
	proto.RegisterType((*Stage)(nil), "service.Stage")
	proto.RegisterType((*Stage_GetStageListRequest)(nil), "service.Stage.GetStageListRequest")
	proto.RegisterType((*Stage_GetStageListResponse)(nil), "service.Stage.GetStageListResponse")
	proto.RegisterType((*Stage_GetExploreRewardRequest)(nil), "service.Stage.GetExploreRewardRequest")
	proto.RegisterType((*Stage_GetExploreRewardResponse)(nil), "service.Stage.GetExploreRewardResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Stage.GetExploreRewardResponse.RewardEntry")
	proto.RegisterType((*Stage_CheatUnlockAllStageRequest)(nil), "service.Stage.CheatUnlockAllStageRequest")
	proto.RegisterType((*Stage_CheatUnlockAllStageResponse)(nil), "service.Stage.CheatUnlockAllStageResponse")
	proto.RegisterType((*Stage_CheatSetExploreDegreeRequest)(nil), "service.Stage.CheatSetExploreDegreeRequest")
	proto.RegisterType((*Stage_CheatSetExploreDegreeResponse)(nil), "service.Stage.CheatSetExploreDegreeResponse")
}

func init() { proto.RegisterFile("proto/service/stage.proto", fileDescriptor_9ddc9538bfe97132) }

var fileDescriptor_9ddc9538bfe97132 = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x41, 0x6b, 0x13, 0x41,
	0x18, 0xdd, 0x49, 0x68, 0x23, 0x13, 0xd4, 0x74, 0x4c, 0xe9, 0x76, 0xda, 0x8c, 0x69, 0x4f, 0x45,
	0xec, 0x06, 0xac, 0x07, 0xeb, 0x45, 0xb4, 0xc6, 0x22, 0x4a, 0x0e, 0x29, 0x5e, 0xbc, 0x94, 0x4d,
	0x76, 0x68, 0xd7, 0x6e, 0x76, 0xe2, 0xcc, 0xa4, 0xb6, 0x47, 0x0f, 0x82, 0x04, 0x0a, 0x3d, 0x88,
	0x78, 0xa8, 0x87, 0x2a, 0x62, 0x11, 0x14, 0x44, 0x2a, 0x82, 0xd0, 0x73, 0x8f, 0x3d, 0xf6, 0xa8,
	0x9b, 0x6e, 0xa8, 0x37, 0x7f, 0x81, 0xc8, 0xce, 0xec, 0x96, 0x46, 0x2d, 0x78, 0x9b, 0xef, 0xbd,
	0xf7, 0xbd, 0xef, 0xcd, 0x37, 0xbb, 0x70, 0xb8, 0xc9, 0x99, 0x64, 0x25, 0x41, 0xf9, 0xb2, 0x5b,
	0xa7, 0x25, 0x21, 0xed, 0x05, 0x6a, 0x29, 0x0c, 0x65, 0x62, 0x10, 0x9b, 0x5a, 0xd3, 0x60, 0x0e,
	0xf5, 0xc4, 0x71, 0x09, 0x1e, 0xea, 0x61, 0x6a, 0xb6, 0x48, 0x88, 0x31, 0x4d, 0xd4, 0x6c, 0x29,
	0x3d, 0x3a, 0x99, 0xb8, 0xeb, 0x52, 0x4b, 0xc6, 0x7f, 0xa5, 0x61, 0xdf, 0x5c, 0xe4, 0x85, 0x07,
	0xe1, 0xb9, 0x59, 0x2a, 0xd5, 0xf9, 0xae, 0x2b, 0x64, 0x95, 0x3e, 0x6c, 0x51, 0x21, 0xf1, 0x03,
	0x98, 0xef, 0x85, 0x45, 0x93, 0xf9, 0x82, 0xa2, 0x71, 0x78, 0xba, 0xde, 0xe2, 0x7c, 0x5e, 0x05,
	0x99, 0x77, 0x1d, 0x13, 0x14, 0xc1, 0x44, 0xba, 0x9a, 0x8d, 0x40, 0xa5, 0xbe, 0xed, 0x20, 0x0b,
	0x66, 0xe8, 0x4a, 0xd3, 0x63, 0x9c, 0x9a, 0xa9, 0x62, 0x7a, 0x22, 0x7b, 0x29, 0x6f, 0xe9, 0x90,
	0x96, 0x52, 0x94, 0x35, 0x57, 0x4d, 0x44, 0xf8, 0x32, 0x1c, 0x9a, 0xa5, 0x32, 0x81, 0xe9, 0x23,
	0x9b, 0x3b, 0x71, 0x0c, 0x34, 0x0c, 0x4f, 0xfd, 0x31, 0x29, 0x23, 0xf4, 0x14, 0xfc, 0x0a, 0x40,
	0xf3, 0xef, 0xb6, 0x38, 0xe6, 0x1d, 0xd8, 0xcf, 0x15, 0x62, 0x02, 0x95, 0x60, 0xca, 0x8a, 0xd7,
	0xa0, 0x23, 0x58, 0x27, 0x35, 0x5a, 0xba, 0x2c, 0xfb, 0x92, 0xaf, 0x56, 0x63, 0x0b, 0x3c, 0x0d,
	0xb3, 0xc7, 0x60, 0x94, 0x83, 0xe9, 0x25, 0xba, 0x1a, 0xc7, 0x89, 0x8e, 0x28, 0x0f, 0xfb, 0x96,
	0x6d, 0xaf, 0x15, 0x5d, 0x37, 0xc2, 0x74, 0x71, 0x35, 0x75, 0x05, 0xe0, 0x51, 0x88, 0x67, 0x16,
	0xa9, 0x2d, 0xef, 0xf9, 0x1e, 0xab, 0x2f, 0x5d, 0xf7, 0x3c, 0x35, 0x3e, 0x59, 0x72, 0x01, 0x8e,
	0xfc, 0x93, 0xd5, 0x59, 0xf0, 0x34, 0x1c, 0x55, 0xf4, 0xdc, 0x51, 0xd8, 0x9b, 0x74, 0x81, 0x53,
	0xfa, 0x1f, 0xcb, 0x39, 0x0f, 0x0b, 0x27, 0xb4, 0x6a, 0xef, 0x0b, 0x1f, 0x00, 0x3c, 0xa3, 0x5f,
	0x83, 0x73, 0xc6, 0x67, 0x98, 0x43, 0xd1, 0x24, 0x44, 0xe5, 0xa3, 0x47, 0xac, 0x30, 0x59, 0x5e,
	0x71, 0x85, 0xcc, 0x19, 0x78, 0xb0, 0xbd, 0x6d, 0x0e, 0xa0, 0xb3, 0xe1, 0x93, 0x4f, 0xe1, 0xda,
	0xe6, 0xc1, 0x97, 0xb5, 0xf0, 0xfd, 0x8b, 0x70, 0x63, 0x0b, 0x5d, 0x84, 0x03, 0x89, 0xbc, 0xc2,
	0xe2, 0x2b, 0xe4, 0x40, 0xaf, 0xba, 0xbb, 0xf1, 0xee, 0xf0, 0xed, 0xeb, 0x1f, 0xcf, 0x1e, 0xa3,
	0x6b, 0xd0, 0x4c, 0xd4, 0x71, 0xa0, 0x0a, 0x93, 0xb7, 0x5c, 0xdf, 0x15, 0x8b, 0xb9, 0x14, 0x1e,
	0x6b, 0x6f, 0x9b, 0x05, 0x34, 0xa2, 0x9b, 0xc2, 0x37, 0xcf, 0xc3, 0xf6, 0xc7, 0xee, 0xcb, 0xcd,
	0x83, 0xaf, 0x9f, 0x23, 0x83, 0x9d, 0x9d, 0xee, 0xd3, 0xf5, 0x1b, 0x95, 0xfd, 0xef, 0xc4, 0xd8,
	0x0a, 0x08, 0xd8, 0x0d, 0x08, 0xd8, 0x0b, 0x08, 0xf8, 0x16, 0x10, 0x70, 0x18, 0x10, 0xe3, 0x67,
	0x40, 0xc0, 0x7a, 0x87, 0x18, 0xbb, 0x1d, 0x02, 0xf6, 0x3a, 0xc4, 0xd8, 0xef, 0x10, 0xe3, 0x7e,
	0xb1, 0xce, 0x5c, 0x5f, 0x7d, 0xfa, 0x94, 0x97, 0xea, 0xac, 0xd1, 0x60, 0x7e, 0xa9, 0xe7, 0x67,
	0xab, 0xf5, 0xab, 0x72, 0xea, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xa9, 0x44, 0xf6, 0x84,
	0x03, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_GetStageListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_GetStageListResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_GetExploreRewardRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_GetExploreRewardResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_CheatUnlockAllStageRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_CheatUnlockAllStageResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_CheatSetExploreDegreeRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolStage_CheatSetExploreDegreeResponse.Get().(proto.Message)
	})
}

var poolStage = &sync.Pool{New: func() interface{} { return &Stage{} }}

func (m *Stage) ReleasePool() { m.Reset(); poolStage.Put(m); m = nil }

var poolStage_GetStageListRequest = &sync.Pool{New: func() interface{} { return &Stage_GetStageListRequest{} }}

func (m *Stage_GetStageListRequest) ReleasePool() {
	m.Reset()
	poolStage_GetStageListRequest.Put(m)
	m = nil
}

var poolStage_GetStageListResponse = &sync.Pool{New: func() interface{} { return &Stage_GetStageListResponse{} }}

func (m *Stage_GetStageListResponse) ReleasePool() {
	m.Reset()
	poolStage_GetStageListResponse.Put(m)
	m = nil
}

var poolStage_GetExploreRewardRequest = &sync.Pool{New: func() interface{} { return &Stage_GetExploreRewardRequest{} }}

func (m *Stage_GetExploreRewardRequest) ReleasePool() {
	m.Reset()
	poolStage_GetExploreRewardRequest.Put(m)
	m = nil
}

var poolStage_GetExploreRewardResponse = &sync.Pool{New: func() interface{} { return &Stage_GetExploreRewardResponse{} }}

func (m *Stage_GetExploreRewardResponse) ReleasePool() {
	m.Reset()
	poolStage_GetExploreRewardResponse.Put(m)
	m = nil
}

var poolStage_CheatUnlockAllStageRequest = &sync.Pool{New: func() interface{} { return &Stage_CheatUnlockAllStageRequest{} }}

func (m *Stage_CheatUnlockAllStageRequest) ReleasePool() {
	m.Reset()
	poolStage_CheatUnlockAllStageRequest.Put(m)
	m = nil
}

var poolStage_CheatUnlockAllStageResponse = &sync.Pool{New: func() interface{} { return &Stage_CheatUnlockAllStageResponse{} }}

func (m *Stage_CheatUnlockAllStageResponse) ReleasePool() {
	m.Reset()
	poolStage_CheatUnlockAllStageResponse.Put(m)
	m = nil
}

var poolStage_CheatSetExploreDegreeRequest = &sync.Pool{New: func() interface{} { return &Stage_CheatSetExploreDegreeRequest{} }}

func (m *Stage_CheatSetExploreDegreeRequest) ReleasePool() {
	m.Reset()
	poolStage_CheatSetExploreDegreeRequest.Put(m)
	m = nil
}

var poolStage_CheatSetExploreDegreeResponse = &sync.Pool{New: func() interface{} { return &Stage_CheatSetExploreDegreeResponse{} }}

func (m *Stage_CheatSetExploreDegreeResponse) ReleasePool() {
	m.Reset()
	poolStage_CheatSetExploreDegreeResponse.Put(m)
	m = nil
}
func (x StageErrorCode) String() string {
	s, ok := StageErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Stage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage)
	if !ok {
		that2, ok := that.(Stage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Stage_GetStageListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_GetStageListRequest)
	if !ok {
		that2, ok := that.(Stage_GetStageListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Stage_GetStageListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_GetStageListResponse)
	if !ok {
		that2, ok := that.(Stage_GetStageListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CurrStageId != that1.CurrStageId {
		return false
	}
	if len(this.Explore) != len(that1.Explore) {
		return false
	}
	for i := range this.Explore {
		if !this.Explore[i].Equal(that1.Explore[i]) {
			return false
		}
	}
	return true
}
func (this *Stage_GetExploreRewardRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_GetExploreRewardRequest)
	if !ok {
		that2, ok := that.(Stage_GetExploreRewardRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.StageId != that1.StageId {
		return false
	}
	return true
}
func (this *Stage_GetExploreRewardResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_GetExploreRewardResponse)
	if !ok {
		that2, ok := that.(Stage_GetExploreRewardResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Reward) != len(that1.Reward) {
		return false
	}
	for i := range this.Reward {
		if this.Reward[i] != that1.Reward[i] {
			return false
		}
	}
	return true
}
func (this *Stage_CheatUnlockAllStageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_CheatUnlockAllStageRequest)
	if !ok {
		that2, ok := that.(Stage_CheatUnlockAllStageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Stage_CheatUnlockAllStageResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_CheatUnlockAllStageResponse)
	if !ok {
		that2, ok := that.(Stage_CheatUnlockAllStageResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Stage_CheatSetExploreDegreeRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_CheatSetExploreDegreeRequest)
	if !ok {
		that2, ok := that.(Stage_CheatSetExploreDegreeRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.StageId != that1.StageId {
		return false
	}
	return true
}
func (this *Stage_CheatSetExploreDegreeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Stage_CheatSetExploreDegreeResponse)
	if !ok {
		that2, ok := that.(Stage_CheatSetExploreDegreeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Stage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Stage_GetStageListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_GetStageListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_GetStageListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Stage_GetStageListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_GetStageListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_GetStageListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Explore) > 0 {
		for iNdEx := len(m.Explore) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Explore[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintStage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.CurrStageId != 0 {
		i = encodeVarintStage(dAtA, i, uint64(m.CurrStageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Stage_GetExploreRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_GetExploreRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_GetExploreRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StageId != 0 {
		i = encodeVarintStage(dAtA, i, uint64(m.StageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Stage_GetExploreRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_GetExploreRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_GetExploreRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reward) > 0 {
		for k := range m.Reward {
			v := m.Reward[k]
			baseI := i
			i = encodeVarintStage(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintStage(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintStage(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Stage_CheatUnlockAllStageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_CheatUnlockAllStageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_CheatUnlockAllStageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Stage_CheatUnlockAllStageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_CheatUnlockAllStageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_CheatUnlockAllStageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Stage_CheatSetExploreDegreeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_CheatSetExploreDegreeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_CheatSetExploreDegreeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StageId != 0 {
		i = encodeVarintStage(dAtA, i, uint64(m.StageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Stage_CheatSetExploreDegreeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Stage_CheatSetExploreDegreeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Stage_CheatSetExploreDegreeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintStage(dAtA []byte, offset int, v uint64) int {
	offset -= sovStage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Stage) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Stage_GetStageListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Stage_GetStageListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.CurrStageId != 0 {
		w.RawByte('"')
		w.RawString("curr_stage_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CurrStageId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("explore")
	w.RawByte('"')
	w.RawByte(':')
	if m.Explore == nil {
		w.RawString("null")
	} else if len(m.Explore) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Explore {
			v.JsonBytes(w)
			if i != len(m.Explore)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Stage_GetExploreRewardRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.StageId != 0 {
		w.RawByte('"')
		w.RawString("stage_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.StageId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Stage_GetExploreRewardResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("reward")
	w.RawByte('"')
	w.RawByte(':')
	if m.Reward == nil {
		w.RawString("null")
	} else if len(m.Reward) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlReward := len(m.Reward)
		for k, v := range m.Reward {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlReward--
			if mlReward != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Stage_CheatUnlockAllStageRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Stage_CheatUnlockAllStageResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Stage_CheatSetExploreDegreeRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.StageId != 0 {
		w.RawByte('"')
		w.RawString("stage_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.StageId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Stage_CheatSetExploreDegreeResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Stage) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage) GoString() string {
	return m.String()
}

func (m *Stage_GetStageListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_GetStageListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_GetStageListRequest) GoString() string {
	return m.String()
}

func (m *Stage_GetStageListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_GetStageListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_GetStageListResponse) GoString() string {
	return m.String()
}

func (m *Stage_GetExploreRewardRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_GetExploreRewardRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_GetExploreRewardRequest) GoString() string {
	return m.String()
}

func (m *Stage_GetExploreRewardResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_GetExploreRewardResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_GetExploreRewardResponse) GoString() string {
	return m.String()
}

func (m *Stage_CheatUnlockAllStageRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_CheatUnlockAllStageRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_CheatUnlockAllStageRequest) GoString() string {
	return m.String()
}

func (m *Stage_CheatUnlockAllStageResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_CheatUnlockAllStageResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_CheatUnlockAllStageResponse) GoString() string {
	return m.String()
}

func (m *Stage_CheatSetExploreDegreeRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_CheatSetExploreDegreeRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_CheatSetExploreDegreeRequest) GoString() string {
	return m.String()
}

func (m *Stage_CheatSetExploreDegreeResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Stage_CheatSetExploreDegreeResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Stage_CheatSetExploreDegreeResponse) GoString() string {
	return m.String()
}

func (m *Stage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Stage_GetStageListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Stage_GetStageListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrStageId != 0 {
		n += 1 + sovStage(uint64(m.CurrStageId))
	}
	if len(m.Explore) > 0 {
		for _, e := range m.Explore {
			l = e.Size()
			n += 1 + l + sovStage(uint64(l))
		}
	}
	return n
}

func (m *Stage_GetExploreRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StageId != 0 {
		n += 1 + sovStage(uint64(m.StageId))
	}
	return n
}

func (m *Stage_GetExploreRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Reward) > 0 {
		for k, v := range m.Reward {
			_ = k
			_ = v
			mapEntrySize := 1 + sovStage(uint64(k)) + 1 + sovStage(uint64(v))
			n += mapEntrySize + 1 + sovStage(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Stage_CheatUnlockAllStageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Stage_CheatUnlockAllStageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Stage_CheatSetExploreDegreeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StageId != 0 {
		n += 1 + sovStage(uint64(m.StageId))
	}
	return n
}

func (m *Stage_CheatSetExploreDegreeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovStage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStage(x uint64) (n int) {
	return sovStage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Stage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Stage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Stage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_GetStageListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetStageListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetStageListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_GetStageListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetStageListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetStageListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrStageId", wireType)
			}
			m.CurrStageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrStageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Explore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Explore = append(m.Explore, &models.StageExplore{})
			if err := m.Explore[len(m.Explore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_GetExploreRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetExploreRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetExploreRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StageId", wireType)
			}
			m.StageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_GetExploreRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetExploreRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetExploreRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reward == nil {
				m.Reward = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStage
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStage
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStage
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipStage(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthStage
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Reward[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_CheatUnlockAllStageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatUnlockAllStageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatUnlockAllStageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_CheatUnlockAllStageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatUnlockAllStageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatUnlockAllStageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_CheatSetExploreDegreeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetExploreDegreeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetExploreDegreeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StageId", wireType)
			}
			m.StageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Stage_CheatSetExploreDegreeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetExploreDegreeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetExploreDegreeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStage = fmt.Errorf("proto: unexpected end of group")
)
