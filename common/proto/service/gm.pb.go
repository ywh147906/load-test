// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/gm.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GM struct {
}

func (m *GM) Reset()      { *m = GM{} }
func (*GM) ProtoMessage() {}
func (*GM) Descriptor() ([]byte, []int) {
	return fileDescriptor_530103c4e779d0fe, []int{0}
}
func (m *GM) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GM.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GM.Merge(m, src)
}
func (m *GM) XXX_Size() int {
	return m.Size()
}
func (m *GM) XXX_DiscardUnknown() {
	xxx_messageInfo_GM.DiscardUnknown(m)
}

var xxx_messageInfo_GM proto.InternalMessageInfo

func (*GM) XXX_MessageName() string {
	return "service.GM"
}

// 发送邮件
type GM_SendMail struct {
	Mail *models.Mail `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
}

func (m *GM_SendMail) Reset()      { *m = GM_SendMail{} }
func (*GM_SendMail) ProtoMessage() {}
func (*GM_SendMail) Descriptor() ([]byte, []int) {
	return fileDescriptor_530103c4e779d0fe, []int{0, 0}
}
func (m *GM_SendMail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GM_SendMail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GM_SendMail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GM_SendMail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GM_SendMail.Merge(m, src)
}
func (m *GM_SendMail) XXX_Size() int {
	return m.Size()
}
func (m *GM_SendMail) XXX_DiscardUnknown() {
	xxx_messageInfo_GM_SendMail.DiscardUnknown(m)
}

var xxx_messageInfo_GM_SendMail proto.InternalMessageInfo

func (m *GM_SendMail) GetMail() *models.Mail {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (*GM_SendMail) XXX_MessageName() string {
	return "service.GM.SendMail"
}

// 删除邮件
type GM_DeleteMail struct {
	MailId []string `protobuf:"bytes,1,rep,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
}

func (m *GM_DeleteMail) Reset()      { *m = GM_DeleteMail{} }
func (*GM_DeleteMail) ProtoMessage() {}
func (*GM_DeleteMail) Descriptor() ([]byte, []int) {
	return fileDescriptor_530103c4e779d0fe, []int{0, 1}
}
func (m *GM_DeleteMail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GM_DeleteMail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GM_DeleteMail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GM_DeleteMail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GM_DeleteMail.Merge(m, src)
}
func (m *GM_DeleteMail) XXX_Size() int {
	return m.Size()
}
func (m *GM_DeleteMail) XXX_DiscardUnknown() {
	xxx_messageInfo_GM_DeleteMail.DiscardUnknown(m)
}

var xxx_messageInfo_GM_DeleteMail proto.InternalMessageInfo

func (m *GM_DeleteMail) GetMailId() []string {
	if m != nil {
		return m.MailId
	}
	return nil
}

func (*GM_DeleteMail) XXX_MessageName() string {
	return "service.GM.DeleteMail"
}

// 删除全服邮件
type GM_DeleteEntireMail struct {
	MailId []string `protobuf:"bytes,1,rep,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
}

func (m *GM_DeleteEntireMail) Reset()      { *m = GM_DeleteEntireMail{} }
func (*GM_DeleteEntireMail) ProtoMessage() {}
func (*GM_DeleteEntireMail) Descriptor() ([]byte, []int) {
	return fileDescriptor_530103c4e779d0fe, []int{0, 2}
}
func (m *GM_DeleteEntireMail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GM_DeleteEntireMail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GM_DeleteEntireMail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GM_DeleteEntireMail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GM_DeleteEntireMail.Merge(m, src)
}
func (m *GM_DeleteEntireMail) XXX_Size() int {
	return m.Size()
}
func (m *GM_DeleteEntireMail) XXX_DiscardUnknown() {
	xxx_messageInfo_GM_DeleteEntireMail.DiscardUnknown(m)
}

var xxx_messageInfo_GM_DeleteEntireMail proto.InternalMessageInfo

func (m *GM_DeleteEntireMail) GetMailId() []string {
	if m != nil {
		return m.MailId
	}
	return nil
}

func (*GM_DeleteEntireMail) XXX_MessageName() string {
	return "service.GM.DeleteEntireMail"
}
func init() {
	proto.RegisterType((*GM)(nil), "service.GM")
	proto.RegisterType((*GM_SendMail)(nil), "service.GM.SendMail")
	proto.RegisterType((*GM_DeleteMail)(nil), "service.GM.DeleteMail")
	proto.RegisterType((*GM_DeleteEntireMail)(nil), "service.GM.DeleteEntireMail")
}

func init() { proto.RegisterFile("proto/service/gm.proto", fileDescriptor_530103c4e779d0fe) }

var fileDescriptor_530103c4e779d0fe = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0xcf, 0xd5, 0x03, 0x0b, 0x08,
	0xb1, 0x43, 0x45, 0xa4, 0xc4, 0x21, 0x0a, 0x72, 0xf3, 0x53, 0x52, 0x73, 0x8a, 0xf5, 0x73, 0x13,
	0x33, 0x73, 0x20, 0x2a, 0xd0, 0x24, 0x92, 0x12, 0x8b, 0x53, 0x21, 0x12, 0x4a, 0x6d, 0x8c, 0x5c,
	0x4c, 0xee, 0xbe, 0x52, 0x3a, 0x5c, 0x1c, 0xc1, 0xa9, 0x79, 0x29, 0xbe, 0x89, 0x99, 0x39, 0x42,
	0x0a, 0x5c, 0x2c, 0x20, 0x9d, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x3c, 0x7a, 0x10, 0x4d,
	0x7a, 0x20, 0xb9, 0x20, 0xb0, 0x8c, 0x94, 0x2a, 0x17, 0x97, 0x4b, 0x6a, 0x4e, 0x6a, 0x49, 0x2a,
	0x58, 0xbd, 0x38, 0x17, 0x3b, 0x48, 0x34, 0x3e, 0x33, 0x45, 0x82, 0x51, 0x81, 0x59, 0x83, 0x33,
	0x88, 0x0d, 0xc4, 0xf5, 0x4c, 0x91, 0xd2, 0xe6, 0x12, 0x80, 0x28, 0x73, 0xcd, 0x2b, 0xc9, 0x2c,
	0xc2, 0xaf, 0xd8, 0xc9, 0xef, 0xc6, 0x43, 0x39, 0x86, 0x15, 0x8f, 0xe4, 0x18, 0x4f, 0x3c, 0x92,
	0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x17, 0x8f, 0xe4, 0x18, 0x3e, 0x3c,
	0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc4, 0x63, 0x39, 0xc6, 0x0b, 0x8f, 0xe5, 0x18, 0x6e,
	0x3c, 0x96, 0x63, 0x88, 0x52, 0x48, 0xce, 0xcf, 0xcc, 0xd3, 0x05, 0x79, 0x3b, 0xb5, 0x48, 0x3f,
	0x39, 0x3f, 0x37, 0x37, 0x3f, 0x4f, 0x1f, 0x25, 0x70, 0x92, 0xd8, 0xc0, 0x5c, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x11, 0xe6, 0x13, 0xc8, 0x34, 0x01, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGM.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGM_SendMail.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGM_DeleteMail.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGM_DeleteEntireMail.Get().(proto.Message)
	})
}

var poolGM = &sync.Pool{New: func() interface{} { return &GM{} }}

func (m *GM) ReleasePool() { m.Reset(); poolGM.Put(m); m = nil }

var poolGM_SendMail = &sync.Pool{New: func() interface{} { return &GM_SendMail{} }}

func (m *GM_SendMail) ReleasePool() { m.Reset(); poolGM_SendMail.Put(m); m = nil }

var poolGM_DeleteMail = &sync.Pool{New: func() interface{} { return &GM_DeleteMail{} }}

func (m *GM_DeleteMail) ReleasePool() { m.Reset(); poolGM_DeleteMail.Put(m); m = nil }

var poolGM_DeleteEntireMail = &sync.Pool{New: func() interface{} { return &GM_DeleteEntireMail{} }}

func (m *GM_DeleteEntireMail) ReleasePool() { m.Reset(); poolGM_DeleteEntireMail.Put(m); m = nil }
func (this *GM) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GM)
	if !ok {
		that2, ok := that.(GM)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GM_SendMail) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GM_SendMail)
	if !ok {
		that2, ok := that.(GM_SendMail)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Mail.Equal(that1.Mail) {
		return false
	}
	return true
}
func (this *GM_DeleteMail) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GM_DeleteMail)
	if !ok {
		that2, ok := that.(GM_DeleteMail)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.MailId) != len(that1.MailId) {
		return false
	}
	for i := range this.MailId {
		if this.MailId[i] != that1.MailId[i] {
			return false
		}
	}
	return true
}
func (this *GM_DeleteEntireMail) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GM_DeleteEntireMail)
	if !ok {
		that2, ok := that.(GM_DeleteEntireMail)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.MailId) != len(that1.MailId) {
		return false
	}
	for i := range this.MailId {
		if this.MailId[i] != that1.MailId[i] {
			return false
		}
	}
	return true
}
func (m *GM) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GM) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GM) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GM_SendMail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GM_SendMail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GM_SendMail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Mail != nil {
		{
			size, err := m.Mail.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGm(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GM_DeleteMail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GM_DeleteMail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GM_DeleteMail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MailId) > 0 {
		for iNdEx := len(m.MailId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MailId[iNdEx])
			copy(dAtA[i:], m.MailId[iNdEx])
			i = encodeVarintGm(dAtA, i, uint64(len(m.MailId[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GM_DeleteEntireMail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GM_DeleteEntireMail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GM_DeleteEntireMail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MailId) > 0 {
		for iNdEx := len(m.MailId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MailId[iNdEx])
			copy(dAtA[i:], m.MailId[iNdEx])
			i = encodeVarintGm(dAtA, i, uint64(len(m.MailId[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintGm(dAtA []byte, offset int, v uint64) int {
	offset -= sovGm(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *GM) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GM_SendMail) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("mail")
	w.RawByte('"')
	w.RawByte(':')
	m.Mail.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GM_DeleteMail) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("mail_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.MailId == nil {
		w.RawString("null")
	} else if len(m.MailId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.MailId {
			w.String(v)
			if i != len(m.MailId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GM_DeleteEntireMail) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("mail_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.MailId == nil {
		w.RawString("null")
	} else if len(m.MailId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.MailId {
			w.String(v)
			if i != len(m.MailId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GM) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GM) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GM) GoString() string {
	return m.String()
}

func (m *GM_SendMail) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GM_SendMail) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GM_SendMail) GoString() string {
	return m.String()
}

func (m *GM_DeleteMail) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GM_DeleteMail) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GM_DeleteMail) GoString() string {
	return m.String()
}

func (m *GM_DeleteEntireMail) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GM_DeleteEntireMail) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GM_DeleteEntireMail) GoString() string {
	return m.String()
}

func (m *GM) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GM_SendMail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mail != nil {
		l = m.Mail.Size()
		n += 1 + l + sovGm(uint64(l))
	}
	return n
}

func (m *GM_DeleteMail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MailId) > 0 {
		for _, s := range m.MailId {
			l = len(s)
			n += 1 + l + sovGm(uint64(l))
		}
	}
	return n
}

func (m *GM_DeleteEntireMail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MailId) > 0 {
		for _, s := range m.MailId {
			l = len(s)
			n += 1 + l + sovGm(uint64(l))
		}
	}
	return n
}

func sovGm(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGm(x uint64) (n int) {
	return sovGm(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GM) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GM: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GM: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GM_SendMail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendMail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendMail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGm
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mail == nil {
				m.Mail = &models.Mail{}
			}
			if err := m.Mail.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GM_DeleteMail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteMail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteMail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MailId = append(m.MailId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GM_DeleteEntireMail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteEntireMail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteEntireMail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MailId = append(m.MailId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGm(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGm
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGm
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGm
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGm
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGm        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGm          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGm = fmt.Errorf("proto: unexpected end of group")
)
