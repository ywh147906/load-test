// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/guide.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Guide struct {
}

func (m *Guide) Reset()      { *m = Guide{} }
func (*Guide) ProtoMessage() {}
func (*Guide) Descriptor() ([]byte, []int) {
	return fileDescriptor_b50e166b5647f8ca, []int{0}
}
func (m *Guide) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guide) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guide.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guide) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guide.Merge(m, src)
}
func (m *Guide) XXX_Size() int {
	return m.Size()
}
func (m *Guide) XXX_DiscardUnknown() {
	xxx_messageInfo_Guide.DiscardUnknown(m)
}

var xxx_messageInfo_Guide proto.InternalMessageInfo

func (*Guide) XXX_MessageName() string {
	return "service.Guide"
}

// 获取角色引导信息
type Guide_GuideInfoRequest struct {
}

func (m *Guide_GuideInfoRequest) Reset()      { *m = Guide_GuideInfoRequest{} }
func (*Guide_GuideInfoRequest) ProtoMessage() {}
func (*Guide_GuideInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b50e166b5647f8ca, []int{0, 0}
}
func (m *Guide_GuideInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guide_GuideInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guide_GuideInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guide_GuideInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guide_GuideInfoRequest.Merge(m, src)
}
func (m *Guide_GuideInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guide_GuideInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guide_GuideInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guide_GuideInfoRequest proto.InternalMessageInfo

func (*Guide_GuideInfoRequest) XXX_MessageName() string {
	return "service.Guide.GuideInfoRequest"
}

type Guide_GuideInfoResponse struct {
	Info *models.Guide `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *Guide_GuideInfoResponse) Reset()      { *m = Guide_GuideInfoResponse{} }
func (*Guide_GuideInfoResponse) ProtoMessage() {}
func (*Guide_GuideInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b50e166b5647f8ca, []int{0, 1}
}
func (m *Guide_GuideInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guide_GuideInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guide_GuideInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guide_GuideInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guide_GuideInfoResponse.Merge(m, src)
}
func (m *Guide_GuideInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guide_GuideInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guide_GuideInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guide_GuideInfoResponse proto.InternalMessageInfo

func (m *Guide_GuideInfoResponse) GetInfo() *models.Guide {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*Guide_GuideInfoResponse) XXX_MessageName() string {
	return "service.Guide.GuideInfoResponse"
}

// 记录角色当前引导进度
type Guide_RecordGuideRequest struct {
	// 引导开始时记录 引导结束时都传0
	GuideId int64 `protobuf:"varint,1,opt,name=guide_id,json=guideId,proto3" json:"guide_id,omitempty"`
	StepId  int64 `protobuf:"varint,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
}

func (m *Guide_RecordGuideRequest) Reset()      { *m = Guide_RecordGuideRequest{} }
func (*Guide_RecordGuideRequest) ProtoMessage() {}
func (*Guide_RecordGuideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b50e166b5647f8ca, []int{0, 2}
}
func (m *Guide_RecordGuideRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guide_RecordGuideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guide_RecordGuideRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guide_RecordGuideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guide_RecordGuideRequest.Merge(m, src)
}
func (m *Guide_RecordGuideRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guide_RecordGuideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guide_RecordGuideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guide_RecordGuideRequest proto.InternalMessageInfo

func (m *Guide_RecordGuideRequest) GetGuideId() int64 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

func (m *Guide_RecordGuideRequest) GetStepId() int64 {
	if m != nil {
		return m.StepId
	}
	return 0
}

func (*Guide_RecordGuideRequest) XXX_MessageName() string {
	return "service.Guide.RecordGuideRequest"
}

type Guide_RecordGuideResponse struct {
}

func (m *Guide_RecordGuideResponse) Reset()      { *m = Guide_RecordGuideResponse{} }
func (*Guide_RecordGuideResponse) ProtoMessage() {}
func (*Guide_RecordGuideResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b50e166b5647f8ca, []int{0, 3}
}
func (m *Guide_RecordGuideResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guide_RecordGuideResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guide_RecordGuideResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guide_RecordGuideResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guide_RecordGuideResponse.Merge(m, src)
}
func (m *Guide_RecordGuideResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guide_RecordGuideResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guide_RecordGuideResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guide_RecordGuideResponse proto.InternalMessageInfo

func (*Guide_RecordGuideResponse) XXX_MessageName() string {
	return "service.Guide.RecordGuideResponse"
}
func init() {
	proto.RegisterType((*Guide)(nil), "service.Guide")
	proto.RegisterType((*Guide_GuideInfoRequest)(nil), "service.Guide.GuideInfoRequest")
	proto.RegisterType((*Guide_GuideInfoResponse)(nil), "service.Guide.GuideInfoResponse")
	proto.RegisterType((*Guide_RecordGuideRequest)(nil), "service.Guide.RecordGuideRequest")
	proto.RegisterType((*Guide_RecordGuideResponse)(nil), "service.Guide.RecordGuideResponse")
}

func init() { proto.RegisterFile("proto/service/guide.proto", fileDescriptor_b50e166b5647f8ca) }

var fileDescriptor_b50e166b5647f8ca = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x2f, 0xcd, 0x4c, 0x49, 0xd5,
	0x03, 0x8b, 0x09, 0xb1, 0x43, 0x05, 0xa5, 0xc4, 0x21, 0x6a, 0x72, 0xf3, 0x53, 0x52, 0x73, 0x8a,
	0xf5, 0x93, 0x12, 0x8b, 0xa1, 0x2a, 0xa4, 0x24, 0x50, 0x24, 0x90, 0xf4, 0x2a, 0x6d, 0x61, 0xe4,
	0x62, 0x75, 0x07, 0xf1, 0xa5, 0x84, 0xb8, 0x04, 0xc0, 0x0c, 0xcf, 0xbc, 0xb4, 0xfc, 0xa0, 0xd4,
	0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x29, 0x33, 0x2e, 0x41, 0x24, 0xb1, 0xe2, 0x82, 0xfc, 0xbc, 0xe2,
	0x54, 0x21, 0x45, 0x2e, 0x96, 0xcc, 0xbc, 0xb4, 0x7c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23,
	0x5e, 0x3d, 0x88, 0xa9, 0x7a, 0x60, 0x85, 0x41, 0x60, 0x29, 0x29, 0x0f, 0x2e, 0xa1, 0xa0, 0xd4,
	0xe4, 0xfc, 0xa2, 0x14, 0x88, 0x20, 0xc4, 0x34, 0x21, 0x49, 0x2e, 0x0e, 0xb0, 0xd5, 0xf1, 0x99,
	0x29, 0x60, 0xcd, 0xcc, 0x41, 0xec, 0x60, 0xbe, 0x67, 0x8a, 0x90, 0x38, 0x17, 0x7b, 0x71, 0x49,
	0x6a, 0x01, 0x48, 0x86, 0x09, 0x2c, 0xc3, 0x06, 0xe2, 0x7a, 0xa6, 0x48, 0x89, 0x72, 0x09, 0xa3,
	0x98, 0x04, 0x71, 0x83, 0x93, 0xdf, 0x8d, 0x87, 0x72, 0x0c, 0x2b, 0x1e, 0xc9, 0x31, 0x9e, 0x78,
	0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x2f, 0x1e, 0xc9, 0x31, 0x7c,
	0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x89, 0xc7, 0x72, 0x8c, 0x17, 0x1e, 0xcb, 0x31,
	0xdc, 0x78, 0x2c, 0xc7, 0x10, 0xa5, 0x90, 0x9c, 0x9f, 0x99, 0xa7, 0x0b, 0x0a, 0xa5, 0xd4, 0x22,
	0xfd, 0xe4, 0xfc, 0xdc, 0xdc, 0xfc, 0x3c, 0x7d, 0x94, 0xe0, 0x4c, 0x62, 0x03, 0x73, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x97, 0x35, 0x53, 0xfc, 0x66, 0x01, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuide.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuide_GuideInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuide_GuideInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuide_RecordGuideRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuide_RecordGuideResponse.Get().(proto.Message)
	})
}

var poolGuide = &sync.Pool{New: func() interface{} { return &Guide{} }}

func (m *Guide) ReleasePool() { m.Reset(); poolGuide.Put(m); m = nil }

var poolGuide_GuideInfoRequest = &sync.Pool{New: func() interface{} { return &Guide_GuideInfoRequest{} }}

func (m *Guide_GuideInfoRequest) ReleasePool() { m.Reset(); poolGuide_GuideInfoRequest.Put(m); m = nil }

var poolGuide_GuideInfoResponse = &sync.Pool{New: func() interface{} { return &Guide_GuideInfoResponse{} }}

func (m *Guide_GuideInfoResponse) ReleasePool() {
	m.Reset()
	poolGuide_GuideInfoResponse.Put(m)
	m = nil
}

var poolGuide_RecordGuideRequest = &sync.Pool{New: func() interface{} { return &Guide_RecordGuideRequest{} }}

func (m *Guide_RecordGuideRequest) ReleasePool() {
	m.Reset()
	poolGuide_RecordGuideRequest.Put(m)
	m = nil
}

var poolGuide_RecordGuideResponse = &sync.Pool{New: func() interface{} { return &Guide_RecordGuideResponse{} }}

func (m *Guide_RecordGuideResponse) ReleasePool() {
	m.Reset()
	poolGuide_RecordGuideResponse.Put(m)
	m = nil
}
func (this *Guide) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guide)
	if !ok {
		that2, ok := that.(Guide)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guide_GuideInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guide_GuideInfoRequest)
	if !ok {
		that2, ok := that.(Guide_GuideInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guide_GuideInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guide_GuideInfoResponse)
	if !ok {
		that2, ok := that.(Guide_GuideInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *Guide_RecordGuideRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guide_RecordGuideRequest)
	if !ok {
		that2, ok := that.(Guide_RecordGuideRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GuideId != that1.GuideId {
		return false
	}
	if this.StepId != that1.StepId {
		return false
	}
	return true
}
func (this *Guide_RecordGuideResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guide_RecordGuideResponse)
	if !ok {
		that2, ok := that.(Guide_RecordGuideResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Guide) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guide) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guide) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guide_GuideInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guide_GuideInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guide_GuideInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guide_GuideInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guide_GuideInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guide_GuideInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuide(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guide_RecordGuideRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guide_RecordGuideRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guide_RecordGuideRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StepId != 0 {
		i = encodeVarintGuide(dAtA, i, uint64(m.StepId))
		i--
		dAtA[i] = 0x10
	}
	if m.GuideId != 0 {
		i = encodeVarintGuide(dAtA, i, uint64(m.GuideId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guide_RecordGuideResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guide_RecordGuideResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guide_RecordGuideResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintGuide(dAtA []byte, offset int, v uint64) int {
	offset -= sovGuide(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Guide) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guide_GuideInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guide_GuideInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guide_RecordGuideRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.GuideId != 0 {
		w.RawByte('"')
		w.RawString("guide_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.GuideId))
		needWriteComma = true
	}
	if m.StepId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("step_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.StepId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guide_RecordGuideResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guide) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guide) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guide) GoString() string {
	return m.String()
}

func (m *Guide_GuideInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guide_GuideInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guide_GuideInfoRequest) GoString() string {
	return m.String()
}

func (m *Guide_GuideInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guide_GuideInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guide_GuideInfoResponse) GoString() string {
	return m.String()
}

func (m *Guide_RecordGuideRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guide_RecordGuideRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guide_RecordGuideRequest) GoString() string {
	return m.String()
}

func (m *Guide_RecordGuideResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guide_RecordGuideResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guide_RecordGuideResponse) GoString() string {
	return m.String()
}

func (m *Guide) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guide_GuideInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guide_GuideInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuide(uint64(l))
	}
	return n
}

func (m *Guide_RecordGuideRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GuideId != 0 {
		n += 1 + sovGuide(uint64(m.GuideId))
	}
	if m.StepId != 0 {
		n += 1 + sovGuide(uint64(m.StepId))
	}
	return n
}

func (m *Guide_RecordGuideResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovGuide(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGuide(x uint64) (n int) {
	return sovGuide(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Guide) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuide
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Guide: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Guide: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuide(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuide
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guide_GuideInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuide
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuideInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuideInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuide(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuide
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guide_GuideInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuide
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuideInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuideInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuide
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuide
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuide
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guide{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuide(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuide
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guide_RecordGuideRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuide
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecordGuideRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecordGuideRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuideId", wireType)
			}
			m.GuideId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuide
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuideId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StepId", wireType)
			}
			m.StepId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuide
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StepId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuide(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuide
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guide_RecordGuideResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuide
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecordGuideResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecordGuideResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuide(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuide
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGuide(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGuide
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuide
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuide
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGuide
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGuide
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGuide
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGuide        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGuide          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGuide = fmt.Errorf("proto: unexpected end of group")
)
