// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/activity.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ActivityErrorCode int32

const (
	ActivityErrorCode_ErrEventHasEnd                   ActivityErrorCode = 0
	ActivityErrorCode_ErrEventDoNotCollectAgain        ActivityErrorCode = 1
	ActivityErrorCode_ErrActivityGiftNotExist          ActivityErrorCode = 2
	ActivityErrorCode_ErrActivityGiftEmpty             ActivityErrorCode = 3
	ActivityErrorCode_ErrActivityNotReadyForCollection ActivityErrorCode = 4
	ActivityErrorCode_ErrActivityNeedPaid              ActivityErrorCode = 5
	ActivityErrorCode_ErrActivityDrawNotExist          ActivityErrorCode = 6
	ActivityErrorCode_ErrPassesNotUnlock               ActivityErrorCode = 7
	ActivityErrorCode_ErrNeedRecharge                  ActivityErrorCode = 8
	ActivityErrorCode_ErrActivityNotExist              ActivityErrorCode = 9
	ActivityErrorCode_ErrActivityPreGiftNotBuy         ActivityErrorCode = 10
	ActivityErrorCode_ErrActivityNotReadyForBuy        ActivityErrorCode = 11
)

var ActivityErrorCode_name = map[int32]string{
	0:  "ErrEventHasEnd",
	1:  "ErrEventDoNotCollectAgain",
	2:  "ErrActivityGiftNotExist",
	3:  "ErrActivityGiftEmpty",
	4:  "ErrActivityNotReadyForCollection",
	5:  "ErrActivityNeedPaid",
	6:  "ErrActivityDrawNotExist",
	7:  "ErrPassesNotUnlock",
	8:  "ErrNeedRecharge",
	9:  "ErrActivityNotExist",
	10: "ErrActivityPreGiftNotBuy",
	11: "ErrActivityNotReadyForBuy",
}

var ActivityErrorCode_value = map[string]int32{
	"ErrEventHasEnd":                   0,
	"ErrEventDoNotCollectAgain":        1,
	"ErrActivityGiftNotExist":          2,
	"ErrActivityGiftEmpty":             3,
	"ErrActivityNotReadyForCollection": 4,
	"ErrActivityNeedPaid":              5,
	"ErrActivityDrawNotExist":          6,
	"ErrPassesNotUnlock":               7,
	"ErrNeedRecharge":                  8,
	"ErrActivityNotExist":              9,
	"ErrActivityPreGiftNotBuy":         10,
	"ErrActivityNotReadyForBuy":        11,
}

func (ActivityErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0}
}

type Activity struct {
}

func (m *Activity) Reset()      { *m = Activity{} }
func (*Activity) ProtoMessage() {}
func (*Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0}
}
func (m *Activity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity.Merge(m, src)
}
func (m *Activity) XXX_Size() int {
	return m.Size()
}
func (m *Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_Activity proto.InternalMessageInfo

func (*Activity) XXX_MessageName() string {
	return "service.Activity"
}

// 获取活动列表
type Activity_ActivityListRequest struct {
}

func (m *Activity_ActivityListRequest) Reset()      { *m = Activity_ActivityListRequest{} }
func (*Activity_ActivityListRequest) ProtoMessage() {}
func (*Activity_ActivityListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 0}
}
func (m *Activity_ActivityListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityListRequest.Merge(m, src)
}
func (m *Activity_ActivityListRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityListRequest proto.InternalMessageInfo

func (*Activity_ActivityListRequest) XXX_MessageName() string {
	return "service.Activity.ActivityListRequest"
}

type Activity_ActivityListResponse struct {
	List []*models.Activity `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (m *Activity_ActivityListResponse) Reset()      { *m = Activity_ActivityListResponse{} }
func (*Activity_ActivityListResponse) ProtoMessage() {}
func (*Activity_ActivityListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 1}
}
func (m *Activity_ActivityListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityListResponse.Merge(m, src)
}
func (m *Activity_ActivityListResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityListResponse proto.InternalMessageInfo

func (m *Activity_ActivityListResponse) GetList() []*models.Activity {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Activity_ActivityListResponse) XXX_MessageName() string {
	return "service.Activity.ActivityListResponse"
}

// 获取首充3日领奖信息
type Activity_ActivityThreeDayInfoRequest struct {
}

func (m *Activity_ActivityThreeDayInfoRequest) Reset()      { *m = Activity_ActivityThreeDayInfoRequest{} }
func (*Activity_ActivityThreeDayInfoRequest) ProtoMessage() {}
func (*Activity_ActivityThreeDayInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 2}
}
func (m *Activity_ActivityThreeDayInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityThreeDayInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityThreeDayInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityThreeDayInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityThreeDayInfoRequest.Merge(m, src)
}
func (m *Activity_ActivityThreeDayInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityThreeDayInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityThreeDayInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityThreeDayInfoRequest proto.InternalMessageInfo

func (*Activity_ActivityThreeDayInfoRequest) XXX_MessageName() string {
	return "service.Activity.ActivityThreeDayInfoRequest"
}

type Activity_ActivityThreeDayInfoResponse struct {
	LoginDay int64                 `protobuf:"varint,1,opt,name=login_day,json=loginDay,proto3" json:"login_day,omitempty"`
	Receive  map[int64]int64       `protobuf:"bytes,2,rep,name=receive,proto3" json:"receive,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg      []*models.FirstPayCfg `protobuf:"bytes,3,rep,name=cfg,proto3" json:"cfg,omitempty"`
	Recharge bool                  `protobuf:"varint,4,opt,name=recharge,proto3" json:"recharge,omitempty"`
}

func (m *Activity_ActivityThreeDayInfoResponse) Reset()      { *m = Activity_ActivityThreeDayInfoResponse{} }
func (*Activity_ActivityThreeDayInfoResponse) ProtoMessage() {}
func (*Activity_ActivityThreeDayInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 3}
}
func (m *Activity_ActivityThreeDayInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityThreeDayInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityThreeDayInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityThreeDayInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityThreeDayInfoResponse.Merge(m, src)
}
func (m *Activity_ActivityThreeDayInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityThreeDayInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityThreeDayInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityThreeDayInfoResponse proto.InternalMessageInfo

func (m *Activity_ActivityThreeDayInfoResponse) GetLoginDay() int64 {
	if m != nil {
		return m.LoginDay
	}
	return 0
}

func (m *Activity_ActivityThreeDayInfoResponse) GetReceive() map[int64]int64 {
	if m != nil {
		return m.Receive
	}
	return nil
}

func (m *Activity_ActivityThreeDayInfoResponse) GetCfg() []*models.FirstPayCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *Activity_ActivityThreeDayInfoResponse) GetRecharge() bool {
	if m != nil {
		return m.Recharge
	}
	return false
}

func (*Activity_ActivityThreeDayInfoResponse) XXX_MessageName() string {
	return "service.Activity.ActivityThreeDayInfoResponse"
}

// 领取首充3日奖励
type Activity_ActivityThreeDayGetRewardRequest struct {
	Day int64 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (m *Activity_ActivityThreeDayGetRewardRequest) Reset() {
	*m = Activity_ActivityThreeDayGetRewardRequest{}
}
func (*Activity_ActivityThreeDayGetRewardRequest) ProtoMessage() {}
func (*Activity_ActivityThreeDayGetRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 4}
}
func (m *Activity_ActivityThreeDayGetRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityThreeDayGetRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityThreeDayGetRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityThreeDayGetRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityThreeDayGetRewardRequest.Merge(m, src)
}
func (m *Activity_ActivityThreeDayGetRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityThreeDayGetRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityThreeDayGetRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityThreeDayGetRewardRequest proto.InternalMessageInfo

func (m *Activity_ActivityThreeDayGetRewardRequest) GetDay() int64 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (*Activity_ActivityThreeDayGetRewardRequest) XXX_MessageName() string {
	return "service.Activity.ActivityThreeDayGetRewardRequest"
}

type Activity_ActivityThreeDayGetRewardResponse struct {
	Reward map[int64]int64 `protobuf:"bytes,1,rep,name=reward,proto3" json:"reward,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Activity_ActivityThreeDayGetRewardResponse) Reset() {
	*m = Activity_ActivityThreeDayGetRewardResponse{}
}
func (*Activity_ActivityThreeDayGetRewardResponse) ProtoMessage() {}
func (*Activity_ActivityThreeDayGetRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 5}
}
func (m *Activity_ActivityThreeDayGetRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityThreeDayGetRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityThreeDayGetRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityThreeDayGetRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityThreeDayGetRewardResponse.Merge(m, src)
}
func (m *Activity_ActivityThreeDayGetRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityThreeDayGetRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityThreeDayGetRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityThreeDayGetRewardResponse proto.InternalMessageInfo

func (m *Activity_ActivityThreeDayGetRewardResponse) GetReward() map[int64]int64 {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (*Activity_ActivityThreeDayGetRewardResponse) XXX_MessageName() string {
	return "service.Activity.ActivityThreeDayGetRewardResponse"
}

// 每日礼包列表
type Activity_DailySaleInfoRequest struct {
}

func (m *Activity_DailySaleInfoRequest) Reset()      { *m = Activity_DailySaleInfoRequest{} }
func (*Activity_DailySaleInfoRequest) ProtoMessage() {}
func (*Activity_DailySaleInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 6}
}
func (m *Activity_DailySaleInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DailySaleInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DailySaleInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DailySaleInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DailySaleInfoRequest.Merge(m, src)
}
func (m *Activity_DailySaleInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DailySaleInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DailySaleInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DailySaleInfoRequest proto.InternalMessageInfo

func (*Activity_DailySaleInfoRequest) XXX_MessageName() string {
	return "service.Activity.DailySaleInfoRequest"
}

type Activity_DailySaleInfoResponse struct {
	BuyTimes map[int64]int64        `protobuf:"bytes,1,rep,name=buy_times,json=buyTimes,proto3" json:"buy_times,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg      []*models.DailySaleCfg `protobuf:"bytes,2,rep,name=cfg,proto3" json:"cfg,omitempty"`
}

func (m *Activity_DailySaleInfoResponse) Reset()      { *m = Activity_DailySaleInfoResponse{} }
func (*Activity_DailySaleInfoResponse) ProtoMessage() {}
func (*Activity_DailySaleInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 7}
}
func (m *Activity_DailySaleInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DailySaleInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DailySaleInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DailySaleInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DailySaleInfoResponse.Merge(m, src)
}
func (m *Activity_DailySaleInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DailySaleInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DailySaleInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DailySaleInfoResponse proto.InternalMessageInfo

func (m *Activity_DailySaleInfoResponse) GetBuyTimes() map[int64]int64 {
	if m != nil {
		return m.BuyTimes
	}
	return nil
}

func (m *Activity_DailySaleInfoResponse) GetCfg() []*models.DailySaleCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (*Activity_DailySaleInfoResponse) XXX_MessageName() string {
	return "service.Activity.DailySaleInfoResponse"
}

// 每日礼包购买
type Activity_DailySaleBuyRequest struct {
	Idx int64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (m *Activity_DailySaleBuyRequest) Reset()      { *m = Activity_DailySaleBuyRequest{} }
func (*Activity_DailySaleBuyRequest) ProtoMessage() {}
func (*Activity_DailySaleBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 8}
}
func (m *Activity_DailySaleBuyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DailySaleBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DailySaleBuyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DailySaleBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DailySaleBuyRequest.Merge(m, src)
}
func (m *Activity_DailySaleBuyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DailySaleBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DailySaleBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DailySaleBuyRequest proto.InternalMessageInfo

func (m *Activity_DailySaleBuyRequest) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (*Activity_DailySaleBuyRequest) XXX_MessageName() string {
	return "service.Activity.DailySaleBuyRequest"
}

type Activity_DailySaleBuyResponse struct {
}

func (m *Activity_DailySaleBuyResponse) Reset()      { *m = Activity_DailySaleBuyResponse{} }
func (*Activity_DailySaleBuyResponse) ProtoMessage() {}
func (*Activity_DailySaleBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 9}
}
func (m *Activity_DailySaleBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DailySaleBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DailySaleBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DailySaleBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DailySaleBuyResponse.Merge(m, src)
}
func (m *Activity_DailySaleBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DailySaleBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DailySaleBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DailySaleBuyResponse proto.InternalMessageInfo

func (*Activity_DailySaleBuyResponse) XXX_MessageName() string {
	return "service.Activity.DailySaleBuyResponse"
}

// 获取限时弹窗礼包列表
type Activity_GetLimitTimePackagesRequest struct {
}

func (m *Activity_GetLimitTimePackagesRequest) Reset()      { *m = Activity_GetLimitTimePackagesRequest{} }
func (*Activity_GetLimitTimePackagesRequest) ProtoMessage() {}
func (*Activity_GetLimitTimePackagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 10}
}
func (m *Activity_GetLimitTimePackagesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_GetLimitTimePackagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_GetLimitTimePackagesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_GetLimitTimePackagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_GetLimitTimePackagesRequest.Merge(m, src)
}
func (m *Activity_GetLimitTimePackagesRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_GetLimitTimePackagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_GetLimitTimePackagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_GetLimitTimePackagesRequest proto.InternalMessageInfo

func (*Activity_GetLimitTimePackagesRequest) XXX_MessageName() string {
	return "service.Activity.GetLimitTimePackagesRequest"
}

type Activity_GetLimitTimePackagesResponse struct {
	Packages map[int64]*models.LimitedTimePackage `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Activity_GetLimitTimePackagesResponse) Reset()      { *m = Activity_GetLimitTimePackagesResponse{} }
func (*Activity_GetLimitTimePackagesResponse) ProtoMessage() {}
func (*Activity_GetLimitTimePackagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 11}
}
func (m *Activity_GetLimitTimePackagesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_GetLimitTimePackagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_GetLimitTimePackagesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_GetLimitTimePackagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_GetLimitTimePackagesResponse.Merge(m, src)
}
func (m *Activity_GetLimitTimePackagesResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_GetLimitTimePackagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_GetLimitTimePackagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_GetLimitTimePackagesResponse proto.InternalMessageInfo

func (m *Activity_GetLimitTimePackagesResponse) GetPackages() map[int64]*models.LimitedTimePackage {
	if m != nil {
		return m.Packages
	}
	return nil
}

func (*Activity_GetLimitTimePackagesResponse) XXX_MessageName() string {
	return "service.Activity.GetLimitTimePackagesResponse"
}

type Activity_LevelGrowthFundDataRequest struct {
}

func (m *Activity_LevelGrowthFundDataRequest) Reset()      { *m = Activity_LevelGrowthFundDataRequest{} }
func (*Activity_LevelGrowthFundDataRequest) ProtoMessage() {}
func (*Activity_LevelGrowthFundDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 12}
}
func (m *Activity_LevelGrowthFundDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_LevelGrowthFundDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_LevelGrowthFundDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_LevelGrowthFundDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_LevelGrowthFundDataRequest.Merge(m, src)
}
func (m *Activity_LevelGrowthFundDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_LevelGrowthFundDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_LevelGrowthFundDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_LevelGrowthFundDataRequest proto.InternalMessageInfo

func (*Activity_LevelGrowthFundDataRequest) XXX_MessageName() string {
	return "service.Activity.LevelGrowthFundDataRequest"
}

type Activity_LevelGrowthFundDataResponse struct {
	Buy  bool                                  `protobuf:"varint,1,opt,name=buy,proto3" json:"buy,omitempty"`
	Info map[int64]*models.LevelGrowthFundItem `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cfg  []*models.LevelGrowthFundCfg          `protobuf:"bytes,3,rep,name=cfg,proto3" json:"cfg,omitempty"`
}

func (m *Activity_LevelGrowthFundDataResponse) Reset()      { *m = Activity_LevelGrowthFundDataResponse{} }
func (*Activity_LevelGrowthFundDataResponse) ProtoMessage() {}
func (*Activity_LevelGrowthFundDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 13}
}
func (m *Activity_LevelGrowthFundDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_LevelGrowthFundDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_LevelGrowthFundDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_LevelGrowthFundDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_LevelGrowthFundDataResponse.Merge(m, src)
}
func (m *Activity_LevelGrowthFundDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_LevelGrowthFundDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_LevelGrowthFundDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_LevelGrowthFundDataResponse proto.InternalMessageInfo

func (m *Activity_LevelGrowthFundDataResponse) GetBuy() bool {
	if m != nil {
		return m.Buy
	}
	return false
}

func (m *Activity_LevelGrowthFundDataResponse) GetInfo() map[int64]*models.LevelGrowthFundItem {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Activity_LevelGrowthFundDataResponse) GetCfg() []*models.LevelGrowthFundCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (*Activity_LevelGrowthFundDataResponse) XXX_MessageName() string {
	return "service.Activity.LevelGrowthFundDataResponse"
}

type Activity_LevelGrowthFundGetRewardRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Activity_LevelGrowthFundGetRewardRequest) Reset() {
	*m = Activity_LevelGrowthFundGetRewardRequest{}
}
func (*Activity_LevelGrowthFundGetRewardRequest) ProtoMessage() {}
func (*Activity_LevelGrowthFundGetRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 14}
}
func (m *Activity_LevelGrowthFundGetRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_LevelGrowthFundGetRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_LevelGrowthFundGetRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_LevelGrowthFundGetRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_LevelGrowthFundGetRewardRequest.Merge(m, src)
}
func (m *Activity_LevelGrowthFundGetRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_LevelGrowthFundGetRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_LevelGrowthFundGetRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_LevelGrowthFundGetRewardRequest proto.InternalMessageInfo

func (m *Activity_LevelGrowthFundGetRewardRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*Activity_LevelGrowthFundGetRewardRequest) XXX_MessageName() string {
	return "service.Activity.LevelGrowthFundGetRewardRequest"
}

type Activity_LevelGrowthFundGetRewardResponse struct {
	Info map[int64]*models.LevelGrowthFundItem `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Activity_LevelGrowthFundGetRewardResponse) Reset() {
	*m = Activity_LevelGrowthFundGetRewardResponse{}
}
func (*Activity_LevelGrowthFundGetRewardResponse) ProtoMessage() {}
func (*Activity_LevelGrowthFundGetRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 15}
}
func (m *Activity_LevelGrowthFundGetRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_LevelGrowthFundGetRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_LevelGrowthFundGetRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_LevelGrowthFundGetRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_LevelGrowthFundGetRewardResponse.Merge(m, src)
}
func (m *Activity_LevelGrowthFundGetRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_LevelGrowthFundGetRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_LevelGrowthFundGetRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_LevelGrowthFundGetRewardResponse proto.InternalMessageInfo

func (m *Activity_LevelGrowthFundGetRewardResponse) GetInfo() map[int64]*models.LevelGrowthFundItem {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*Activity_LevelGrowthFundGetRewardResponse) XXX_MessageName() string {
	return "service.Activity.LevelGrowthFundGetRewardResponse"
}

// 累计充值数据
type Activity_AccRechargeDataRequest struct {
}

func (m *Activity_AccRechargeDataRequest) Reset()      { *m = Activity_AccRechargeDataRequest{} }
func (*Activity_AccRechargeDataRequest) ProtoMessage() {}
func (*Activity_AccRechargeDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 16}
}
func (m *Activity_AccRechargeDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_AccRechargeDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_AccRechargeDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_AccRechargeDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_AccRechargeDataRequest.Merge(m, src)
}
func (m *Activity_AccRechargeDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_AccRechargeDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_AccRechargeDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_AccRechargeDataRequest proto.InternalMessageInfo

func (*Activity_AccRechargeDataRequest) XXX_MessageName() string {
	return "service.Activity.AccRechargeDataRequest"
}

type Activity_AccRechargeDataResponse struct {
	TotalRecharge int64                    `protobuf:"varint,1,opt,name=total_recharge,json=totalRecharge,proto3" json:"total_recharge,omitempty"`
	DrawList      map[int64]bool           `protobuf:"bytes,2,rep,name=draw_list,json=drawList,proto3" json:"draw_list,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg           []*models.AccRechargeCfg `protobuf:"bytes,3,rep,name=cfg,proto3" json:"cfg,omitempty"`
}

func (m *Activity_AccRechargeDataResponse) Reset()      { *m = Activity_AccRechargeDataResponse{} }
func (*Activity_AccRechargeDataResponse) ProtoMessage() {}
func (*Activity_AccRechargeDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 17}
}
func (m *Activity_AccRechargeDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_AccRechargeDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_AccRechargeDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_AccRechargeDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_AccRechargeDataResponse.Merge(m, src)
}
func (m *Activity_AccRechargeDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_AccRechargeDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_AccRechargeDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_AccRechargeDataResponse proto.InternalMessageInfo

func (m *Activity_AccRechargeDataResponse) GetTotalRecharge() int64 {
	if m != nil {
		return m.TotalRecharge
	}
	return 0
}

func (m *Activity_AccRechargeDataResponse) GetDrawList() map[int64]bool {
	if m != nil {
		return m.DrawList
	}
	return nil
}

func (m *Activity_AccRechargeDataResponse) GetCfg() []*models.AccRechargeCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (*Activity_AccRechargeDataResponse) XXX_MessageName() string {
	return "service.Activity.AccRechargeDataResponse"
}

// 累计充值领取
type Activity_AccRechargeDrawRequest struct {
	Idx int64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (m *Activity_AccRechargeDrawRequest) Reset()      { *m = Activity_AccRechargeDrawRequest{} }
func (*Activity_AccRechargeDrawRequest) ProtoMessage() {}
func (*Activity_AccRechargeDrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 18}
}
func (m *Activity_AccRechargeDrawRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_AccRechargeDrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_AccRechargeDrawRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_AccRechargeDrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_AccRechargeDrawRequest.Merge(m, src)
}
func (m *Activity_AccRechargeDrawRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_AccRechargeDrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_AccRechargeDrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_AccRechargeDrawRequest proto.InternalMessageInfo

func (m *Activity_AccRechargeDrawRequest) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (*Activity_AccRechargeDrawRequest) XXX_MessageName() string {
	return "service.Activity.AccRechargeDrawRequest"
}

type Activity_AccRechargeDrawResponse struct {
}

func (m *Activity_AccRechargeDrawResponse) Reset()      { *m = Activity_AccRechargeDrawResponse{} }
func (*Activity_AccRechargeDrawResponse) ProtoMessage() {}
func (*Activity_AccRechargeDrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 19}
}
func (m *Activity_AccRechargeDrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_AccRechargeDrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_AccRechargeDrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_AccRechargeDrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_AccRechargeDrawResponse.Merge(m, src)
}
func (m *Activity_AccRechargeDrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_AccRechargeDrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_AccRechargeDrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_AccRechargeDrawResponse proto.InternalMessageInfo

func (*Activity_AccRechargeDrawResponse) XXX_MessageName() string {
	return "service.Activity.AccRechargeDrawResponse"
}

// 星钻商会数据
type Activity_StellargemShopDataRequest struct {
}

func (m *Activity_StellargemShopDataRequest) Reset()      { *m = Activity_StellargemShopDataRequest{} }
func (*Activity_StellargemShopDataRequest) ProtoMessage() {}
func (*Activity_StellargemShopDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 20}
}
func (m *Activity_StellargemShopDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_StellargemShopDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_StellargemShopDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_StellargemShopDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_StellargemShopDataRequest.Merge(m, src)
}
func (m *Activity_StellargemShopDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_StellargemShopDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_StellargemShopDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_StellargemShopDataRequest proto.InternalMessageInfo

func (*Activity_StellargemShopDataRequest) XXX_MessageName() string {
	return "service.Activity.StellargemShopDataRequest"
}

type Activity_StellargemShopDataResponse struct {
	IsDoubleOpen bool                        `protobuf:"varint,1,opt,name=is_double_open,json=isDoubleOpen,proto3" json:"is_double_open,omitempty"`
	BuyCnt       map[int64]int64             `protobuf:"bytes,2,rep,name=buy_cnt,json=buyCnt,proto3" json:"buy_cnt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg          []*models.StellargemShopCfg `protobuf:"bytes,3,rep,name=cfg,proto3" json:"cfg,omitempty"`
}

func (m *Activity_StellargemShopDataResponse) Reset()      { *m = Activity_StellargemShopDataResponse{} }
func (*Activity_StellargemShopDataResponse) ProtoMessage() {}
func (*Activity_StellargemShopDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 21}
}
func (m *Activity_StellargemShopDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_StellargemShopDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_StellargemShopDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_StellargemShopDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_StellargemShopDataResponse.Merge(m, src)
}
func (m *Activity_StellargemShopDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_StellargemShopDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_StellargemShopDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_StellargemShopDataResponse proto.InternalMessageInfo

func (m *Activity_StellargemShopDataResponse) GetIsDoubleOpen() bool {
	if m != nil {
		return m.IsDoubleOpen
	}
	return false
}

func (m *Activity_StellargemShopDataResponse) GetBuyCnt() map[int64]int64 {
	if m != nil {
		return m.BuyCnt
	}
	return nil
}

func (m *Activity_StellargemShopDataResponse) GetCfg() []*models.StellargemShopCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (*Activity_StellargemShopDataResponse) XXX_MessageName() string {
	return "service.Activity.StellargemShopDataResponse"
}

// 星钻商会购买
type Activity_StellargemShopBuyRequest struct {
	Idx int64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (m *Activity_StellargemShopBuyRequest) Reset()      { *m = Activity_StellargemShopBuyRequest{} }
func (*Activity_StellargemShopBuyRequest) ProtoMessage() {}
func (*Activity_StellargemShopBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 22}
}
func (m *Activity_StellargemShopBuyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_StellargemShopBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_StellargemShopBuyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_StellargemShopBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_StellargemShopBuyRequest.Merge(m, src)
}
func (m *Activity_StellargemShopBuyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_StellargemShopBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_StellargemShopBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_StellargemShopBuyRequest proto.InternalMessageInfo

func (m *Activity_StellargemShopBuyRequest) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (*Activity_StellargemShopBuyRequest) XXX_MessageName() string {
	return "service.Activity.StellargemShopBuyRequest"
}

type Activity_StellargemShopBuyResponse struct {
}

func (m *Activity_StellargemShopBuyResponse) Reset()      { *m = Activity_StellargemShopBuyResponse{} }
func (*Activity_StellargemShopBuyResponse) ProtoMessage() {}
func (*Activity_StellargemShopBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 23}
}
func (m *Activity_StellargemShopBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_StellargemShopBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_StellargemShopBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_StellargemShopBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_StellargemShopBuyResponse.Merge(m, src)
}
func (m *Activity_StellargemShopBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_StellargemShopBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_StellargemShopBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_StellargemShopBuyResponse proto.InternalMessageInfo

func (*Activity_StellargemShopBuyResponse) XXX_MessageName() string {
	return "service.Activity.StellargemShopBuyResponse"
}

// 每周礼包列表
type Activity_WeeklySaleInfoRequest struct {
}

func (m *Activity_WeeklySaleInfoRequest) Reset()      { *m = Activity_WeeklySaleInfoRequest{} }
func (*Activity_WeeklySaleInfoRequest) ProtoMessage() {}
func (*Activity_WeeklySaleInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 24}
}
func (m *Activity_WeeklySaleInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_WeeklySaleInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_WeeklySaleInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_WeeklySaleInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_WeeklySaleInfoRequest.Merge(m, src)
}
func (m *Activity_WeeklySaleInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_WeeklySaleInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_WeeklySaleInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_WeeklySaleInfoRequest proto.InternalMessageInfo

func (*Activity_WeeklySaleInfoRequest) XXX_MessageName() string {
	return "service.Activity.WeeklySaleInfoRequest"
}

type Activity_WeeklySaleInfoResponse struct {
	BuyTimes     map[int64]int64         `protobuf:"bytes,1,rep,name=buy_times,json=buyTimes,proto3" json:"buy_times,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg          []*models.WeeklySaleCfg `protobuf:"bytes,2,rep,name=cfg,proto3" json:"cfg,omitempty"`
	NxtRefreshAt int64                   `protobuf:"varint,3,opt,name=nxt_refresh_at,json=nxtRefreshAt,proto3" json:"nxt_refresh_at,omitempty"`
}

func (m *Activity_WeeklySaleInfoResponse) Reset()      { *m = Activity_WeeklySaleInfoResponse{} }
func (*Activity_WeeklySaleInfoResponse) ProtoMessage() {}
func (*Activity_WeeklySaleInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 25}
}
func (m *Activity_WeeklySaleInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_WeeklySaleInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_WeeklySaleInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_WeeklySaleInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_WeeklySaleInfoResponse.Merge(m, src)
}
func (m *Activity_WeeklySaleInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_WeeklySaleInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_WeeklySaleInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_WeeklySaleInfoResponse proto.InternalMessageInfo

func (m *Activity_WeeklySaleInfoResponse) GetBuyTimes() map[int64]int64 {
	if m != nil {
		return m.BuyTimes
	}
	return nil
}

func (m *Activity_WeeklySaleInfoResponse) GetCfg() []*models.WeeklySaleCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *Activity_WeeklySaleInfoResponse) GetNxtRefreshAt() int64 {
	if m != nil {
		return m.NxtRefreshAt
	}
	return 0
}

func (*Activity_WeeklySaleInfoResponse) XXX_MessageName() string {
	return "service.Activity.WeeklySaleInfoResponse"
}

// 每周礼包购买
type Activity_WeeklySaleBuyRequest struct {
	Idx int64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (m *Activity_WeeklySaleBuyRequest) Reset()      { *m = Activity_WeeklySaleBuyRequest{} }
func (*Activity_WeeklySaleBuyRequest) ProtoMessage() {}
func (*Activity_WeeklySaleBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 26}
}
func (m *Activity_WeeklySaleBuyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_WeeklySaleBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_WeeklySaleBuyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_WeeklySaleBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_WeeklySaleBuyRequest.Merge(m, src)
}
func (m *Activity_WeeklySaleBuyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_WeeklySaleBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_WeeklySaleBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_WeeklySaleBuyRequest proto.InternalMessageInfo

func (m *Activity_WeeklySaleBuyRequest) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (*Activity_WeeklySaleBuyRequest) XXX_MessageName() string {
	return "service.Activity.WeeklySaleBuyRequest"
}

type Activity_WeeklySaleBuyResponse struct {
}

func (m *Activity_WeeklySaleBuyResponse) Reset()      { *m = Activity_WeeklySaleBuyResponse{} }
func (*Activity_WeeklySaleBuyResponse) ProtoMessage() {}
func (*Activity_WeeklySaleBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 27}
}
func (m *Activity_WeeklySaleBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_WeeklySaleBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_WeeklySaleBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_WeeklySaleBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_WeeklySaleBuyResponse.Merge(m, src)
}
func (m *Activity_WeeklySaleBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_WeeklySaleBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_WeeklySaleBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_WeeklySaleBuyResponse proto.InternalMessageInfo

func (*Activity_WeeklySaleBuyResponse) XXX_MessageName() string {
	return "service.Activity.WeeklySaleBuyResponse"
}

// 获取通行证列表
type Activity_PassesInfoRequest struct {
}

func (m *Activity_PassesInfoRequest) Reset()      { *m = Activity_PassesInfoRequest{} }
func (*Activity_PassesInfoRequest) ProtoMessage() {}
func (*Activity_PassesInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 28}
}
func (m *Activity_PassesInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_PassesInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_PassesInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_PassesInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_PassesInfoRequest.Merge(m, src)
}
func (m *Activity_PassesInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_PassesInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_PassesInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_PassesInfoRequest proto.InternalMessageInfo

func (*Activity_PassesInfoRequest) XXX_MessageName() string {
	return "service.Activity.PassesInfoRequest"
}

type Activity_PassesInfoResponse struct {
	Passes *models.Passes `protobuf:"bytes,1,opt,name=passes,proto3" json:"passes,omitempty"`
}

func (m *Activity_PassesInfoResponse) Reset()      { *m = Activity_PassesInfoResponse{} }
func (*Activity_PassesInfoResponse) ProtoMessage() {}
func (*Activity_PassesInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 29}
}
func (m *Activity_PassesInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_PassesInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_PassesInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_PassesInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_PassesInfoResponse.Merge(m, src)
}
func (m *Activity_PassesInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_PassesInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_PassesInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_PassesInfoResponse proto.InternalMessageInfo

func (m *Activity_PassesInfoResponse) GetPasses() *models.Passes {
	if m != nil {
		return m.Passes
	}
	return nil
}

func (*Activity_PassesInfoResponse) XXX_MessageName() string {
	return "service.Activity.PassesInfoResponse"
}

// 解锁通行证
type Activity_UnlockPassesRequest struct {
}

func (m *Activity_UnlockPassesRequest) Reset()      { *m = Activity_UnlockPassesRequest{} }
func (*Activity_UnlockPassesRequest) ProtoMessage() {}
func (*Activity_UnlockPassesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 30}
}
func (m *Activity_UnlockPassesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_UnlockPassesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_UnlockPassesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_UnlockPassesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_UnlockPassesRequest.Merge(m, src)
}
func (m *Activity_UnlockPassesRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_UnlockPassesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_UnlockPassesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_UnlockPassesRequest proto.InternalMessageInfo

func (*Activity_UnlockPassesRequest) XXX_MessageName() string {
	return "service.Activity.UnlockPassesRequest"
}

type Activity_UnlockPassesResponse struct {
	Status models.PassesStatus `protobuf:"varint,1,opt,name=status,proto3,enum=models.PassesStatus" json:"status,omitempty"`
}

func (m *Activity_UnlockPassesResponse) Reset()      { *m = Activity_UnlockPassesResponse{} }
func (*Activity_UnlockPassesResponse) ProtoMessage() {}
func (*Activity_UnlockPassesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 31}
}
func (m *Activity_UnlockPassesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_UnlockPassesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_UnlockPassesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_UnlockPassesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_UnlockPassesResponse.Merge(m, src)
}
func (m *Activity_UnlockPassesResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_UnlockPassesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_UnlockPassesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_UnlockPassesResponse proto.InternalMessageInfo

func (m *Activity_UnlockPassesResponse) GetStatus() models.PassesStatus {
	if m != nil {
		return m.Status
	}
	return models.PassesStatus_PassesStatusLocked
}

func (*Activity_UnlockPassesResponse) XXX_MessageName() string {
	return "service.Activity.UnlockPassesResponse"
}

// 领取通行证奖励
type Activity_DrawPassesRewardRequest struct {
	Lv    int64 `protobuf:"varint,1,opt,name=lv,proto3" json:"lv,omitempty"`
	IsAll bool  `protobuf:"varint,2,opt,name=is_all,json=isAll,proto3" json:"is_all,omitempty"`
}

func (m *Activity_DrawPassesRewardRequest) Reset()      { *m = Activity_DrawPassesRewardRequest{} }
func (*Activity_DrawPassesRewardRequest) ProtoMessage() {}
func (*Activity_DrawPassesRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 32}
}
func (m *Activity_DrawPassesRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DrawPassesRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DrawPassesRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DrawPassesRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DrawPassesRewardRequest.Merge(m, src)
}
func (m *Activity_DrawPassesRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DrawPassesRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DrawPassesRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DrawPassesRewardRequest proto.InternalMessageInfo

func (m *Activity_DrawPassesRewardRequest) GetLv() int64 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func (m *Activity_DrawPassesRewardRequest) GetIsAll() bool {
	if m != nil {
		return m.IsAll
	}
	return false
}

func (*Activity_DrawPassesRewardRequest) XXX_MessageName() string {
	return "service.Activity.DrawPassesRewardRequest"
}

type Activity_DrawPassesRewardResponse struct {
	Rewards map[int64]int64 `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Activity_DrawPassesRewardResponse) Reset()      { *m = Activity_DrawPassesRewardResponse{} }
func (*Activity_DrawPassesRewardResponse) ProtoMessage() {}
func (*Activity_DrawPassesRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 33}
}
func (m *Activity_DrawPassesRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DrawPassesRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DrawPassesRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DrawPassesRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DrawPassesRewardResponse.Merge(m, src)
}
func (m *Activity_DrawPassesRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DrawPassesRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DrawPassesRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DrawPassesRewardResponse proto.InternalMessageInfo

func (m *Activity_DrawPassesRewardResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*Activity_DrawPassesRewardResponse) XXX_MessageName() string {
	return "service.Activity.DrawPassesRewardResponse"
}

// 零元购活动数据
type Activity_ZeroBuyInfoRequest struct {
}

func (m *Activity_ZeroBuyInfoRequest) Reset()      { *m = Activity_ZeroBuyInfoRequest{} }
func (*Activity_ZeroBuyInfoRequest) ProtoMessage() {}
func (*Activity_ZeroBuyInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 34}
}
func (m *Activity_ZeroBuyInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ZeroBuyInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ZeroBuyInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ZeroBuyInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ZeroBuyInfoRequest.Merge(m, src)
}
func (m *Activity_ZeroBuyInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ZeroBuyInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ZeroBuyInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ZeroBuyInfoRequest proto.InternalMessageInfo

func (*Activity_ZeroBuyInfoRequest) XXX_MessageName() string {
	return "service.Activity.ZeroBuyInfoRequest"
}

type Activity_ZeroBuyInfoResponse struct {
	Cfg     []*models.ZeroBuyCfg `protobuf:"bytes,1,rep,name=cfg,proto3" json:"cfg,omitempty"`
	StartAt int64                `protobuf:"varint,2,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt   int64                `protobuf:"varint,3,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	EachDay []*models.ZeroBuy    `protobuf:"bytes,4,rep,name=each_day,json=eachDay,proto3" json:"each_day,omitempty"`
}

func (m *Activity_ZeroBuyInfoResponse) Reset()      { *m = Activity_ZeroBuyInfoResponse{} }
func (*Activity_ZeroBuyInfoResponse) ProtoMessage() {}
func (*Activity_ZeroBuyInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 35}
}
func (m *Activity_ZeroBuyInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ZeroBuyInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ZeroBuyInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ZeroBuyInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ZeroBuyInfoResponse.Merge(m, src)
}
func (m *Activity_ZeroBuyInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ZeroBuyInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ZeroBuyInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ZeroBuyInfoResponse proto.InternalMessageInfo

func (m *Activity_ZeroBuyInfoResponse) GetCfg() []*models.ZeroBuyCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *Activity_ZeroBuyInfoResponse) GetStartAt() int64 {
	if m != nil {
		return m.StartAt
	}
	return 0
}

func (m *Activity_ZeroBuyInfoResponse) GetEndAt() int64 {
	if m != nil {
		return m.EndAt
	}
	return 0
}

func (m *Activity_ZeroBuyInfoResponse) GetEachDay() []*models.ZeroBuy {
	if m != nil {
		return m.EachDay
	}
	return nil
}

func (*Activity_ZeroBuyInfoResponse) XXX_MessageName() string {
	return "service.Activity.ZeroBuyInfoResponse"
}

// 零元购购买
type Activity_DrawZeroBuyRequest struct {
	Day int64 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (m *Activity_DrawZeroBuyRequest) Reset()      { *m = Activity_DrawZeroBuyRequest{} }
func (*Activity_DrawZeroBuyRequest) ProtoMessage() {}
func (*Activity_DrawZeroBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 36}
}
func (m *Activity_DrawZeroBuyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DrawZeroBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DrawZeroBuyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DrawZeroBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DrawZeroBuyRequest.Merge(m, src)
}
func (m *Activity_DrawZeroBuyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DrawZeroBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DrawZeroBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DrawZeroBuyRequest proto.InternalMessageInfo

func (m *Activity_DrawZeroBuyRequest) GetDay() int64 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (*Activity_DrawZeroBuyRequest) XXX_MessageName() string {
	return "service.Activity.DrawZeroBuyRequest"
}

type Activity_DrawZeroBuyResponse struct {
	EachDay []*models.ZeroBuy `protobuf:"bytes,1,rep,name=each_day,json=eachDay,proto3" json:"each_day,omitempty"`
}

func (m *Activity_DrawZeroBuyResponse) Reset()      { *m = Activity_DrawZeroBuyResponse{} }
func (*Activity_DrawZeroBuyResponse) ProtoMessage() {}
func (*Activity_DrawZeroBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 37}
}
func (m *Activity_DrawZeroBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DrawZeroBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DrawZeroBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DrawZeroBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DrawZeroBuyResponse.Merge(m, src)
}
func (m *Activity_DrawZeroBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DrawZeroBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DrawZeroBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DrawZeroBuyResponse proto.InternalMessageInfo

func (m *Activity_DrawZeroBuyResponse) GetEachDay() []*models.ZeroBuy {
	if m != nil {
		return m.EachDay
	}
	return nil
}

func (*Activity_DrawZeroBuyResponse) XXX_MessageName() string {
	return "service.Activity.DrawZeroBuyResponse"
}

// 零元购领取次日奖励
type Activity_ZeroBuyDrawNextDayRequest struct {
	Day int64 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (m *Activity_ZeroBuyDrawNextDayRequest) Reset()      { *m = Activity_ZeroBuyDrawNextDayRequest{} }
func (*Activity_ZeroBuyDrawNextDayRequest) ProtoMessage() {}
func (*Activity_ZeroBuyDrawNextDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 38}
}
func (m *Activity_ZeroBuyDrawNextDayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ZeroBuyDrawNextDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ZeroBuyDrawNextDayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ZeroBuyDrawNextDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ZeroBuyDrawNextDayRequest.Merge(m, src)
}
func (m *Activity_ZeroBuyDrawNextDayRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ZeroBuyDrawNextDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ZeroBuyDrawNextDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ZeroBuyDrawNextDayRequest proto.InternalMessageInfo

func (m *Activity_ZeroBuyDrawNextDayRequest) GetDay() int64 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (*Activity_ZeroBuyDrawNextDayRequest) XXX_MessageName() string {
	return "service.Activity.ZeroBuyDrawNextDayRequest"
}

type Activity_ZeroBuyDrawNextDayResponse struct {
	EachDay []*models.ZeroBuy `protobuf:"bytes,1,rep,name=each_day,json=eachDay,proto3" json:"each_day,omitempty"`
}

func (m *Activity_ZeroBuyDrawNextDayResponse) Reset()      { *m = Activity_ZeroBuyDrawNextDayResponse{} }
func (*Activity_ZeroBuyDrawNextDayResponse) ProtoMessage() {}
func (*Activity_ZeroBuyDrawNextDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 39}
}
func (m *Activity_ZeroBuyDrawNextDayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ZeroBuyDrawNextDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ZeroBuyDrawNextDayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ZeroBuyDrawNextDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ZeroBuyDrawNextDayResponse.Merge(m, src)
}
func (m *Activity_ZeroBuyDrawNextDayResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ZeroBuyDrawNextDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ZeroBuyDrawNextDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ZeroBuyDrawNextDayResponse proto.InternalMessageInfo

func (m *Activity_ZeroBuyDrawNextDayResponse) GetEachDay() []*models.ZeroBuy {
	if m != nil {
		return m.EachDay
	}
	return nil
}

func (*Activity_ZeroBuyDrawNextDayResponse) XXX_MessageName() string {
	return "service.Activity.ZeroBuyDrawNextDayResponse"
}

// 新的活动开启推送
type Activity_ActivityStartedPush struct {
	Activity *models.Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (m *Activity_ActivityStartedPush) Reset()      { *m = Activity_ActivityStartedPush{} }
func (*Activity_ActivityStartedPush) ProtoMessage() {}
func (*Activity_ActivityStartedPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 40}
}
func (m *Activity_ActivityStartedPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityStartedPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityStartedPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityStartedPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityStartedPush.Merge(m, src)
}
func (m *Activity_ActivityStartedPush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityStartedPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityStartedPush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityStartedPush proto.InternalMessageInfo

func (m *Activity_ActivityStartedPush) GetActivity() *models.Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (*Activity_ActivityStartedPush) XXX_MessageName() string {
	return "service.Activity.ActivityStartedPush"
}

// 活动结束推送
type Activity_ActivityEndedPush struct {
	Activity *models.Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (m *Activity_ActivityEndedPush) Reset()      { *m = Activity_ActivityEndedPush{} }
func (*Activity_ActivityEndedPush) ProtoMessage() {}
func (*Activity_ActivityEndedPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 41}
}
func (m *Activity_ActivityEndedPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ActivityEndedPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ActivityEndedPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ActivityEndedPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ActivityEndedPush.Merge(m, src)
}
func (m *Activity_ActivityEndedPush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ActivityEndedPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ActivityEndedPush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ActivityEndedPush proto.InternalMessageInfo

func (m *Activity_ActivityEndedPush) GetActivity() *models.Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (*Activity_ActivityEndedPush) XXX_MessageName() string {
	return "service.Activity.ActivityEndedPush"
}

// 限时弹窗礼包推送
type Activity_LimitTimePackagePush struct {
	Package *models.LimitedTimePackage `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
}

func (m *Activity_LimitTimePackagePush) Reset()      { *m = Activity_LimitTimePackagePush{} }
func (*Activity_LimitTimePackagePush) ProtoMessage() {}
func (*Activity_LimitTimePackagePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 42}
}
func (m *Activity_LimitTimePackagePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_LimitTimePackagePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_LimitTimePackagePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_LimitTimePackagePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_LimitTimePackagePush.Merge(m, src)
}
func (m *Activity_LimitTimePackagePush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_LimitTimePackagePush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_LimitTimePackagePush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_LimitTimePackagePush proto.InternalMessageInfo

func (m *Activity_LimitTimePackagePush) GetPackage() *models.LimitedTimePackage {
	if m != nil {
		return m.Package
	}
	return nil
}

func (*Activity_LimitTimePackagePush) XXX_MessageName() string {
	return "service.Activity.LimitTimePackagePush"
}

// 限时弹窗礼包购买成功推送
type Activity_BuyLimitTimePackagePush struct {
	Id    int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BagId int64           `protobuf:"varint,2,opt,name=bag_id,json=bagId,proto3" json:"bag_id,omitempty"`
	Items map[int64]int64 `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Activity_BuyLimitTimePackagePush) Reset()      { *m = Activity_BuyLimitTimePackagePush{} }
func (*Activity_BuyLimitTimePackagePush) ProtoMessage() {}
func (*Activity_BuyLimitTimePackagePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 43}
}
func (m *Activity_BuyLimitTimePackagePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_BuyLimitTimePackagePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_BuyLimitTimePackagePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_BuyLimitTimePackagePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_BuyLimitTimePackagePush.Merge(m, src)
}
func (m *Activity_BuyLimitTimePackagePush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_BuyLimitTimePackagePush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_BuyLimitTimePackagePush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_BuyLimitTimePackagePush proto.InternalMessageInfo

func (m *Activity_BuyLimitTimePackagePush) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity_BuyLimitTimePackagePush) GetBagId() int64 {
	if m != nil {
		return m.BagId
	}
	return 0
}

func (m *Activity_BuyLimitTimePackagePush) GetItems() map[int64]int64 {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*Activity_BuyLimitTimePackagePush) XXX_MessageName() string {
	return "service.Activity.BuyLimitTimePackagePush"
}

// 活动购买成功推送,通用
type Activity_BuyActivityNormalPush struct {
	Id    int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BagId int64           `protobuf:"varint,2,opt,name=bag_id,json=bagId,proto3" json:"bag_id,omitempty"`
	Items map[int64]int64 `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Activity_BuyActivityNormalPush) Reset()      { *m = Activity_BuyActivityNormalPush{} }
func (*Activity_BuyActivityNormalPush) ProtoMessage() {}
func (*Activity_BuyActivityNormalPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 44}
}
func (m *Activity_BuyActivityNormalPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_BuyActivityNormalPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_BuyActivityNormalPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_BuyActivityNormalPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_BuyActivityNormalPush.Merge(m, src)
}
func (m *Activity_BuyActivityNormalPush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_BuyActivityNormalPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_BuyActivityNormalPush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_BuyActivityNormalPush proto.InternalMessageInfo

func (m *Activity_BuyActivityNormalPush) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity_BuyActivityNormalPush) GetBagId() int64 {
	if m != nil {
		return m.BagId
	}
	return 0
}

func (m *Activity_BuyActivityNormalPush) GetItems() map[int64]int64 {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*Activity_BuyActivityNormalPush) XXX_MessageName() string {
	return "service.Activity.BuyActivityNormalPush"
}

// 日礼包变更推送
type Activity_DailySaleUpdatePush struct {
	BuyTimes map[int64]int64        `protobuf:"bytes,1,rep,name=buy_times,json=buyTimes,proto3" json:"buy_times,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg      []*models.DailySaleCfg `protobuf:"bytes,2,rep,name=cfg,proto3" json:"cfg,omitempty"`
}

func (m *Activity_DailySaleUpdatePush) Reset()      { *m = Activity_DailySaleUpdatePush{} }
func (*Activity_DailySaleUpdatePush) ProtoMessage() {}
func (*Activity_DailySaleUpdatePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 45}
}
func (m *Activity_DailySaleUpdatePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_DailySaleUpdatePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_DailySaleUpdatePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_DailySaleUpdatePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_DailySaleUpdatePush.Merge(m, src)
}
func (m *Activity_DailySaleUpdatePush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_DailySaleUpdatePush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_DailySaleUpdatePush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_DailySaleUpdatePush proto.InternalMessageInfo

func (m *Activity_DailySaleUpdatePush) GetBuyTimes() map[int64]int64 {
	if m != nil {
		return m.BuyTimes
	}
	return nil
}

func (m *Activity_DailySaleUpdatePush) GetCfg() []*models.DailySaleCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (*Activity_DailySaleUpdatePush) XXX_MessageName() string {
	return "service.Activity.DailySaleUpdatePush"
}

// 周礼包变更推送
type Activity_WeeklySaleUpdatePush struct {
	BuyTimes     map[int64]int64         `protobuf:"bytes,1,rep,name=buy_times,json=buyTimes,proto3" json:"buy_times,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cfg          []*models.WeeklySaleCfg `protobuf:"bytes,2,rep,name=cfg,proto3" json:"cfg,omitempty"`
	NxtRefreshAt int64                   `protobuf:"varint,3,opt,name=nxt_refresh_at,json=nxtRefreshAt,proto3" json:"nxt_refresh_at,omitempty"`
}

func (m *Activity_WeeklySaleUpdatePush) Reset()      { *m = Activity_WeeklySaleUpdatePush{} }
func (*Activity_WeeklySaleUpdatePush) ProtoMessage() {}
func (*Activity_WeeklySaleUpdatePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 46}
}
func (m *Activity_WeeklySaleUpdatePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_WeeklySaleUpdatePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_WeeklySaleUpdatePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_WeeklySaleUpdatePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_WeeklySaleUpdatePush.Merge(m, src)
}
func (m *Activity_WeeklySaleUpdatePush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_WeeklySaleUpdatePush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_WeeklySaleUpdatePush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_WeeklySaleUpdatePush proto.InternalMessageInfo

func (m *Activity_WeeklySaleUpdatePush) GetBuyTimes() map[int64]int64 {
	if m != nil {
		return m.BuyTimes
	}
	return nil
}

func (m *Activity_WeeklySaleUpdatePush) GetCfg() []*models.WeeklySaleCfg {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *Activity_WeeklySaleUpdatePush) GetNxtRefreshAt() int64 {
	if m != nil {
		return m.NxtRefreshAt
	}
	return 0
}

func (*Activity_WeeklySaleUpdatePush) XXX_MessageName() string {
	return "service.Activity.WeeklySaleUpdatePush"
}

// 解锁高级通行证推送
type Activity_UnlockAdvancePassesPush struct {
}

func (m *Activity_UnlockAdvancePassesPush) Reset()      { *m = Activity_UnlockAdvancePassesPush{} }
func (*Activity_UnlockAdvancePassesPush) ProtoMessage() {}
func (*Activity_UnlockAdvancePassesPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 47}
}
func (m *Activity_UnlockAdvancePassesPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_UnlockAdvancePassesPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_UnlockAdvancePassesPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_UnlockAdvancePassesPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_UnlockAdvancePassesPush.Merge(m, src)
}
func (m *Activity_UnlockAdvancePassesPush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_UnlockAdvancePassesPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_UnlockAdvancePassesPush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_UnlockAdvancePassesPush proto.InternalMessageInfo

func (*Activity_UnlockAdvancePassesPush) XXX_MessageName() string {
	return "service.Activity.UnlockAdvancePassesPush"
}

// 加通行证经验推送
type Activity_AddPassesExpPush struct {
	Lv  int64 `protobuf:"varint,1,opt,name=lv,proto3" json:"lv,omitempty"`
	Exp int64 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (m *Activity_AddPassesExpPush) Reset()      { *m = Activity_AddPassesExpPush{} }
func (*Activity_AddPassesExpPush) ProtoMessage() {}
func (*Activity_AddPassesExpPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 48}
}
func (m *Activity_AddPassesExpPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_AddPassesExpPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_AddPassesExpPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_AddPassesExpPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_AddPassesExpPush.Merge(m, src)
}
func (m *Activity_AddPassesExpPush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_AddPassesExpPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_AddPassesExpPush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_AddPassesExpPush proto.InternalMessageInfo

func (m *Activity_AddPassesExpPush) GetLv() int64 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func (m *Activity_AddPassesExpPush) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (*Activity_AddPassesExpPush) XXX_MessageName() string {
	return "service.Activity.AddPassesExpPush"
}

// 购买豪华成长基金推送
type Activity_LevelGrowthFundBuyPush struct {
	Buy bool `protobuf:"varint,1,opt,name=buy,proto3" json:"buy,omitempty"`
}

func (m *Activity_LevelGrowthFundBuyPush) Reset()      { *m = Activity_LevelGrowthFundBuyPush{} }
func (*Activity_LevelGrowthFundBuyPush) ProtoMessage() {}
func (*Activity_LevelGrowthFundBuyPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 49}
}
func (m *Activity_LevelGrowthFundBuyPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_LevelGrowthFundBuyPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_LevelGrowthFundBuyPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_LevelGrowthFundBuyPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_LevelGrowthFundBuyPush.Merge(m, src)
}
func (m *Activity_LevelGrowthFundBuyPush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_LevelGrowthFundBuyPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_LevelGrowthFundBuyPush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_LevelGrowthFundBuyPush proto.InternalMessageInfo

func (m *Activity_LevelGrowthFundBuyPush) GetBuy() bool {
	if m != nil {
		return m.Buy
	}
	return false
}

func (*Activity_LevelGrowthFundBuyPush) XXX_MessageName() string {
	return "service.Activity.LevelGrowthFundBuyPush"
}

// 零元购触发推送
type Activity_ZeroBuyActivePush struct {
}

func (m *Activity_ZeroBuyActivePush) Reset()      { *m = Activity_ZeroBuyActivePush{} }
func (*Activity_ZeroBuyActivePush) ProtoMessage() {}
func (*Activity_ZeroBuyActivePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 50}
}
func (m *Activity_ZeroBuyActivePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_ZeroBuyActivePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_ZeroBuyActivePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_ZeroBuyActivePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_ZeroBuyActivePush.Merge(m, src)
}
func (m *Activity_ZeroBuyActivePush) XXX_Size() int {
	return m.Size()
}
func (m *Activity_ZeroBuyActivePush) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_ZeroBuyActivePush.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_ZeroBuyActivePush proto.InternalMessageInfo

func (*Activity_ZeroBuyActivePush) XXX_MessageName() string {
	return "service.Activity.ZeroBuyActivePush"
}

// 获取限时弹窗礼包列表
type Activity_CheatBuyLimitTimePackagesRequest struct {
	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BagIdx int64 `protobuf:"varint,2,opt,name=bag_idx,json=bagIdx,proto3" json:"bag_idx,omitempty"`
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) Reset() {
	*m = Activity_CheatBuyLimitTimePackagesRequest{}
}
func (*Activity_CheatBuyLimitTimePackagesRequest) ProtoMessage() {}
func (*Activity_CheatBuyLimitTimePackagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 51}
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatBuyLimitTimePackagesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatBuyLimitTimePackagesRequest.Merge(m, src)
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatBuyLimitTimePackagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatBuyLimitTimePackagesRequest proto.InternalMessageInfo

func (m *Activity_CheatBuyLimitTimePackagesRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) GetBagIdx() int64 {
	if m != nil {
		return m.BagIdx
	}
	return 0
}

func (*Activity_CheatBuyLimitTimePackagesRequest) XXX_MessageName() string {
	return "service.Activity.CheatBuyLimitTimePackagesRequest"
}

type Activity_CheatBuyLimitTimePackagesResponse struct {
}

func (m *Activity_CheatBuyLimitTimePackagesResponse) Reset() {
	*m = Activity_CheatBuyLimitTimePackagesResponse{}
}
func (*Activity_CheatBuyLimitTimePackagesResponse) ProtoMessage() {}
func (*Activity_CheatBuyLimitTimePackagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 52}
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatBuyLimitTimePackagesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatBuyLimitTimePackagesResponse.Merge(m, src)
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatBuyLimitTimePackagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatBuyLimitTimePackagesResponse proto.InternalMessageInfo

func (*Activity_CheatBuyLimitTimePackagesResponse) XXX_MessageName() string {
	return "service.Activity.CheatBuyLimitTimePackagesResponse"
}

// 购买等级成长基金
type Activity_CheatBuyLevelGrowthFundRequest struct {
}

func (m *Activity_CheatBuyLevelGrowthFundRequest) Reset() {
	*m = Activity_CheatBuyLevelGrowthFundRequest{}
}
func (*Activity_CheatBuyLevelGrowthFundRequest) ProtoMessage() {}
func (*Activity_CheatBuyLevelGrowthFundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 53}
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatBuyLevelGrowthFundRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatBuyLevelGrowthFundRequest.Merge(m, src)
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatBuyLevelGrowthFundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatBuyLevelGrowthFundRequest proto.InternalMessageInfo

func (*Activity_CheatBuyLevelGrowthFundRequest) XXX_MessageName() string {
	return "service.Activity.CheatBuyLevelGrowthFundRequest"
}

type Activity_CheatBuyLevelGrowthFundResponse struct {
}

func (m *Activity_CheatBuyLevelGrowthFundResponse) Reset() {
	*m = Activity_CheatBuyLevelGrowthFundResponse{}
}
func (*Activity_CheatBuyLevelGrowthFundResponse) ProtoMessage() {}
func (*Activity_CheatBuyLevelGrowthFundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 54}
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatBuyLevelGrowthFundResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatBuyLevelGrowthFundResponse.Merge(m, src)
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatBuyLevelGrowthFundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatBuyLevelGrowthFundResponse proto.InternalMessageInfo

func (*Activity_CheatBuyLevelGrowthFundResponse) XXX_MessageName() string {
	return "service.Activity.CheatBuyLevelGrowthFundResponse"
}

// 作弊充值
type Activity_CheatRechargeRequest struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *Activity_CheatRechargeRequest) Reset()      { *m = Activity_CheatRechargeRequest{} }
func (*Activity_CheatRechargeRequest) ProtoMessage() {}
func (*Activity_CheatRechargeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 55}
}
func (m *Activity_CheatRechargeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatRechargeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatRechargeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatRechargeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatRechargeRequest.Merge(m, src)
}
func (m *Activity_CheatRechargeRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatRechargeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatRechargeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatRechargeRequest proto.InternalMessageInfo

func (m *Activity_CheatRechargeRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (*Activity_CheatRechargeRequest) XXX_MessageName() string {
	return "service.Activity.CheatRechargeRequest"
}

type Activity_CheatRechargeResponse struct {
}

func (m *Activity_CheatRechargeResponse) Reset()      { *m = Activity_CheatRechargeResponse{} }
func (*Activity_CheatRechargeResponse) ProtoMessage() {}
func (*Activity_CheatRechargeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 56}
}
func (m *Activity_CheatRechargeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatRechargeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatRechargeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatRechargeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatRechargeResponse.Merge(m, src)
}
func (m *Activity_CheatRechargeResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatRechargeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatRechargeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatRechargeResponse proto.InternalMessageInfo

func (*Activity_CheatRechargeResponse) XXX_MessageName() string {
	return "service.Activity.CheatRechargeResponse"
}

// 作弊清星钻商会购买次数
type Activity_CheatClearStellargemCntRequest struct {
}

func (m *Activity_CheatClearStellargemCntRequest) Reset() {
	*m = Activity_CheatClearStellargemCntRequest{}
}
func (*Activity_CheatClearStellargemCntRequest) ProtoMessage() {}
func (*Activity_CheatClearStellargemCntRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 57}
}
func (m *Activity_CheatClearStellargemCntRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatClearStellargemCntRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatClearStellargemCntRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatClearStellargemCntRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatClearStellargemCntRequest.Merge(m, src)
}
func (m *Activity_CheatClearStellargemCntRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatClearStellargemCntRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatClearStellargemCntRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatClearStellargemCntRequest proto.InternalMessageInfo

func (*Activity_CheatClearStellargemCntRequest) XXX_MessageName() string {
	return "service.Activity.CheatClearStellargemCntRequest"
}

type Activity_CheatClearStellargemCntResponse struct {
}

func (m *Activity_CheatClearStellargemCntResponse) Reset() {
	*m = Activity_CheatClearStellargemCntResponse{}
}
func (*Activity_CheatClearStellargemCntResponse) ProtoMessage() {}
func (*Activity_CheatClearStellargemCntResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 58}
}
func (m *Activity_CheatClearStellargemCntResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatClearStellargemCntResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatClearStellargemCntResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatClearStellargemCntResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatClearStellargemCntResponse.Merge(m, src)
}
func (m *Activity_CheatClearStellargemCntResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatClearStellargemCntResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatClearStellargemCntResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatClearStellargemCntResponse proto.InternalMessageInfo

func (*Activity_CheatClearStellargemCntResponse) XXX_MessageName() string {
	return "service.Activity.CheatClearStellargemCntResponse"
}

// 作弊器解锁通行证高级奖励
type Activity_CheatUnlockAdvancePassesRequest struct {
}

func (m *Activity_CheatUnlockAdvancePassesRequest) Reset() {
	*m = Activity_CheatUnlockAdvancePassesRequest{}
}
func (*Activity_CheatUnlockAdvancePassesRequest) ProtoMessage() {}
func (*Activity_CheatUnlockAdvancePassesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 59}
}
func (m *Activity_CheatUnlockAdvancePassesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatUnlockAdvancePassesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatUnlockAdvancePassesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatUnlockAdvancePassesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatUnlockAdvancePassesRequest.Merge(m, src)
}
func (m *Activity_CheatUnlockAdvancePassesRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatUnlockAdvancePassesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatUnlockAdvancePassesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatUnlockAdvancePassesRequest proto.InternalMessageInfo

func (*Activity_CheatUnlockAdvancePassesRequest) XXX_MessageName() string {
	return "service.Activity.CheatUnlockAdvancePassesRequest"
}

type Activity_CheatUnlockAdvancePassesResponse struct {
}

func (m *Activity_CheatUnlockAdvancePassesResponse) Reset() {
	*m = Activity_CheatUnlockAdvancePassesResponse{}
}
func (*Activity_CheatUnlockAdvancePassesResponse) ProtoMessage() {}
func (*Activity_CheatUnlockAdvancePassesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 60}
}
func (m *Activity_CheatUnlockAdvancePassesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatUnlockAdvancePassesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatUnlockAdvancePassesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatUnlockAdvancePassesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatUnlockAdvancePassesResponse.Merge(m, src)
}
func (m *Activity_CheatUnlockAdvancePassesResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatUnlockAdvancePassesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatUnlockAdvancePassesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatUnlockAdvancePassesResponse proto.InternalMessageInfo

func (*Activity_CheatUnlockAdvancePassesResponse) XXX_MessageName() string {
	return "service.Activity.CheatUnlockAdvancePassesResponse"
}

// 作弊器加通行证经验
type Activity_CheatAddPassesExpRequest struct {
	Exp int64 `protobuf:"varint,1,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (m *Activity_CheatAddPassesExpRequest) Reset()      { *m = Activity_CheatAddPassesExpRequest{} }
func (*Activity_CheatAddPassesExpRequest) ProtoMessage() {}
func (*Activity_CheatAddPassesExpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 61}
}
func (m *Activity_CheatAddPassesExpRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatAddPassesExpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatAddPassesExpRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatAddPassesExpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatAddPassesExpRequest.Merge(m, src)
}
func (m *Activity_CheatAddPassesExpRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatAddPassesExpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatAddPassesExpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatAddPassesExpRequest proto.InternalMessageInfo

func (m *Activity_CheatAddPassesExpRequest) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (*Activity_CheatAddPassesExpRequest) XXX_MessageName() string {
	return "service.Activity.CheatAddPassesExpRequest"
}

type Activity_CheatAddPassesExpResponse struct {
}

func (m *Activity_CheatAddPassesExpResponse) Reset()      { *m = Activity_CheatAddPassesExpResponse{} }
func (*Activity_CheatAddPassesExpResponse) ProtoMessage() {}
func (*Activity_CheatAddPassesExpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 62}
}
func (m *Activity_CheatAddPassesExpResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatAddPassesExpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatAddPassesExpResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatAddPassesExpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatAddPassesExpResponse.Merge(m, src)
}
func (m *Activity_CheatAddPassesExpResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatAddPassesExpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatAddPassesExpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatAddPassesExpResponse proto.InternalMessageInfo

func (*Activity_CheatAddPassesExpResponse) XXX_MessageName() string {
	return "service.Activity.CheatAddPassesExpResponse"
}

// 作弊刷新每周礼包次数
type Activity_CheatRefreshWeeklyRequest struct {
}

func (m *Activity_CheatRefreshWeeklyRequest) Reset()      { *m = Activity_CheatRefreshWeeklyRequest{} }
func (*Activity_CheatRefreshWeeklyRequest) ProtoMessage() {}
func (*Activity_CheatRefreshWeeklyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 63}
}
func (m *Activity_CheatRefreshWeeklyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatRefreshWeeklyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatRefreshWeeklyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatRefreshWeeklyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatRefreshWeeklyRequest.Merge(m, src)
}
func (m *Activity_CheatRefreshWeeklyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatRefreshWeeklyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatRefreshWeeklyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatRefreshWeeklyRequest proto.InternalMessageInfo

func (*Activity_CheatRefreshWeeklyRequest) XXX_MessageName() string {
	return "service.Activity.CheatRefreshWeeklyRequest"
}

type Activity_CheatRefreshWeeklyResponse struct {
}

func (m *Activity_CheatRefreshWeeklyResponse) Reset()      { *m = Activity_CheatRefreshWeeklyResponse{} }
func (*Activity_CheatRefreshWeeklyResponse) ProtoMessage() {}
func (*Activity_CheatRefreshWeeklyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 64}
}
func (m *Activity_CheatRefreshWeeklyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatRefreshWeeklyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatRefreshWeeklyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatRefreshWeeklyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatRefreshWeeklyResponse.Merge(m, src)
}
func (m *Activity_CheatRefreshWeeklyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatRefreshWeeklyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatRefreshWeeklyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatRefreshWeeklyResponse proto.InternalMessageInfo

func (*Activity_CheatRefreshWeeklyResponse) XXX_MessageName() string {
	return "service.Activity.CheatRefreshWeeklyResponse"
}

// 作弊清除零元购购买记录
type Activity_CheatClearZeroBuyRequest struct {
}

func (m *Activity_CheatClearZeroBuyRequest) Reset()      { *m = Activity_CheatClearZeroBuyRequest{} }
func (*Activity_CheatClearZeroBuyRequest) ProtoMessage() {}
func (*Activity_CheatClearZeroBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 65}
}
func (m *Activity_CheatClearZeroBuyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatClearZeroBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatClearZeroBuyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatClearZeroBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatClearZeroBuyRequest.Merge(m, src)
}
func (m *Activity_CheatClearZeroBuyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatClearZeroBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatClearZeroBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatClearZeroBuyRequest proto.InternalMessageInfo

func (*Activity_CheatClearZeroBuyRequest) XXX_MessageName() string {
	return "service.Activity.CheatClearZeroBuyRequest"
}

type Activity_CheatClearZeroBuyResponse struct {
}

func (m *Activity_CheatClearZeroBuyResponse) Reset()      { *m = Activity_CheatClearZeroBuyResponse{} }
func (*Activity_CheatClearZeroBuyResponse) ProtoMessage() {}
func (*Activity_CheatClearZeroBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 66}
}
func (m *Activity_CheatClearZeroBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatClearZeroBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatClearZeroBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatClearZeroBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatClearZeroBuyResponse.Merge(m, src)
}
func (m *Activity_CheatClearZeroBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatClearZeroBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatClearZeroBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatClearZeroBuyResponse proto.InternalMessageInfo

func (*Activity_CheatClearZeroBuyResponse) XXX_MessageName() string {
	return "service.Activity.CheatClearZeroBuyResponse"
}

// 作弊零元购前移一天
type Activity_CheatZeroBuyAheadOneDayRequest struct {
}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) Reset() {
	*m = Activity_CheatZeroBuyAheadOneDayRequest{}
}
func (*Activity_CheatZeroBuyAheadOneDayRequest) ProtoMessage() {}
func (*Activity_CheatZeroBuyAheadOneDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 67}
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayRequest.Merge(m, src)
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayRequest proto.InternalMessageInfo

func (*Activity_CheatZeroBuyAheadOneDayRequest) XXX_MessageName() string {
	return "service.Activity.CheatZeroBuyAheadOneDayRequest"
}

type Activity_CheatZeroBuyAheadOneDayResponse struct {
}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) Reset() {
	*m = Activity_CheatZeroBuyAheadOneDayResponse{}
}
func (*Activity_CheatZeroBuyAheadOneDayResponse) ProtoMessage() {}
func (*Activity_CheatZeroBuyAheadOneDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c869c43e6e257b4c, []int{0, 68}
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayResponse.Merge(m, src)
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) XXX_Size() int {
	return m.Size()
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Activity_CheatZeroBuyAheadOneDayResponse proto.InternalMessageInfo

func (*Activity_CheatZeroBuyAheadOneDayResponse) XXX_MessageName() string {
	return "service.Activity.CheatZeroBuyAheadOneDayResponse"
}
func init() {
	proto.RegisterEnum("service.ActivityErrorCode", ActivityErrorCode_name, ActivityErrorCode_value)
	proto.RegisterType((*Activity)(nil), "service.Activity")
	proto.RegisterType((*Activity_ActivityListRequest)(nil), "service.Activity.ActivityListRequest")
	proto.RegisterType((*Activity_ActivityListResponse)(nil), "service.Activity.ActivityListResponse")
	proto.RegisterType((*Activity_ActivityThreeDayInfoRequest)(nil), "service.Activity.ActivityThreeDayInfoRequest")
	proto.RegisterType((*Activity_ActivityThreeDayInfoResponse)(nil), "service.Activity.ActivityThreeDayInfoResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.ActivityThreeDayInfoResponse.ReceiveEntry")
	proto.RegisterType((*Activity_ActivityThreeDayGetRewardRequest)(nil), "service.Activity.ActivityThreeDayGetRewardRequest")
	proto.RegisterType((*Activity_ActivityThreeDayGetRewardResponse)(nil), "service.Activity.ActivityThreeDayGetRewardResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.ActivityThreeDayGetRewardResponse.RewardEntry")
	proto.RegisterType((*Activity_DailySaleInfoRequest)(nil), "service.Activity.DailySaleInfoRequest")
	proto.RegisterType((*Activity_DailySaleInfoResponse)(nil), "service.Activity.DailySaleInfoResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.DailySaleInfoResponse.BuyTimesEntry")
	proto.RegisterType((*Activity_DailySaleBuyRequest)(nil), "service.Activity.DailySaleBuyRequest")
	proto.RegisterType((*Activity_DailySaleBuyResponse)(nil), "service.Activity.DailySaleBuyResponse")
	proto.RegisterType((*Activity_GetLimitTimePackagesRequest)(nil), "service.Activity.GetLimitTimePackagesRequest")
	proto.RegisterType((*Activity_GetLimitTimePackagesResponse)(nil), "service.Activity.GetLimitTimePackagesResponse")
	proto.RegisterMapType((map[int64]*models.LimitedTimePackage)(nil), "service.Activity.GetLimitTimePackagesResponse.PackagesEntry")
	proto.RegisterType((*Activity_LevelGrowthFundDataRequest)(nil), "service.Activity.LevelGrowthFundDataRequest")
	proto.RegisterType((*Activity_LevelGrowthFundDataResponse)(nil), "service.Activity.LevelGrowthFundDataResponse")
	proto.RegisterMapType((map[int64]*models.LevelGrowthFundItem)(nil), "service.Activity.LevelGrowthFundDataResponse.InfoEntry")
	proto.RegisterType((*Activity_LevelGrowthFundGetRewardRequest)(nil), "service.Activity.LevelGrowthFundGetRewardRequest")
	proto.RegisterType((*Activity_LevelGrowthFundGetRewardResponse)(nil), "service.Activity.LevelGrowthFundGetRewardResponse")
	proto.RegisterMapType((map[int64]*models.LevelGrowthFundItem)(nil), "service.Activity.LevelGrowthFundGetRewardResponse.InfoEntry")
	proto.RegisterType((*Activity_AccRechargeDataRequest)(nil), "service.Activity.AccRechargeDataRequest")
	proto.RegisterType((*Activity_AccRechargeDataResponse)(nil), "service.Activity.AccRechargeDataResponse")
	proto.RegisterMapType((map[int64]bool)(nil), "service.Activity.AccRechargeDataResponse.DrawListEntry")
	proto.RegisterType((*Activity_AccRechargeDrawRequest)(nil), "service.Activity.AccRechargeDrawRequest")
	proto.RegisterType((*Activity_AccRechargeDrawResponse)(nil), "service.Activity.AccRechargeDrawResponse")
	proto.RegisterType((*Activity_StellargemShopDataRequest)(nil), "service.Activity.StellargemShopDataRequest")
	proto.RegisterType((*Activity_StellargemShopDataResponse)(nil), "service.Activity.StellargemShopDataResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.StellargemShopDataResponse.BuyCntEntry")
	proto.RegisterType((*Activity_StellargemShopBuyRequest)(nil), "service.Activity.StellargemShopBuyRequest")
	proto.RegisterType((*Activity_StellargemShopBuyResponse)(nil), "service.Activity.StellargemShopBuyResponse")
	proto.RegisterType((*Activity_WeeklySaleInfoRequest)(nil), "service.Activity.WeeklySaleInfoRequest")
	proto.RegisterType((*Activity_WeeklySaleInfoResponse)(nil), "service.Activity.WeeklySaleInfoResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.WeeklySaleInfoResponse.BuyTimesEntry")
	proto.RegisterType((*Activity_WeeklySaleBuyRequest)(nil), "service.Activity.WeeklySaleBuyRequest")
	proto.RegisterType((*Activity_WeeklySaleBuyResponse)(nil), "service.Activity.WeeklySaleBuyResponse")
	proto.RegisterType((*Activity_PassesInfoRequest)(nil), "service.Activity.PassesInfoRequest")
	proto.RegisterType((*Activity_PassesInfoResponse)(nil), "service.Activity.PassesInfoResponse")
	proto.RegisterType((*Activity_UnlockPassesRequest)(nil), "service.Activity.UnlockPassesRequest")
	proto.RegisterType((*Activity_UnlockPassesResponse)(nil), "service.Activity.UnlockPassesResponse")
	proto.RegisterType((*Activity_DrawPassesRewardRequest)(nil), "service.Activity.DrawPassesRewardRequest")
	proto.RegisterType((*Activity_DrawPassesRewardResponse)(nil), "service.Activity.DrawPassesRewardResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.DrawPassesRewardResponse.RewardsEntry")
	proto.RegisterType((*Activity_ZeroBuyInfoRequest)(nil), "service.Activity.ZeroBuyInfoRequest")
	proto.RegisterType((*Activity_ZeroBuyInfoResponse)(nil), "service.Activity.ZeroBuyInfoResponse")
	proto.RegisterType((*Activity_DrawZeroBuyRequest)(nil), "service.Activity.DrawZeroBuyRequest")
	proto.RegisterType((*Activity_DrawZeroBuyResponse)(nil), "service.Activity.DrawZeroBuyResponse")
	proto.RegisterType((*Activity_ZeroBuyDrawNextDayRequest)(nil), "service.Activity.ZeroBuyDrawNextDayRequest")
	proto.RegisterType((*Activity_ZeroBuyDrawNextDayResponse)(nil), "service.Activity.ZeroBuyDrawNextDayResponse")
	proto.RegisterType((*Activity_ActivityStartedPush)(nil), "service.Activity.ActivityStartedPush")
	proto.RegisterType((*Activity_ActivityEndedPush)(nil), "service.Activity.ActivityEndedPush")
	proto.RegisterType((*Activity_LimitTimePackagePush)(nil), "service.Activity.LimitTimePackagePush")
	proto.RegisterType((*Activity_BuyLimitTimePackagePush)(nil), "service.Activity.BuyLimitTimePackagePush")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.BuyLimitTimePackagePush.ItemsEntry")
	proto.RegisterType((*Activity_BuyActivityNormalPush)(nil), "service.Activity.BuyActivityNormalPush")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.BuyActivityNormalPush.ItemsEntry")
	proto.RegisterType((*Activity_DailySaleUpdatePush)(nil), "service.Activity.DailySaleUpdatePush")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.DailySaleUpdatePush.BuyTimesEntry")
	proto.RegisterType((*Activity_WeeklySaleUpdatePush)(nil), "service.Activity.WeeklySaleUpdatePush")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Activity.WeeklySaleUpdatePush.BuyTimesEntry")
	proto.RegisterType((*Activity_UnlockAdvancePassesPush)(nil), "service.Activity.UnlockAdvancePassesPush")
	proto.RegisterType((*Activity_AddPassesExpPush)(nil), "service.Activity.AddPassesExpPush")
	proto.RegisterType((*Activity_LevelGrowthFundBuyPush)(nil), "service.Activity.LevelGrowthFundBuyPush")
	proto.RegisterType((*Activity_ZeroBuyActivePush)(nil), "service.Activity.ZeroBuyActivePush")
	proto.RegisterType((*Activity_CheatBuyLimitTimePackagesRequest)(nil), "service.Activity.CheatBuyLimitTimePackagesRequest")
	proto.RegisterType((*Activity_CheatBuyLimitTimePackagesResponse)(nil), "service.Activity.CheatBuyLimitTimePackagesResponse")
	proto.RegisterType((*Activity_CheatBuyLevelGrowthFundRequest)(nil), "service.Activity.CheatBuyLevelGrowthFundRequest")
	proto.RegisterType((*Activity_CheatBuyLevelGrowthFundResponse)(nil), "service.Activity.CheatBuyLevelGrowthFundResponse")
	proto.RegisterType((*Activity_CheatRechargeRequest)(nil), "service.Activity.CheatRechargeRequest")
	proto.RegisterType((*Activity_CheatRechargeResponse)(nil), "service.Activity.CheatRechargeResponse")
	proto.RegisterType((*Activity_CheatClearStellargemCntRequest)(nil), "service.Activity.CheatClearStellargemCntRequest")
	proto.RegisterType((*Activity_CheatClearStellargemCntResponse)(nil), "service.Activity.CheatClearStellargemCntResponse")
	proto.RegisterType((*Activity_CheatUnlockAdvancePassesRequest)(nil), "service.Activity.CheatUnlockAdvancePassesRequest")
	proto.RegisterType((*Activity_CheatUnlockAdvancePassesResponse)(nil), "service.Activity.CheatUnlockAdvancePassesResponse")
	proto.RegisterType((*Activity_CheatAddPassesExpRequest)(nil), "service.Activity.CheatAddPassesExpRequest")
	proto.RegisterType((*Activity_CheatAddPassesExpResponse)(nil), "service.Activity.CheatAddPassesExpResponse")
	proto.RegisterType((*Activity_CheatRefreshWeeklyRequest)(nil), "service.Activity.CheatRefreshWeeklyRequest")
	proto.RegisterType((*Activity_CheatRefreshWeeklyResponse)(nil), "service.Activity.CheatRefreshWeeklyResponse")
	proto.RegisterType((*Activity_CheatClearZeroBuyRequest)(nil), "service.Activity.CheatClearZeroBuyRequest")
	proto.RegisterType((*Activity_CheatClearZeroBuyResponse)(nil), "service.Activity.CheatClearZeroBuyResponse")
	proto.RegisterType((*Activity_CheatZeroBuyAheadOneDayRequest)(nil), "service.Activity.CheatZeroBuyAheadOneDayRequest")
	proto.RegisterType((*Activity_CheatZeroBuyAheadOneDayResponse)(nil), "service.Activity.CheatZeroBuyAheadOneDayResponse")
}

func init() { proto.RegisterFile("proto/service/activity.proto", fileDescriptor_c869c43e6e257b4c) }

var fileDescriptor_c869c43e6e257b4c = []byte{
	// 2096 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x5d, 0x6c, 0x1c, 0x57,
	0x15, 0xf6, 0xf8, 0x77, 0x7d, 0x9c, 0x3a, 0x9b, 0xeb, 0xb5, 0xbd, 0x1e, 0x9b, 0xad, 0x53, 0xda,
	0xc4, 0x04, 0x77, 0x43, 0x12, 0x43, 0x9d, 0x36, 0x02, 0xd6, 0xde, 0xcd, 0x0f, 0x8d, 0x5c, 0x67,
	0x9d, 0x28, 0xa8, 0x2f, 0xab, 0xeb, 0x9d, 0x6b, 0x7b, 0x94, 0xd9, 0x99, 0x65, 0xe6, 0xae, 0xbd,
	0xfb, 0x96, 0x3c, 0xa4, 0x14, 0x93, 0x08, 0x50, 0x81, 0x96, 0x2a, 0x08, 0xb5, 0x14, 0x11, 0x8a,
	0xda, 0x54, 0x55, 0x4c, 0x88, 0x52, 0x84, 0xc4, 0x03, 0xaa, 0x10, 0x0f, 0xe1, 0xad, 0x8f, 0xe0,
	0x64, 0x1d, 0xfb, 0x8d, 0x17, 0x1e, 0x78, 0x40, 0x42, 0x77, 0xee, 0xbd, 0xbb, 0x33, 0x3b, 0xb3,
	0x1b, 0x5c, 0x40, 0xf0, 0xb6, 0x73, 0xee, 0x39, 0xdf, 0x39, 0xe7, 0xbb, 0xe7, 0xde, 0x73, 0xae,
	0x16, 0xc6, 0x8a, 0xb6, 0x45, 0xad, 0xc3, 0x0e, 0xb1, 0x57, 0xf5, 0x3c, 0x39, 0x8c, 0xf3, 0x54,
	0x5f, 0xd5, 0x69, 0x25, 0xe9, 0x8a, 0x51, 0x8f, 0x90, 0xab, 0xa3, 0x5c, 0xad, 0x60, 0x69, 0xc4,
	0x70, 0x1a, 0xb4, 0xd4, 0x61, 0xdf, 0xe2, 0x22, 0x76, 0x08, 0x5f, 0x78, 0xea, 0xe1, 0x21, 0x88,
	0xa4, 0x84, 0xae, 0x3a, 0x08, 0x03, 0xf2, 0xf7, 0x59, 0xdd, 0xa1, 0x59, 0xf2, 0x8d, 0x12, 0x71,
	0xa8, 0x7a, 0x02, 0x62, 0x7e, 0xb1, 0x53, 0xb4, 0x4c, 0x87, 0xa0, 0xa7, 0xa1, 0xd3, 0xd0, 0x1d,
	0x1a, 0x57, 0xc6, 0x3b, 0x26, 0xfa, 0x8e, 0x46, 0x93, 0x1c, 0x3d, 0x29, 0x75, 0xb3, 0xee, 0xaa,
	0xfa, 0x19, 0x18, 0x95, 0x92, 0xf3, 0x2b, 0x36, 0x21, 0x69, 0x5c, 0x39, 0x63, 0x2e, 0x59, 0x12,
	0xfc, 0x7b, 0xed, 0x30, 0x16, 0xbe, 0x2e, 0xbc, 0x8c, 0x42, 0xaf, 0x61, 0x2d, 0xeb, 0x66, 0x4e,
	0xc3, 0x95, 0xb8, 0x32, 0xae, 0x4c, 0x74, 0x64, 0x23, 0xae, 0x20, 0x8d, 0x2b, 0xe8, 0x02, 0xf4,
	0xd8, 0x24, 0x4f, 0xf4, 0x55, 0x12, 0x6f, 0x77, 0xa3, 0x78, 0x21, 0x29, 0xf8, 0xa8, 0x85, 0x91,
	0x6c, 0x85, 0x9e, 0xcc, 0x72, 0xeb, 0x8c, 0x49, 0xed, 0x4a, 0x56, 0x62, 0xa1, 0x67, 0xa0, 0x23,
	0xbf, 0xb4, 0x1c, 0xef, 0x70, 0x21, 0x07, 0x64, 0x62, 0x27, 0x75, 0xdb, 0xa1, 0xf3, 0xb8, 0x32,
	0xbb, 0xb4, 0x9c, 0x65, 0xeb, 0x48, 0x85, 0x88, 0x4d, 0xf2, 0x2b, 0xd8, 0x5e, 0x26, 0xf1, 0xce,
	0x71, 0x65, 0x22, 0x92, 0xad, 0x7d, 0xab, 0xcf, 0xc3, 0x1e, 0x2f, 0x36, 0x8a, 0x42, 0xc7, 0x25,
	0x22, 0x13, 0x60, 0x3f, 0x51, 0x0c, 0xba, 0x56, 0xb1, 0x51, 0x62, 0x91, 0x33, 0x19, 0xff, 0x78,
	0xbe, 0x7d, 0x5a, 0x51, 0xa7, 0x60, 0xbc, 0x31, 0xe8, 0x53, 0x84, 0x66, 0xc9, 0x1a, 0xb6, 0x35,
	0xc1, 0x1b, 0xc3, 0xab, 0x13, 0xc2, 0x7e, 0xaa, 0x77, 0x14, 0xd8, 0xdf, 0xc2, 0x4c, 0xd0, 0x79,
	0x11, 0xba, 0x6d, 0x57, 0x22, 0xb6, 0xed, 0x2b, 0x8f, 0x27, 0x2c, 0x00, 0x92, 0xe4, 0x9f, 0x9c,
	0x34, 0x01, 0xa7, 0x1e, 0x87, 0x3e, 0x8f, 0x78, 0x57, 0xf9, 0x0e, 0x41, 0x2c, 0x8d, 0x75, 0xa3,
	0xb2, 0x80, 0x0d, 0xe2, 0xad, 0x8d, 0xfb, 0x0a, 0x0c, 0x36, 0x2c, 0x88, 0x2c, 0xb2, 0xd0, 0xbb,
	0x58, 0xaa, 0xe4, 0xa8, 0x5e, 0x20, 0x8e, 0x48, 0xe4, 0x8b, 0xc1, 0x44, 0x42, 0x6d, 0x93, 0x33,
	0xa5, 0xca, 0x79, 0x66, 0xc7, 0xc3, 0x8f, 0x2c, 0x8a, 0x4f, 0x74, 0x80, 0x6f, 0x3a, 0xaf, 0xa3,
	0x98, 0xdc, 0xf4, 0x1a, 0x86, 0xdc, 0x75, 0xf5, 0x05, 0x78, 0xc2, 0x07, 0xb1, 0xab, 0x54, 0x0f,
	0xc2, 0x40, 0x0d, 0x71, 0xa6, 0x54, 0xf1, 0xec, 0xa6, 0xae, 0x95, 0x25, 0x84, 0xae, 0x95, 0x7d,
	0x9c, 0xb8, 0x8a, 0x3c, 0x7a, 0x76, 0x9c, 0x4e, 0x11, 0x7a, 0x56, 0x2f, 0xe8, 0x94, 0x85, 0x30,
	0x8f, 0xf3, 0x97, 0xf0, 0x32, 0x71, 0x24, 0x65, 0x7f, 0x52, 0x60, 0x2c, 0x7c, 0x5d, 0x30, 0xf7,
	0x75, 0x88, 0x14, 0x85, 0x4c, 0xa4, 0x7a, 0x22, 0x48, 0x5c, 0x2b, 0x84, 0xa4, 0x14, 0x08, 0xfe,
	0x24, 0x9a, 0x7a, 0x11, 0x9e, 0xf0, 0x2d, 0x85, 0xf0, 0xf2, 0x05, 0x2f, 0x2f, 0x7d, 0x47, 0x55,
	0x49, 0xb2, 0xeb, 0x8c, 0x68, 0x1e, 0x77, 0x5e, 0xce, 0xc6, 0x40, 0x3d, 0x4b, 0x56, 0x89, 0x71,
	0xca, 0xb6, 0xd6, 0xe8, 0xca, 0xc9, 0x92, 0xa9, 0xa5, 0x31, 0xc5, 0x32, 0xe3, 0xcb, 0xed, 0x30,
	0x1a, 0xba, 0x2c, 0x12, 0x8e, 0x42, 0xc7, 0x62, 0x89, 0x47, 0x11, 0xc9, 0xb2, 0x9f, 0xe8, 0x45,
	0xe8, 0xd4, 0xcd, 0x25, 0x4b, 0xa4, 0xff, 0x5c, 0x30, 0xfd, 0x16, 0x70, 0x49, 0x56, 0x4a, 0x3c,
	0x73, 0x17, 0x04, 0x4d, 0x7a, 0xaf, 0x8a, 0x7a, 0x42, 0x7e, 0x84, 0x5a, 0xed, 0x9c, 0x87, 0xde,
	0x1a, 0x40, 0x08, 0x3f, 0x47, 0xfc, 0xfc, 0x8c, 0x36, 0x81, 0x3b, 0x43, 0x49, 0xc1, 0x4b, 0xd0,
	0x11, 0x78, 0xb2, 0x41, 0x23, 0x70, 0x5d, 0xf4, 0x43, 0xbb, 0xae, 0x09, 0x57, 0xed, 0xba, 0xa6,
	0xfe, 0x41, 0x81, 0xf1, 0xe6, 0x36, 0x82, 0xba, 0x79, 0x41, 0x94, 0xd2, 0xac, 0x4e, 0x1e, 0x87,
	0xd0, 0xc8, 0xd6, 0x7f, 0x29, 0xff, 0x38, 0x0c, 0xa5, 0xf2, 0xf9, 0xac, 0xb8, 0x7a, 0xbd, 0xc5,
	0xf1, 0x0f, 0x05, 0x86, 0x03, 0x4b, 0x22, 0xbb, 0x67, 0xa0, 0x9f, 0x5a, 0x14, 0x1b, 0xb9, 0xda,
	0x1d, 0xce, 0x23, 0x79, 0xc2, 0x95, 0x4a, 0x13, 0x74, 0x1e, 0x7a, 0x35, 0x1b, 0xaf, 0xe5, 0xdc,
	0x56, 0xd7, 0xb4, 0x64, 0x9a, 0x38, 0x49, 0xa6, 0x6d, 0xbc, 0xc6, 0x9a, 0xa6, 0x38, 0x2c, 0x9a,
	0xf8, 0x44, 0x13, 0xde, 0xb2, 0x19, 0xaa, 0xb7, 0xce, 0x1a, 0x8a, 0xf7, 0xba, 0xf1, 0x81, 0x3c,
	0xee, 0xba, 0x89, 0x78, 0x99, 0x39, 0xe4, 0x67, 0xc6, 0xc6, 0x6b, 0xcd, 0x6f, 0x9c, 0x11, 0x3f,
	0x55, 0xae, 0xae, 0xb8, 0x74, 0x46, 0x61, 0x64, 0x81, 0x12, 0xc3, 0x60, 0x0b, 0x85, 0x85, 0x15,
	0xab, 0xd8, 0xc0, 0xb1, 0x1a, 0xb6, 0x5a, 0x9b, 0x12, 0xfa, 0x75, 0x27, 0xa7, 0x59, 0xa5, 0x45,
	0x83, 0xe4, 0xac, 0x22, 0x31, 0xc5, 0x51, 0xdc, 0xa3, 0x3b, 0x69, 0x57, 0xf8, 0x52, 0x91, 0x98,
	0xe8, 0x1c, 0xf4, 0xb0, 0x0b, 0x3d, 0x6f, 0x4a, 0x8e, 0xa7, 0x83, 0x1c, 0x37, 0x77, 0xc2, 0xee,
	0xf4, 0x59, 0x53, 0x90, 0xdc, 0xbd, 0xe8, 0x7e, 0xa0, 0xcf, 0x7b, 0x29, 0x1e, 0x91, 0x14, 0xfb,
	0x41, 0x6a, 0x2c, 0x1f, 0x87, 0x3e, 0x0f, 0xc6, 0xae, 0xae, 0xf4, 0x49, 0x88, 0xfb, 0x41, 0x5b,
	0xde, 0xeb, 0x01, 0x2a, 0xbd, 0x97, 0xfb, 0x30, 0x0c, 0x5e, 0x24, 0xe4, 0x52, 0xb0, 0x13, 0xfe,
	0x5d, 0x81, 0xa1, 0xc6, 0x15, 0xc1, 0xef, 0x42, 0xb0, 0x15, 0x7e, 0x29, 0xc8, 0x5d, 0xb8, 0x71,
	0xd3, 0x5e, 0x78, 0xd0, 0xdb, 0x0b, 0x07, 0x25, 0x77, 0x75, 0x90, 0xda, 0x08, 0xf4, 0x34, 0xf4,
	0x9b, 0x65, 0x9a, 0xb3, 0xc9, 0x92, 0x4d, 0x9c, 0x95, 0x1c, 0xa6, 0xf1, 0x0e, 0x37, 0xd7, 0x3d,
	0x66, 0x99, 0x66, 0xb9, 0x30, 0x45, 0xff, 0xbd, 0x96, 0x39, 0x01, 0xb1, 0xba, 0xe3, 0x96, 0xdc,
	0xfa, 0xe8, 0xf3, 0xf2, 0x3a, 0x00, 0xfb, 0xe6, 0xb1, 0xe3, 0x10, 0xc7, 0xcb, 0xe9, 0x09, 0x40,
	0x5e, 0xa1, 0xa0, 0xf3, 0x00, 0x74, 0x17, 0x5d, 0xa9, 0x0b, 0xdc, 0x77, 0xb4, 0x5f, 0x26, 0xcf,
	0x75, 0xb3, 0x62, 0x95, 0xcd, 0xca, 0x17, 0x4c, 0xc3, 0xca, 0x5f, 0x12, 0x72, 0x01, 0x9a, 0x86,
	0x98, 0x5f, 0x2c, 0x60, 0x27, 0xa1, 0xdb, 0xa1, 0x98, 0x96, 0x38, 0x6c, 0x7f, 0x7d, 0xbe, 0xe0,
	0x7a, 0x0b, 0xee, 0x5a, 0x56, 0xe8, 0xa8, 0x5f, 0x85, 0x61, 0x76, 0xfe, 0x24, 0x46, 0xc3, 0x45,
	0x6e, 0xac, 0xca, 0x8b, 0xdc, 0x58, 0x45, 0x83, 0xd0, 0xad, 0x3b, 0x39, 0x6c, 0x18, 0xf2, 0xf0,
	0xeb, 0x4e, 0xca, 0x30, 0xd4, 0x5f, 0x28, 0x10, 0x0f, 0x42, 0x88, 0x60, 0xce, 0xb1, 0xa9, 0x99,
	0x49, 0x64, 0xc1, 0x84, 0x5c, 0x68, 0xcd, 0x8c, 0xc5, 0xec, 0xe7, 0xd4, 0x26, 0x66, 0xf7, 0x8b,
	0x8f, 0xbb, 0xf5, 0x85, 0x5d, 0x6d, 0x70, 0x0c, 0xd0, 0xcb, 0xc4, 0xb6, 0x66, 0x4a, 0xbe, 0x87,
	0xc1, 0x8f, 0x14, 0x18, 0xf0, 0x89, 0x6b, 0xf7, 0x89, 0x5b, 0x9a, 0x3c, 0x70, 0x24, 0x69, 0x14,
	0x9a, 0xb5, 0xba, 0x1c, 0x81, 0x88, 0x43, 0xb1, 0x4d, 0x59, 0x45, 0x72, 0x87, 0x3d, 0xee, 0x77,
	0x8a, 0x32, 0xc6, 0x88, 0xa9, 0xd5, 0x4b, 0xb5, 0x8b, 0x98, 0x5a, 0x8a, 0xa2, 0x43, 0x10, 0x21,
	0x38, 0xbf, 0xe2, 0x3e, 0x33, 0x3a, 0x5d, 0xf0, 0xbd, 0x0d, 0xe0, 0xd9, 0x1e, 0xa6, 0x90, 0xc6,
	0x15, 0xf5, 0x00, 0x20, 0xc6, 0x8f, 0x94, 0x37, 0x1d, 0xc9, 0x53, 0x30, 0xe0, 0xd3, 0x13, 0x29,
	0x78, 0x5d, 0x29, 0x8f, 0x71, 0xf5, 0x2c, 0x8c, 0x08, 0x19, 0x43, 0x9a, 0x23, 0x65, 0x9a, 0xc6,
	0x2d, 0x3c, 0x9e, 0x06, 0x35, 0x4c, 0xfd, 0x53, 0x38, 0x9e, 0xad, 0x3f, 0x06, 0x17, 0x18, 0x73,
	0x44, 0x9b, 0x2f, 0x39, 0x2b, 0x68, 0x12, 0x22, 0xf2, 0x6d, 0x29, 0x4e, 0x48, 0xf0, 0xe1, 0x57,
	0xd3, 0x50, 0x53, 0xb0, 0x4f, 0x4a, 0x33, 0xa6, 0xf6, 0xa9, 0x20, 0xce, 0x42, 0xac, 0x71, 0x16,
	0x75, 0x51, 0xa6, 0xa0, 0x47, 0x8c, 0x9e, 0x02, 0xa4, 0xd5, 0x34, 0x29, 0x55, 0xd5, 0xdf, 0x2b,
	0x30, 0x3c, 0x53, 0xaa, 0x84, 0x22, 0x36, 0xcc, 0x48, 0xac, 0x50, 0x16, 0xf1, 0x72, 0x4e, 0xd7,
	0x64, 0xc9, 0x2e, 0xe2, 0xe5, 0x33, 0x1a, 0xfa, 0x1a, 0x74, 0xe9, 0x94, 0x14, 0x1c, 0xd1, 0x59,
	0xa6, 0x82, 0x67, 0xa7, 0x89, 0x83, 0x24, 0x9b, 0x5b, 0xc4, 0xc1, 0xe1, 0x10, 0xea, 0x34, 0x40,
	0x5d, 0xb8, 0xab, 0x43, 0xf3, 0x3b, 0x05, 0x06, 0x67, 0x4a, 0x15, 0xe9, 0x73, 0xce, 0xb2, 0x0b,
	0xd8, 0xd8, 0x4d, 0x1a, 0xa7, 0xfd, 0x69, 0x1c, 0x0d, 0x4d, 0x23, 0x08, 0xff, 0x1f, 0x4d, 0xe2,
	0x8f, 0x8a, 0xe7, 0x39, 0x74, 0xa1, 0xa8, 0x61, 0xca, 0x77, 0x62, 0x3e, 0xd8, 0xd3, 0x8e, 0xb5,
	0x78, 0xde, 0xd5, 0x2d, 0xff, 0xb7, 0x8f, 0xbb, 0xbf, 0x29, 0xde, 0x56, 0xe5, 0xc9, 0xe7, 0x5c,
	0x30, 0x9f, 0xa9, 0x56, 0x3d, 0xfa, 0x5f, 0x48, 0xe8, 0xff, 0xa9, 0x43, 0x8f, 0xc0, 0x30, 0x6f,
	0x7a, 0x29, 0x6d, 0x15, 0x9b, 0x79, 0xc2, 0xfb, 0x06, 0x0b, 0x5f, 0x9d, 0x82, 0x68, 0x4a, 0xd3,
	0xb8, 0x20, 0x53, 0x2e, 0xca, 0x02, 0xf5, 0xb5, 0xb0, 0x28, 0x74, 0x90, 0x72, 0x51, 0xc0, 0xb2,
	0x9f, 0x6c, 0x6c, 0x6d, 0x18, 0xf9, 0x67, 0x4a, 0x15, 0xd7, 0x36, 0xf0, 0x9a, 0x63, 0xbd, 0x5d,
	0xdc, 0x5d, 0x2e, 0x91, 0x2e, 0x6b, 0xea, 0x8b, 0x30, 0x3e, 0xbb, 0x42, 0x30, 0x0d, 0x39, 0x89,
	0x4e, 0x93, 0x27, 0x11, 0x1a, 0x86, 0x1e, 0x7e, 0x4e, 0xca, 0x22, 0x94, 0x6e, 0xf7, 0xa0, 0x94,
	0xd5, 0xcf, 0xc2, 0xfe, 0x16, 0x60, 0x62, 0xc4, 0x18, 0x87, 0x44, 0x4d, 0xc9, 0x1f, 0xba, 0x6c,
	0x68, 0xfb, 0xe1, 0xc9, 0xa6, 0x1a, 0x02, 0x24, 0x09, 0x31, 0x57, 0x45, 0x0e, 0xe1, 0x32, 0xd4,
	0x21, 0xe8, 0xc6, 0x05, 0xab, 0x64, 0x52, 0x11, 0xae, 0xf8, 0x62, 0x03, 0x4f, 0x83, 0x7e, 0x43,
	0x34, 0xb3, 0x06, 0xc1, 0x76, 0x7d, 0xde, 0x9c, 0x35, 0x69, 0x63, 0x34, 0x61, 0x1a, 0x02, 0x44,
	0xaa, 0x84, 0xec, 0xad, 0x44, 0x79, 0x4a, 0xf0, 0x1c, 0xaa, 0x22, 0x60, 0x26, 0x21, 0xee, 0xea,
	0x78, 0xeb, 0xc0, 0xd3, 0xc0, 0xd8, 0xd6, 0x2b, 0xf5, 0xad, 0x1f, 0x85, 0x91, 0x10, 0xed, 0xfa,
	0x3b, 0x44, 0xe4, 0xeb, 0xd6, 0x2d, 0xaf, 0x76, 0x19, 0xcb, 0x18, 0xa8, 0x61, 0x8b, 0xc2, 0x54,
	0x15, 0x51, 0xb8, 0xf9, 0xfa, 0x1b, 0x77, 0x0d, 0xd6, 0xbf, 0xd6, 0x40, 0xa5, 0x2c, 0xb2, 0x15,
	0x82, 0xb5, 0x97, 0x4c, 0x52, 0xef, 0xc2, 0x35, 0x9e, 0xc2, 0x34, 0x38, 0xc8, 0xa1, 0x37, 0xbb,
	0x3c, 0x8d, 0xd0, 0xb6, 0x2d, 0x7b, 0xd6, 0xd2, 0x08, 0xfa, 0x1c, 0xf4, 0x67, 0x6c, 0x3b, 0xb3,
	0x4a, 0x4c, 0x7a, 0x1a, 0x3b, 0x19, 0x53, 0x8b, 0xb6, 0xa9, 0x83, 0xeb, 0x1b, 0xf1, 0x7d, 0x68,
	0xef, 0xd6, 0xed, 0x7b, 0xd5, 0xf5, 0x9b, 0xd5, 0x3b, 0x1f, 0x3e, 0xba, 0xf7, 0xda, 0xd6, 0x8f,
	0x7f, 0x82, 0x9e, 0x83, 0x11, 0xa9, 0x9a, 0xb6, 0xe6, 0x2c, 0x3a, 0x6b, 0x19, 0x06, 0xc9, 0xd3,
	0xd4, 0x32, 0xd6, 0xcd, 0xa8, 0xa2, 0xc6, 0xd7, 0x37, 0xe2, 0x31, 0x84, 0xb6, 0x6f, 0xdd, 0xa9,
	0x7e, 0xfb, 0xb7, 0x3b, 0xdf, 0xbc, 0x5e, 0x7d, 0xe7, 0xfa, 0xce, 0xdb, 0xaf, 0x54, 0xbf, 0xf3,
	0x43, 0x34, 0x0d, 0xc3, 0x19, 0xdb, 0x96, 0xbe, 0x4f, 0xe9, 0x4b, 0x74, 0xce, 0xa2, 0x99, 0xb2,
	0xee, 0xd0, 0x68, 0xbb, 0x3a, 0xba, 0xbe, 0x11, 0x1f, 0x46, 0x83, 0xc2, 0xd9, 0x0f, 0x5e, 0xa9,
	0xbe, 0x76, 0xe5, 0xe1, 0xaf, 0xaf, 0x57, 0xdf, 0x7b, 0xa3, 0x7a, 0xe3, 0x26, 0x9a, 0x86, 0x58,
	0x83, 0x65, 0xa6, 0x50, 0xa4, 0x95, 0x68, 0x87, 0x9a, 0x58, 0xdf, 0x88, 0xab, 0x28, 0xee, 0x35,
	0xab, 0xde, 0xf9, 0x70, 0xfb, 0xed, 0x5f, 0x32, 0x9f, 0xef, 0x5f, 0x43, 0x5f, 0x86, 0x71, 0x8f,
	0xe5, 0x9c, 0x45, 0xb3, 0x04, 0x6b, 0x95, 0x93, 0x2c, 0x6b, 0x37, 0x6a, 0xdd, 0x32, 0xa3, 0x9d,
	0x32, 0xe6, 0xad, 0x1b, 0xef, 0x56, 0x5f, 0xfd, 0x80, 0x47, 0xbb, 0xf5, 0xfa, 0xaf, 0x76, 0x5e,
	0xbf, 0x8d, 0x8e, 0xc0, 0x80, 0xd7, 0x9e, 0x10, 0x6d, 0x1e, 0xeb, 0x5a, 0xb4, 0xcb, 0x9b, 0xe6,
	0xd5, 0x57, 0x1f, 0xde, 0x7b, 0x63, 0xfb, 0xf6, 0xdd, 0xed, 0xdb, 0xef, 0x3d, 0xbc, 0xfb, 0x41,
	0x43, 0x9a, 0xee, 0xec, 0x23, 0xd3, 0xec, 0x96, 0x69, 0x6e, 0xdf, 0xfa, 0x19, 0x77, 0xb3, 0xf3,
	0xd6, 0xdd, 0x7a, 0x9a, 0xc7, 0x00, 0x65, 0x6c, 0x9b, 0xd7, 0xda, 0x9c, 0x25, 0x2a, 0x39, 0xda,
	0x53, 0x37, 0x62, 0xbe, 0xb6, 0x7f, 0xfe, 0xd3, 0x9d, 0xef, 0x5f, 0xd9, 0xb9, 0xfc, 0xe6, 0xf6,
	0x5b, 0xd7, 0xb6, 0x6f, 0x5d, 0x41, 0x07, 0x61, 0x6f, 0xc6, 0xb6, 0x59, 0x64, 0xf2, 0xe8, 0x45,
	0x23, 0x2a, 0x5a, 0xdf, 0x88, 0xf7, 0xa3, 0x3d, 0xdc, 0xa2, 0x7a, 0xf5, 0x6a, 0xf5, 0xf2, 0x47,
	0x28, 0xe9, 0x4f, 0x45, 0xc6, 0xd4, 0xeb, 0xdf, 0xe7, 0x7a, 0x34, 0xc7, 0x21, 0xee, 0xd1, 0x9f,
	0xb7, 0x89, 0xd8, 0xb1, 0x99, 0x52, 0x25, 0x0a, 0x32, 0xa6, 0xea, 0xb7, 0xae, 0x3f, 0xfa, 0xcd,
	0xfb, 0x8f, 0xde, 0xf9, 0xa8, 0x7a, 0xed, 0xea, 0xd6, 0x8d, 0x77, 0x05, 0x05, 0xbc, 0x44, 0x42,
	0x58, 0x67, 0xb6, 0x7d, 0x7e, 0xba, 0xb9, 0x09, 0xa7, 0x7b, 0x66, 0xee, 0x93, 0xbf, 0x24, 0xda,
	0x6e, 0x6e, 0x26, 0x94, 0x8f, 0x37, 0x13, 0xca, 0xfd, 0xcd, 0x84, 0xf2, 0xe7, 0xcd, 0x84, 0xb2,
	0xbd, 0x99, 0x68, 0xfb, 0xeb, 0x66, 0x42, 0xf9, 0xee, 0x83, 0x44, 0xdb, 0xc7, 0x0f, 0x12, 0xca,
	0xfd, 0x07, 0x89, 0xb6, 0x4f, 0x1e, 0x24, 0xda, 0x5e, 0x1e, 0xcf, 0x5b, 0xba, 0xf9, 0x2c, 0x6b,
	0x5e, 0xc4, 0x3e, 0x9c, 0xb7, 0x0a, 0x05, 0xcb, 0x3c, 0xec, 0xfb, 0x87, 0x62, 0xb1, 0xdb, 0xfd,
	0x3c, 0xf6, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xe5, 0x7a, 0x4b, 0xb9, 0x18, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityListResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityThreeDayInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityThreeDayInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityThreeDayGetRewardRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityThreeDayGetRewardResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DailySaleInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DailySaleInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DailySaleBuyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DailySaleBuyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_GetLimitTimePackagesRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_GetLimitTimePackagesResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_LevelGrowthFundDataRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_LevelGrowthFundDataResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_LevelGrowthFundGetRewardRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_LevelGrowthFundGetRewardResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_AccRechargeDataRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_AccRechargeDataResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_AccRechargeDrawRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_AccRechargeDrawResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_StellargemShopDataRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_StellargemShopDataResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_StellargemShopBuyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_StellargemShopBuyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_WeeklySaleInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_WeeklySaleInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_WeeklySaleBuyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_WeeklySaleBuyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_PassesInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_PassesInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_UnlockPassesRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_UnlockPassesResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DrawPassesRewardRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DrawPassesRewardResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ZeroBuyInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ZeroBuyInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DrawZeroBuyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DrawZeroBuyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ZeroBuyDrawNextDayRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ZeroBuyDrawNextDayResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityStartedPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ActivityEndedPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_LimitTimePackagePush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_BuyLimitTimePackagePush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_BuyActivityNormalPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_DailySaleUpdatePush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_WeeklySaleUpdatePush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_UnlockAdvancePassesPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_AddPassesExpPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_LevelGrowthFundBuyPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_ZeroBuyActivePush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatBuyLimitTimePackagesRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatBuyLimitTimePackagesResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatBuyLevelGrowthFundRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatBuyLevelGrowthFundResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatRechargeRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatRechargeResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatClearStellargemCntRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatClearStellargemCntResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatUnlockAdvancePassesRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatUnlockAdvancePassesResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatAddPassesExpRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatAddPassesExpResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatRefreshWeeklyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatRefreshWeeklyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatClearZeroBuyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatClearZeroBuyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatZeroBuyAheadOneDayRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivity_CheatZeroBuyAheadOneDayResponse.Get().(proto.Message)
	})
}

var poolActivity = &sync.Pool{New: func() interface{} { return &Activity{} }}

func (m *Activity) ReleasePool() { m.Reset(); poolActivity.Put(m); m = nil }

var poolActivity_ActivityListRequest = &sync.Pool{New: func() interface{} { return &Activity_ActivityListRequest{} }}

func (m *Activity_ActivityListRequest) ReleasePool() {
	m.Reset()
	poolActivity_ActivityListRequest.Put(m)
	m = nil
}

var poolActivity_ActivityListResponse = &sync.Pool{New: func() interface{} { return &Activity_ActivityListResponse{} }}

func (m *Activity_ActivityListResponse) ReleasePool() {
	m.Reset()
	poolActivity_ActivityListResponse.Put(m)
	m = nil
}

var poolActivity_ActivityThreeDayInfoRequest = &sync.Pool{New: func() interface{} { return &Activity_ActivityThreeDayInfoRequest{} }}

func (m *Activity_ActivityThreeDayInfoRequest) ReleasePool() {
	m.Reset()
	poolActivity_ActivityThreeDayInfoRequest.Put(m)
	m = nil
}

var poolActivity_ActivityThreeDayInfoResponse = &sync.Pool{New: func() interface{} { return &Activity_ActivityThreeDayInfoResponse{} }}

func (m *Activity_ActivityThreeDayInfoResponse) ReleasePool() {
	m.Reset()
	poolActivity_ActivityThreeDayInfoResponse.Put(m)
	m = nil
}

var poolActivity_ActivityThreeDayGetRewardRequest = &sync.Pool{New: func() interface{} { return &Activity_ActivityThreeDayGetRewardRequest{} }}

func (m *Activity_ActivityThreeDayGetRewardRequest) ReleasePool() {
	m.Reset()
	poolActivity_ActivityThreeDayGetRewardRequest.Put(m)
	m = nil
}

var poolActivity_ActivityThreeDayGetRewardResponse = &sync.Pool{New: func() interface{} { return &Activity_ActivityThreeDayGetRewardResponse{} }}

func (m *Activity_ActivityThreeDayGetRewardResponse) ReleasePool() {
	m.Reset()
	poolActivity_ActivityThreeDayGetRewardResponse.Put(m)
	m = nil
}

var poolActivity_DailySaleInfoRequest = &sync.Pool{New: func() interface{} { return &Activity_DailySaleInfoRequest{} }}

func (m *Activity_DailySaleInfoRequest) ReleasePool() {
	m.Reset()
	poolActivity_DailySaleInfoRequest.Put(m)
	m = nil
}

var poolActivity_DailySaleInfoResponse = &sync.Pool{New: func() interface{} { return &Activity_DailySaleInfoResponse{} }}

func (m *Activity_DailySaleInfoResponse) ReleasePool() {
	m.Reset()
	poolActivity_DailySaleInfoResponse.Put(m)
	m = nil
}

var poolActivity_DailySaleBuyRequest = &sync.Pool{New: func() interface{} { return &Activity_DailySaleBuyRequest{} }}

func (m *Activity_DailySaleBuyRequest) ReleasePool() {
	m.Reset()
	poolActivity_DailySaleBuyRequest.Put(m)
	m = nil
}

var poolActivity_DailySaleBuyResponse = &sync.Pool{New: func() interface{} { return &Activity_DailySaleBuyResponse{} }}

func (m *Activity_DailySaleBuyResponse) ReleasePool() {
	m.Reset()
	poolActivity_DailySaleBuyResponse.Put(m)
	m = nil
}

var poolActivity_GetLimitTimePackagesRequest = &sync.Pool{New: func() interface{} { return &Activity_GetLimitTimePackagesRequest{} }}

func (m *Activity_GetLimitTimePackagesRequest) ReleasePool() {
	m.Reset()
	poolActivity_GetLimitTimePackagesRequest.Put(m)
	m = nil
}

var poolActivity_GetLimitTimePackagesResponse = &sync.Pool{New: func() interface{} { return &Activity_GetLimitTimePackagesResponse{} }}

func (m *Activity_GetLimitTimePackagesResponse) ReleasePool() {
	m.Reset()
	poolActivity_GetLimitTimePackagesResponse.Put(m)
	m = nil
}

var poolActivity_LevelGrowthFundDataRequest = &sync.Pool{New: func() interface{} { return &Activity_LevelGrowthFundDataRequest{} }}

func (m *Activity_LevelGrowthFundDataRequest) ReleasePool() {
	m.Reset()
	poolActivity_LevelGrowthFundDataRequest.Put(m)
	m = nil
}

var poolActivity_LevelGrowthFundDataResponse = &sync.Pool{New: func() interface{} { return &Activity_LevelGrowthFundDataResponse{} }}

func (m *Activity_LevelGrowthFundDataResponse) ReleasePool() {
	m.Reset()
	poolActivity_LevelGrowthFundDataResponse.Put(m)
	m = nil
}

var poolActivity_LevelGrowthFundGetRewardRequest = &sync.Pool{New: func() interface{} { return &Activity_LevelGrowthFundGetRewardRequest{} }}

func (m *Activity_LevelGrowthFundGetRewardRequest) ReleasePool() {
	m.Reset()
	poolActivity_LevelGrowthFundGetRewardRequest.Put(m)
	m = nil
}

var poolActivity_LevelGrowthFundGetRewardResponse = &sync.Pool{New: func() interface{} { return &Activity_LevelGrowthFundGetRewardResponse{} }}

func (m *Activity_LevelGrowthFundGetRewardResponse) ReleasePool() {
	m.Reset()
	poolActivity_LevelGrowthFundGetRewardResponse.Put(m)
	m = nil
}

var poolActivity_AccRechargeDataRequest = &sync.Pool{New: func() interface{} { return &Activity_AccRechargeDataRequest{} }}

func (m *Activity_AccRechargeDataRequest) ReleasePool() {
	m.Reset()
	poolActivity_AccRechargeDataRequest.Put(m)
	m = nil
}

var poolActivity_AccRechargeDataResponse = &sync.Pool{New: func() interface{} { return &Activity_AccRechargeDataResponse{} }}

func (m *Activity_AccRechargeDataResponse) ReleasePool() {
	m.Reset()
	poolActivity_AccRechargeDataResponse.Put(m)
	m = nil
}

var poolActivity_AccRechargeDrawRequest = &sync.Pool{New: func() interface{} { return &Activity_AccRechargeDrawRequest{} }}

func (m *Activity_AccRechargeDrawRequest) ReleasePool() {
	m.Reset()
	poolActivity_AccRechargeDrawRequest.Put(m)
	m = nil
}

var poolActivity_AccRechargeDrawResponse = &sync.Pool{New: func() interface{} { return &Activity_AccRechargeDrawResponse{} }}

func (m *Activity_AccRechargeDrawResponse) ReleasePool() {
	m.Reset()
	poolActivity_AccRechargeDrawResponse.Put(m)
	m = nil
}

var poolActivity_StellargemShopDataRequest = &sync.Pool{New: func() interface{} { return &Activity_StellargemShopDataRequest{} }}

func (m *Activity_StellargemShopDataRequest) ReleasePool() {
	m.Reset()
	poolActivity_StellargemShopDataRequest.Put(m)
	m = nil
}

var poolActivity_StellargemShopDataResponse = &sync.Pool{New: func() interface{} { return &Activity_StellargemShopDataResponse{} }}

func (m *Activity_StellargemShopDataResponse) ReleasePool() {
	m.Reset()
	poolActivity_StellargemShopDataResponse.Put(m)
	m = nil
}

var poolActivity_StellargemShopBuyRequest = &sync.Pool{New: func() interface{} { return &Activity_StellargemShopBuyRequest{} }}

func (m *Activity_StellargemShopBuyRequest) ReleasePool() {
	m.Reset()
	poolActivity_StellargemShopBuyRequest.Put(m)
	m = nil
}

var poolActivity_StellargemShopBuyResponse = &sync.Pool{New: func() interface{} { return &Activity_StellargemShopBuyResponse{} }}

func (m *Activity_StellargemShopBuyResponse) ReleasePool() {
	m.Reset()
	poolActivity_StellargemShopBuyResponse.Put(m)
	m = nil
}

var poolActivity_WeeklySaleInfoRequest = &sync.Pool{New: func() interface{} { return &Activity_WeeklySaleInfoRequest{} }}

func (m *Activity_WeeklySaleInfoRequest) ReleasePool() {
	m.Reset()
	poolActivity_WeeklySaleInfoRequest.Put(m)
	m = nil
}

var poolActivity_WeeklySaleInfoResponse = &sync.Pool{New: func() interface{} { return &Activity_WeeklySaleInfoResponse{} }}

func (m *Activity_WeeklySaleInfoResponse) ReleasePool() {
	m.Reset()
	poolActivity_WeeklySaleInfoResponse.Put(m)
	m = nil
}

var poolActivity_WeeklySaleBuyRequest = &sync.Pool{New: func() interface{} { return &Activity_WeeklySaleBuyRequest{} }}

func (m *Activity_WeeklySaleBuyRequest) ReleasePool() {
	m.Reset()
	poolActivity_WeeklySaleBuyRequest.Put(m)
	m = nil
}

var poolActivity_WeeklySaleBuyResponse = &sync.Pool{New: func() interface{} { return &Activity_WeeklySaleBuyResponse{} }}

func (m *Activity_WeeklySaleBuyResponse) ReleasePool() {
	m.Reset()
	poolActivity_WeeklySaleBuyResponse.Put(m)
	m = nil
}

var poolActivity_PassesInfoRequest = &sync.Pool{New: func() interface{} { return &Activity_PassesInfoRequest{} }}

func (m *Activity_PassesInfoRequest) ReleasePool() {
	m.Reset()
	poolActivity_PassesInfoRequest.Put(m)
	m = nil
}

var poolActivity_PassesInfoResponse = &sync.Pool{New: func() interface{} { return &Activity_PassesInfoResponse{} }}

func (m *Activity_PassesInfoResponse) ReleasePool() {
	m.Reset()
	poolActivity_PassesInfoResponse.Put(m)
	m = nil
}

var poolActivity_UnlockPassesRequest = &sync.Pool{New: func() interface{} { return &Activity_UnlockPassesRequest{} }}

func (m *Activity_UnlockPassesRequest) ReleasePool() {
	m.Reset()
	poolActivity_UnlockPassesRequest.Put(m)
	m = nil
}

var poolActivity_UnlockPassesResponse = &sync.Pool{New: func() interface{} { return &Activity_UnlockPassesResponse{} }}

func (m *Activity_UnlockPassesResponse) ReleasePool() {
	m.Reset()
	poolActivity_UnlockPassesResponse.Put(m)
	m = nil
}

var poolActivity_DrawPassesRewardRequest = &sync.Pool{New: func() interface{} { return &Activity_DrawPassesRewardRequest{} }}

func (m *Activity_DrawPassesRewardRequest) ReleasePool() {
	m.Reset()
	poolActivity_DrawPassesRewardRequest.Put(m)
	m = nil
}

var poolActivity_DrawPassesRewardResponse = &sync.Pool{New: func() interface{} { return &Activity_DrawPassesRewardResponse{} }}

func (m *Activity_DrawPassesRewardResponse) ReleasePool() {
	m.Reset()
	poolActivity_DrawPassesRewardResponse.Put(m)
	m = nil
}

var poolActivity_ZeroBuyInfoRequest = &sync.Pool{New: func() interface{} { return &Activity_ZeroBuyInfoRequest{} }}

func (m *Activity_ZeroBuyInfoRequest) ReleasePool() {
	m.Reset()
	poolActivity_ZeroBuyInfoRequest.Put(m)
	m = nil
}

var poolActivity_ZeroBuyInfoResponse = &sync.Pool{New: func() interface{} { return &Activity_ZeroBuyInfoResponse{} }}

func (m *Activity_ZeroBuyInfoResponse) ReleasePool() {
	m.Reset()
	poolActivity_ZeroBuyInfoResponse.Put(m)
	m = nil
}

var poolActivity_DrawZeroBuyRequest = &sync.Pool{New: func() interface{} { return &Activity_DrawZeroBuyRequest{} }}

func (m *Activity_DrawZeroBuyRequest) ReleasePool() {
	m.Reset()
	poolActivity_DrawZeroBuyRequest.Put(m)
	m = nil
}

var poolActivity_DrawZeroBuyResponse = &sync.Pool{New: func() interface{} { return &Activity_DrawZeroBuyResponse{} }}

func (m *Activity_DrawZeroBuyResponse) ReleasePool() {
	m.Reset()
	poolActivity_DrawZeroBuyResponse.Put(m)
	m = nil
}

var poolActivity_ZeroBuyDrawNextDayRequest = &sync.Pool{New: func() interface{} { return &Activity_ZeroBuyDrawNextDayRequest{} }}

func (m *Activity_ZeroBuyDrawNextDayRequest) ReleasePool() {
	m.Reset()
	poolActivity_ZeroBuyDrawNextDayRequest.Put(m)
	m = nil
}

var poolActivity_ZeroBuyDrawNextDayResponse = &sync.Pool{New: func() interface{} { return &Activity_ZeroBuyDrawNextDayResponse{} }}

func (m *Activity_ZeroBuyDrawNextDayResponse) ReleasePool() {
	m.Reset()
	poolActivity_ZeroBuyDrawNextDayResponse.Put(m)
	m = nil
}

var poolActivity_ActivityStartedPush = &sync.Pool{New: func() interface{} { return &Activity_ActivityStartedPush{} }}

func (m *Activity_ActivityStartedPush) ReleasePool() {
	m.Reset()
	poolActivity_ActivityStartedPush.Put(m)
	m = nil
}

var poolActivity_ActivityEndedPush = &sync.Pool{New: func() interface{} { return &Activity_ActivityEndedPush{} }}

func (m *Activity_ActivityEndedPush) ReleasePool() {
	m.Reset()
	poolActivity_ActivityEndedPush.Put(m)
	m = nil
}

var poolActivity_LimitTimePackagePush = &sync.Pool{New: func() interface{} { return &Activity_LimitTimePackagePush{} }}

func (m *Activity_LimitTimePackagePush) ReleasePool() {
	m.Reset()
	poolActivity_LimitTimePackagePush.Put(m)
	m = nil
}

var poolActivity_BuyLimitTimePackagePush = &sync.Pool{New: func() interface{} { return &Activity_BuyLimitTimePackagePush{} }}

func (m *Activity_BuyLimitTimePackagePush) ReleasePool() {
	m.Reset()
	poolActivity_BuyLimitTimePackagePush.Put(m)
	m = nil
}

var poolActivity_BuyActivityNormalPush = &sync.Pool{New: func() interface{} { return &Activity_BuyActivityNormalPush{} }}

func (m *Activity_BuyActivityNormalPush) ReleasePool() {
	m.Reset()
	poolActivity_BuyActivityNormalPush.Put(m)
	m = nil
}

var poolActivity_DailySaleUpdatePush = &sync.Pool{New: func() interface{} { return &Activity_DailySaleUpdatePush{} }}

func (m *Activity_DailySaleUpdatePush) ReleasePool() {
	m.Reset()
	poolActivity_DailySaleUpdatePush.Put(m)
	m = nil
}

var poolActivity_WeeklySaleUpdatePush = &sync.Pool{New: func() interface{} { return &Activity_WeeklySaleUpdatePush{} }}

func (m *Activity_WeeklySaleUpdatePush) ReleasePool() {
	m.Reset()
	poolActivity_WeeklySaleUpdatePush.Put(m)
	m = nil
}

var poolActivity_UnlockAdvancePassesPush = &sync.Pool{New: func() interface{} { return &Activity_UnlockAdvancePassesPush{} }}

func (m *Activity_UnlockAdvancePassesPush) ReleasePool() {
	m.Reset()
	poolActivity_UnlockAdvancePassesPush.Put(m)
	m = nil
}

var poolActivity_AddPassesExpPush = &sync.Pool{New: func() interface{} { return &Activity_AddPassesExpPush{} }}

func (m *Activity_AddPassesExpPush) ReleasePool() {
	m.Reset()
	poolActivity_AddPassesExpPush.Put(m)
	m = nil
}

var poolActivity_LevelGrowthFundBuyPush = &sync.Pool{New: func() interface{} { return &Activity_LevelGrowthFundBuyPush{} }}

func (m *Activity_LevelGrowthFundBuyPush) ReleasePool() {
	m.Reset()
	poolActivity_LevelGrowthFundBuyPush.Put(m)
	m = nil
}

var poolActivity_ZeroBuyActivePush = &sync.Pool{New: func() interface{} { return &Activity_ZeroBuyActivePush{} }}

func (m *Activity_ZeroBuyActivePush) ReleasePool() {
	m.Reset()
	poolActivity_ZeroBuyActivePush.Put(m)
	m = nil
}

var poolActivity_CheatBuyLimitTimePackagesRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatBuyLimitTimePackagesRequest{} }}

func (m *Activity_CheatBuyLimitTimePackagesRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatBuyLimitTimePackagesRequest.Put(m)
	m = nil
}

var poolActivity_CheatBuyLimitTimePackagesResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatBuyLimitTimePackagesResponse{} }}

func (m *Activity_CheatBuyLimitTimePackagesResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatBuyLimitTimePackagesResponse.Put(m)
	m = nil
}

var poolActivity_CheatBuyLevelGrowthFundRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatBuyLevelGrowthFundRequest{} }}

func (m *Activity_CheatBuyLevelGrowthFundRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatBuyLevelGrowthFundRequest.Put(m)
	m = nil
}

var poolActivity_CheatBuyLevelGrowthFundResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatBuyLevelGrowthFundResponse{} }}

func (m *Activity_CheatBuyLevelGrowthFundResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatBuyLevelGrowthFundResponse.Put(m)
	m = nil
}

var poolActivity_CheatRechargeRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatRechargeRequest{} }}

func (m *Activity_CheatRechargeRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatRechargeRequest.Put(m)
	m = nil
}

var poolActivity_CheatRechargeResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatRechargeResponse{} }}

func (m *Activity_CheatRechargeResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatRechargeResponse.Put(m)
	m = nil
}

var poolActivity_CheatClearStellargemCntRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatClearStellargemCntRequest{} }}

func (m *Activity_CheatClearStellargemCntRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatClearStellargemCntRequest.Put(m)
	m = nil
}

var poolActivity_CheatClearStellargemCntResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatClearStellargemCntResponse{} }}

func (m *Activity_CheatClearStellargemCntResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatClearStellargemCntResponse.Put(m)
	m = nil
}

var poolActivity_CheatUnlockAdvancePassesRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatUnlockAdvancePassesRequest{} }}

func (m *Activity_CheatUnlockAdvancePassesRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatUnlockAdvancePassesRequest.Put(m)
	m = nil
}

var poolActivity_CheatUnlockAdvancePassesResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatUnlockAdvancePassesResponse{} }}

func (m *Activity_CheatUnlockAdvancePassesResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatUnlockAdvancePassesResponse.Put(m)
	m = nil
}

var poolActivity_CheatAddPassesExpRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatAddPassesExpRequest{} }}

func (m *Activity_CheatAddPassesExpRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatAddPassesExpRequest.Put(m)
	m = nil
}

var poolActivity_CheatAddPassesExpResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatAddPassesExpResponse{} }}

func (m *Activity_CheatAddPassesExpResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatAddPassesExpResponse.Put(m)
	m = nil
}

var poolActivity_CheatRefreshWeeklyRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatRefreshWeeklyRequest{} }}

func (m *Activity_CheatRefreshWeeklyRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatRefreshWeeklyRequest.Put(m)
	m = nil
}

var poolActivity_CheatRefreshWeeklyResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatRefreshWeeklyResponse{} }}

func (m *Activity_CheatRefreshWeeklyResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatRefreshWeeklyResponse.Put(m)
	m = nil
}

var poolActivity_CheatClearZeroBuyRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatClearZeroBuyRequest{} }}

func (m *Activity_CheatClearZeroBuyRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatClearZeroBuyRequest.Put(m)
	m = nil
}

var poolActivity_CheatClearZeroBuyResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatClearZeroBuyResponse{} }}

func (m *Activity_CheatClearZeroBuyResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatClearZeroBuyResponse.Put(m)
	m = nil
}

var poolActivity_CheatZeroBuyAheadOneDayRequest = &sync.Pool{New: func() interface{} { return &Activity_CheatZeroBuyAheadOneDayRequest{} }}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) ReleasePool() {
	m.Reset()
	poolActivity_CheatZeroBuyAheadOneDayRequest.Put(m)
	m = nil
}

var poolActivity_CheatZeroBuyAheadOneDayResponse = &sync.Pool{New: func() interface{} { return &Activity_CheatZeroBuyAheadOneDayResponse{} }}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) ReleasePool() {
	m.Reset()
	poolActivity_CheatZeroBuyAheadOneDayResponse.Put(m)
	m = nil
}
func (x ActivityErrorCode) String() string {
	s, ok := ActivityErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Activity) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity)
	if !ok {
		that2, ok := that.(Activity)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_ActivityListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityListRequest)
	if !ok {
		that2, ok := that.(Activity_ActivityListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_ActivityListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityListResponse)
	if !ok {
		that2, ok := that.(Activity_ActivityListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if !this.List[i].Equal(that1.List[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_ActivityThreeDayInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityThreeDayInfoRequest)
	if !ok {
		that2, ok := that.(Activity_ActivityThreeDayInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_ActivityThreeDayInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityThreeDayInfoResponse)
	if !ok {
		that2, ok := that.(Activity_ActivityThreeDayInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LoginDay != that1.LoginDay {
		return false
	}
	if len(this.Receive) != len(that1.Receive) {
		return false
	}
	for i := range this.Receive {
		if this.Receive[i] != that1.Receive[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	if this.Recharge != that1.Recharge {
		return false
	}
	return true
}
func (this *Activity_ActivityThreeDayGetRewardRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityThreeDayGetRewardRequest)
	if !ok {
		that2, ok := that.(Activity_ActivityThreeDayGetRewardRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Day != that1.Day {
		return false
	}
	return true
}
func (this *Activity_ActivityThreeDayGetRewardResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityThreeDayGetRewardResponse)
	if !ok {
		that2, ok := that.(Activity_ActivityThreeDayGetRewardResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Reward) != len(that1.Reward) {
		return false
	}
	for i := range this.Reward {
		if this.Reward[i] != that1.Reward[i] {
			return false
		}
	}
	return true
}
func (this *Activity_DailySaleInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DailySaleInfoRequest)
	if !ok {
		that2, ok := that.(Activity_DailySaleInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_DailySaleInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DailySaleInfoResponse)
	if !ok {
		that2, ok := that.(Activity_DailySaleInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.BuyTimes) != len(that1.BuyTimes) {
		return false
	}
	for i := range this.BuyTimes {
		if this.BuyTimes[i] != that1.BuyTimes[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_DailySaleBuyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DailySaleBuyRequest)
	if !ok {
		that2, ok := that.(Activity_DailySaleBuyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Idx != that1.Idx {
		return false
	}
	return true
}
func (this *Activity_DailySaleBuyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DailySaleBuyResponse)
	if !ok {
		that2, ok := that.(Activity_DailySaleBuyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_GetLimitTimePackagesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_GetLimitTimePackagesRequest)
	if !ok {
		that2, ok := that.(Activity_GetLimitTimePackagesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_GetLimitTimePackagesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_GetLimitTimePackagesResponse)
	if !ok {
		that2, ok := that.(Activity_GetLimitTimePackagesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Packages) != len(that1.Packages) {
		return false
	}
	for i := range this.Packages {
		if !this.Packages[i].Equal(that1.Packages[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_LevelGrowthFundDataRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_LevelGrowthFundDataRequest)
	if !ok {
		that2, ok := that.(Activity_LevelGrowthFundDataRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_LevelGrowthFundDataResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_LevelGrowthFundDataResponse)
	if !ok {
		that2, ok := that.(Activity_LevelGrowthFundDataResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Buy != that1.Buy {
		return false
	}
	if len(this.Info) != len(that1.Info) {
		return false
	}
	for i := range this.Info {
		if !this.Info[i].Equal(that1.Info[i]) {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_LevelGrowthFundGetRewardRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_LevelGrowthFundGetRewardRequest)
	if !ok {
		that2, ok := that.(Activity_LevelGrowthFundGetRewardRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *Activity_LevelGrowthFundGetRewardResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_LevelGrowthFundGetRewardResponse)
	if !ok {
		that2, ok := that.(Activity_LevelGrowthFundGetRewardResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Info) != len(that1.Info) {
		return false
	}
	for i := range this.Info {
		if !this.Info[i].Equal(that1.Info[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_AccRechargeDataRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_AccRechargeDataRequest)
	if !ok {
		that2, ok := that.(Activity_AccRechargeDataRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_AccRechargeDataResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_AccRechargeDataResponse)
	if !ok {
		that2, ok := that.(Activity_AccRechargeDataResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.TotalRecharge != that1.TotalRecharge {
		return false
	}
	if len(this.DrawList) != len(that1.DrawList) {
		return false
	}
	for i := range this.DrawList {
		if this.DrawList[i] != that1.DrawList[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_AccRechargeDrawRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_AccRechargeDrawRequest)
	if !ok {
		that2, ok := that.(Activity_AccRechargeDrawRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Idx != that1.Idx {
		return false
	}
	return true
}
func (this *Activity_AccRechargeDrawResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_AccRechargeDrawResponse)
	if !ok {
		that2, ok := that.(Activity_AccRechargeDrawResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_StellargemShopDataRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_StellargemShopDataRequest)
	if !ok {
		that2, ok := that.(Activity_StellargemShopDataRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_StellargemShopDataResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_StellargemShopDataResponse)
	if !ok {
		that2, ok := that.(Activity_StellargemShopDataResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.IsDoubleOpen != that1.IsDoubleOpen {
		return false
	}
	if len(this.BuyCnt) != len(that1.BuyCnt) {
		return false
	}
	for i := range this.BuyCnt {
		if this.BuyCnt[i] != that1.BuyCnt[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_StellargemShopBuyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_StellargemShopBuyRequest)
	if !ok {
		that2, ok := that.(Activity_StellargemShopBuyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Idx != that1.Idx {
		return false
	}
	return true
}
func (this *Activity_StellargemShopBuyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_StellargemShopBuyResponse)
	if !ok {
		that2, ok := that.(Activity_StellargemShopBuyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_WeeklySaleInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_WeeklySaleInfoRequest)
	if !ok {
		that2, ok := that.(Activity_WeeklySaleInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_WeeklySaleInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_WeeklySaleInfoResponse)
	if !ok {
		that2, ok := that.(Activity_WeeklySaleInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.BuyTimes) != len(that1.BuyTimes) {
		return false
	}
	for i := range this.BuyTimes {
		if this.BuyTimes[i] != that1.BuyTimes[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	if this.NxtRefreshAt != that1.NxtRefreshAt {
		return false
	}
	return true
}
func (this *Activity_WeeklySaleBuyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_WeeklySaleBuyRequest)
	if !ok {
		that2, ok := that.(Activity_WeeklySaleBuyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Idx != that1.Idx {
		return false
	}
	return true
}
func (this *Activity_WeeklySaleBuyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_WeeklySaleBuyResponse)
	if !ok {
		that2, ok := that.(Activity_WeeklySaleBuyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_PassesInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_PassesInfoRequest)
	if !ok {
		that2, ok := that.(Activity_PassesInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_PassesInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_PassesInfoResponse)
	if !ok {
		that2, ok := that.(Activity_PassesInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Passes.Equal(that1.Passes) {
		return false
	}
	return true
}
func (this *Activity_UnlockPassesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_UnlockPassesRequest)
	if !ok {
		that2, ok := that.(Activity_UnlockPassesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_UnlockPassesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_UnlockPassesResponse)
	if !ok {
		that2, ok := that.(Activity_UnlockPassesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	return true
}
func (this *Activity_DrawPassesRewardRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DrawPassesRewardRequest)
	if !ok {
		that2, ok := that.(Activity_DrawPassesRewardRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Lv != that1.Lv {
		return false
	}
	if this.IsAll != that1.IsAll {
		return false
	}
	return true
}
func (this *Activity_DrawPassesRewardResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DrawPassesRewardResponse)
	if !ok {
		that2, ok := that.(Activity_DrawPassesRewardResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *Activity_ZeroBuyInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ZeroBuyInfoRequest)
	if !ok {
		that2, ok := that.(Activity_ZeroBuyInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_ZeroBuyInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ZeroBuyInfoResponse)
	if !ok {
		that2, ok := that.(Activity_ZeroBuyInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	if this.StartAt != that1.StartAt {
		return false
	}
	if this.EndAt != that1.EndAt {
		return false
	}
	if len(this.EachDay) != len(that1.EachDay) {
		return false
	}
	for i := range this.EachDay {
		if !this.EachDay[i].Equal(that1.EachDay[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_DrawZeroBuyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DrawZeroBuyRequest)
	if !ok {
		that2, ok := that.(Activity_DrawZeroBuyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Day != that1.Day {
		return false
	}
	return true
}
func (this *Activity_DrawZeroBuyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DrawZeroBuyResponse)
	if !ok {
		that2, ok := that.(Activity_DrawZeroBuyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.EachDay) != len(that1.EachDay) {
		return false
	}
	for i := range this.EachDay {
		if !this.EachDay[i].Equal(that1.EachDay[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_ZeroBuyDrawNextDayRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ZeroBuyDrawNextDayRequest)
	if !ok {
		that2, ok := that.(Activity_ZeroBuyDrawNextDayRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Day != that1.Day {
		return false
	}
	return true
}
func (this *Activity_ZeroBuyDrawNextDayResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ZeroBuyDrawNextDayResponse)
	if !ok {
		that2, ok := that.(Activity_ZeroBuyDrawNextDayResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.EachDay) != len(that1.EachDay) {
		return false
	}
	for i := range this.EachDay {
		if !this.EachDay[i].Equal(that1.EachDay[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_ActivityStartedPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityStartedPush)
	if !ok {
		that2, ok := that.(Activity_ActivityStartedPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Activity.Equal(that1.Activity) {
		return false
	}
	return true
}
func (this *Activity_ActivityEndedPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ActivityEndedPush)
	if !ok {
		that2, ok := that.(Activity_ActivityEndedPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Activity.Equal(that1.Activity) {
		return false
	}
	return true
}
func (this *Activity_LimitTimePackagePush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_LimitTimePackagePush)
	if !ok {
		that2, ok := that.(Activity_LimitTimePackagePush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Package.Equal(that1.Package) {
		return false
	}
	return true
}
func (this *Activity_BuyLimitTimePackagePush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_BuyLimitTimePackagePush)
	if !ok {
		that2, ok := that.(Activity_BuyLimitTimePackagePush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.BagId != that1.BagId {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if this.Items[i] != that1.Items[i] {
			return false
		}
	}
	return true
}
func (this *Activity_BuyActivityNormalPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_BuyActivityNormalPush)
	if !ok {
		that2, ok := that.(Activity_BuyActivityNormalPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.BagId != that1.BagId {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if this.Items[i] != that1.Items[i] {
			return false
		}
	}
	return true
}
func (this *Activity_DailySaleUpdatePush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_DailySaleUpdatePush)
	if !ok {
		that2, ok := that.(Activity_DailySaleUpdatePush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.BuyTimes) != len(that1.BuyTimes) {
		return false
	}
	for i := range this.BuyTimes {
		if this.BuyTimes[i] != that1.BuyTimes[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	return true
}
func (this *Activity_WeeklySaleUpdatePush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_WeeklySaleUpdatePush)
	if !ok {
		that2, ok := that.(Activity_WeeklySaleUpdatePush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.BuyTimes) != len(that1.BuyTimes) {
		return false
	}
	for i := range this.BuyTimes {
		if this.BuyTimes[i] != that1.BuyTimes[i] {
			return false
		}
	}
	if len(this.Cfg) != len(that1.Cfg) {
		return false
	}
	for i := range this.Cfg {
		if !this.Cfg[i].Equal(that1.Cfg[i]) {
			return false
		}
	}
	if this.NxtRefreshAt != that1.NxtRefreshAt {
		return false
	}
	return true
}
func (this *Activity_UnlockAdvancePassesPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_UnlockAdvancePassesPush)
	if !ok {
		that2, ok := that.(Activity_UnlockAdvancePassesPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_AddPassesExpPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_AddPassesExpPush)
	if !ok {
		that2, ok := that.(Activity_AddPassesExpPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Lv != that1.Lv {
		return false
	}
	if this.Exp != that1.Exp {
		return false
	}
	return true
}
func (this *Activity_LevelGrowthFundBuyPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_LevelGrowthFundBuyPush)
	if !ok {
		that2, ok := that.(Activity_LevelGrowthFundBuyPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Buy != that1.Buy {
		return false
	}
	return true
}
func (this *Activity_ZeroBuyActivePush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_ZeroBuyActivePush)
	if !ok {
		that2, ok := that.(Activity_ZeroBuyActivePush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatBuyLimitTimePackagesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatBuyLimitTimePackagesRequest)
	if !ok {
		that2, ok := that.(Activity_CheatBuyLimitTimePackagesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.BagIdx != that1.BagIdx {
		return false
	}
	return true
}
func (this *Activity_CheatBuyLimitTimePackagesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatBuyLimitTimePackagesResponse)
	if !ok {
		that2, ok := that.(Activity_CheatBuyLimitTimePackagesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatBuyLevelGrowthFundRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatBuyLevelGrowthFundRequest)
	if !ok {
		that2, ok := that.(Activity_CheatBuyLevelGrowthFundRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatBuyLevelGrowthFundResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatBuyLevelGrowthFundResponse)
	if !ok {
		that2, ok := that.(Activity_CheatBuyLevelGrowthFundResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatRechargeRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatRechargeRequest)
	if !ok {
		that2, ok := that.(Activity_CheatRechargeRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Amount != that1.Amount {
		return false
	}
	return true
}
func (this *Activity_CheatRechargeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatRechargeResponse)
	if !ok {
		that2, ok := that.(Activity_CheatRechargeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatClearStellargemCntRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatClearStellargemCntRequest)
	if !ok {
		that2, ok := that.(Activity_CheatClearStellargemCntRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatClearStellargemCntResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatClearStellargemCntResponse)
	if !ok {
		that2, ok := that.(Activity_CheatClearStellargemCntResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatUnlockAdvancePassesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatUnlockAdvancePassesRequest)
	if !ok {
		that2, ok := that.(Activity_CheatUnlockAdvancePassesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatUnlockAdvancePassesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatUnlockAdvancePassesResponse)
	if !ok {
		that2, ok := that.(Activity_CheatUnlockAdvancePassesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatAddPassesExpRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatAddPassesExpRequest)
	if !ok {
		that2, ok := that.(Activity_CheatAddPassesExpRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Exp != that1.Exp {
		return false
	}
	return true
}
func (this *Activity_CheatAddPassesExpResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatAddPassesExpResponse)
	if !ok {
		that2, ok := that.(Activity_CheatAddPassesExpResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatRefreshWeeklyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatRefreshWeeklyRequest)
	if !ok {
		that2, ok := that.(Activity_CheatRefreshWeeklyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatRefreshWeeklyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatRefreshWeeklyResponse)
	if !ok {
		that2, ok := that.(Activity_CheatRefreshWeeklyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatClearZeroBuyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatClearZeroBuyRequest)
	if !ok {
		that2, ok := that.(Activity_CheatClearZeroBuyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatClearZeroBuyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatClearZeroBuyResponse)
	if !ok {
		that2, ok := that.(Activity_CheatClearZeroBuyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatZeroBuyAheadOneDayRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatZeroBuyAheadOneDayRequest)
	if !ok {
		that2, ok := that.(Activity_CheatZeroBuyAheadOneDayRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Activity_CheatZeroBuyAheadOneDayResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Activity_CheatZeroBuyAheadOneDayResponse)
	if !ok {
		that2, ok := that.(Activity_CheatZeroBuyAheadOneDayResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Activity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityThreeDayInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityThreeDayInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityThreeDayInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityThreeDayInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityThreeDayInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityThreeDayInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Recharge {
		i--
		if m.Recharge {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Receive) > 0 {
		for k := range m.Receive {
			v := m.Receive[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.LoginDay != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.LoginDay))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityThreeDayGetRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityThreeDayGetRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityThreeDayGetRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Day != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Day))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityThreeDayGetRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityThreeDayGetRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityThreeDayGetRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reward) > 0 {
		for k := range m.Reward {
			v := m.Reward[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DailySaleInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DailySaleInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DailySaleInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_DailySaleInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DailySaleInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DailySaleInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.BuyTimes) > 0 {
		for k := range m.BuyTimes {
			v := m.BuyTimes[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DailySaleBuyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DailySaleBuyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DailySaleBuyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Idx != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Idx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DailySaleBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DailySaleBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DailySaleBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_GetLimitTimePackagesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_GetLimitTimePackagesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_GetLimitTimePackagesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_GetLimitTimePackagesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_GetLimitTimePackagesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_GetLimitTimePackagesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Packages) > 0 {
		for k := range m.Packages {
			v := m.Packages[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintActivity(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_LevelGrowthFundDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_LevelGrowthFundDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_LevelGrowthFundDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_LevelGrowthFundDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_LevelGrowthFundDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_LevelGrowthFundDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Info) > 0 {
		for k := range m.Info {
			v := m.Info[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintActivity(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Buy {
		i--
		if m.Buy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_LevelGrowthFundGetRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_LevelGrowthFundGetRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_LevelGrowthFundGetRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_LevelGrowthFundGetRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_LevelGrowthFundGetRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_LevelGrowthFundGetRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		for k := range m.Info {
			v := m.Info[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintActivity(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_AccRechargeDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_AccRechargeDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_AccRechargeDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_AccRechargeDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_AccRechargeDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_AccRechargeDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DrawList) > 0 {
		for k := range m.DrawList {
			v := m.DrawList[k]
			baseI := i
			i--
			if v {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.TotalRecharge != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.TotalRecharge))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_AccRechargeDrawRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_AccRechargeDrawRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_AccRechargeDrawRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Idx != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Idx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_AccRechargeDrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_AccRechargeDrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_AccRechargeDrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_StellargemShopDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_StellargemShopDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_StellargemShopDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_StellargemShopDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_StellargemShopDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_StellargemShopDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.BuyCnt) > 0 {
		for k := range m.BuyCnt {
			v := m.BuyCnt[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.IsDoubleOpen {
		i--
		if m.IsDoubleOpen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_StellargemShopBuyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_StellargemShopBuyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_StellargemShopBuyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Idx != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Idx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_StellargemShopBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_StellargemShopBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_StellargemShopBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_WeeklySaleInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_WeeklySaleInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_WeeklySaleInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_WeeklySaleInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_WeeklySaleInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_WeeklySaleInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NxtRefreshAt != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.NxtRefreshAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.BuyTimes) > 0 {
		for k := range m.BuyTimes {
			v := m.BuyTimes[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_WeeklySaleBuyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_WeeklySaleBuyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_WeeklySaleBuyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Idx != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Idx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_WeeklySaleBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_WeeklySaleBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_WeeklySaleBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_PassesInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_PassesInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_PassesInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_PassesInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_PassesInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_PassesInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Passes != nil {
		{
			size, err := m.Passes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Activity_UnlockPassesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_UnlockPassesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_UnlockPassesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_UnlockPassesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_UnlockPassesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_UnlockPassesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DrawPassesRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DrawPassesRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DrawPassesRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsAll {
		i--
		if m.IsAll {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Lv != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Lv))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DrawPassesRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DrawPassesRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DrawPassesRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ZeroBuyInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ZeroBuyInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ZeroBuyInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_ZeroBuyInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ZeroBuyInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ZeroBuyInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EachDay) > 0 {
		for iNdEx := len(m.EachDay) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.EachDay[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.EndAt != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.EndAt))
		i--
		dAtA[i] = 0x18
	}
	if m.StartAt != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.StartAt))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DrawZeroBuyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DrawZeroBuyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DrawZeroBuyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Day != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Day))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DrawZeroBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DrawZeroBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DrawZeroBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EachDay) > 0 {
		for iNdEx := len(m.EachDay) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.EachDay[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ZeroBuyDrawNextDayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ZeroBuyDrawNextDayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ZeroBuyDrawNextDayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Day != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Day))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ZeroBuyDrawNextDayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ZeroBuyDrawNextDayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ZeroBuyDrawNextDayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EachDay) > 0 {
		for iNdEx := len(m.EachDay) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.EachDay[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityStartedPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityStartedPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityStartedPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Activity != nil {
		{
			size, err := m.Activity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ActivityEndedPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ActivityEndedPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ActivityEndedPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Activity != nil {
		{
			size, err := m.Activity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Activity_LimitTimePackagePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_LimitTimePackagePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_LimitTimePackagePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Package != nil {
		{
			size, err := m.Package.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Activity_BuyLimitTimePackagePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_BuyLimitTimePackagePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_BuyLimitTimePackagePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for k := range m.Items {
			v := m.Items[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.BagId != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.BagId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_BuyActivityNormalPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_BuyActivityNormalPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_BuyActivityNormalPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for k := range m.Items {
			v := m.Items[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.BagId != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.BagId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_DailySaleUpdatePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_DailySaleUpdatePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_DailySaleUpdatePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.BuyTimes) > 0 {
		for k := range m.BuyTimes {
			v := m.BuyTimes[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_WeeklySaleUpdatePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_WeeklySaleUpdatePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_WeeklySaleUpdatePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NxtRefreshAt != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.NxtRefreshAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Cfg) > 0 {
		for iNdEx := len(m.Cfg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cfg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.BuyTimes) > 0 {
		for k := range m.BuyTimes {
			v := m.BuyTimes[k]
			baseI := i
			i = encodeVarintActivity(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivity(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivity(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Activity_UnlockAdvancePassesPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_UnlockAdvancePassesPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_UnlockAdvancePassesPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_AddPassesExpPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_AddPassesExpPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_AddPassesExpPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Exp != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x10
	}
	if m.Lv != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Lv))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_LevelGrowthFundBuyPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_LevelGrowthFundBuyPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_LevelGrowthFundBuyPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Buy {
		i--
		if m.Buy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_ZeroBuyActivePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_ZeroBuyActivePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_ZeroBuyActivePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BagIdx != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.BagIdx))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_CheatBuyLimitTimePackagesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatBuyLimitTimePackagesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatBuyLimitTimePackagesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatBuyLevelGrowthFundRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatBuyLevelGrowthFundRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatBuyLevelGrowthFundRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatBuyLevelGrowthFundResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatBuyLevelGrowthFundResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatBuyLevelGrowthFundResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatRechargeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatRechargeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatRechargeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Amount != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Amount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_CheatRechargeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatRechargeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatRechargeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatClearStellargemCntRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatClearStellargemCntRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatClearStellargemCntRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatClearStellargemCntResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatClearStellargemCntResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatClearStellargemCntResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatUnlockAdvancePassesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatUnlockAdvancePassesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatUnlockAdvancePassesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatUnlockAdvancePassesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatUnlockAdvancePassesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatUnlockAdvancePassesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatAddPassesExpRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatAddPassesExpRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatAddPassesExpRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Exp != 0 {
		i = encodeVarintActivity(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Activity_CheatAddPassesExpResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatAddPassesExpResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatAddPassesExpResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatRefreshWeeklyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatRefreshWeeklyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatRefreshWeeklyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatRefreshWeeklyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatRefreshWeeklyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatRefreshWeeklyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatClearZeroBuyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatClearZeroBuyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatClearZeroBuyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatClearZeroBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatClearZeroBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatClearZeroBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintActivity(dAtA []byte, offset int, v uint64) int {
	offset -= sovActivity(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Activity) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_ActivityListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_ActivityListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			v.JsonBytes(w)
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ActivityThreeDayInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_ActivityThreeDayInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.LoginDay != 0 {
		w.RawByte('"')
		w.RawString("login_day")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LoginDay))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("receive")
	w.RawByte('"')
	w.RawByte(':')
	if m.Receive == nil {
		w.RawString("null")
	} else if len(m.Receive) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlReceive := len(m.Receive)
		for k, v := range m.Receive {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlReceive--
			if mlReceive != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.Recharge {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("recharge")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Recharge)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ActivityThreeDayGetRewardRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Day != 0 {
		w.RawByte('"')
		w.RawString("day")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Day))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ActivityThreeDayGetRewardResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("reward")
	w.RawByte('"')
	w.RawByte(':')
	if m.Reward == nil {
		w.RawString("null")
	} else if len(m.Reward) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlReward := len(m.Reward)
		for k, v := range m.Reward {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlReward--
			if mlReward != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DailySaleInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_DailySaleInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("buy_times")
	w.RawByte('"')
	w.RawByte(':')
	if m.BuyTimes == nil {
		w.RawString("null")
	} else if len(m.BuyTimes) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlBuyTimes := len(m.BuyTimes)
		for k, v := range m.BuyTimes {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlBuyTimes--
			if mlBuyTimes != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DailySaleBuyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Idx != 0 {
		w.RawByte('"')
		w.RawString("idx")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Idx))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DailySaleBuyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_GetLimitTimePackagesRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_GetLimitTimePackagesResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("packages")
	w.RawByte('"')
	w.RawByte(':')
	if m.Packages == nil {
		w.RawString("null")
	} else if len(m.Packages) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlPackages := len(m.Packages)
		for k, v := range m.Packages {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			v.JsonBytes(w)
			mlPackages--
			if mlPackages != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_LevelGrowthFundDataRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_LevelGrowthFundDataResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Buy {
		w.RawByte('"')
		w.RawString("buy")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Buy)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	if m.Info == nil {
		w.RawString("null")
	} else if len(m.Info) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlInfo := len(m.Info)
		for k, v := range m.Info {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			v.JsonBytes(w)
			mlInfo--
			if mlInfo != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_LevelGrowthFundGetRewardRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != 0 {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_LevelGrowthFundGetRewardResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	if m.Info == nil {
		w.RawString("null")
	} else if len(m.Info) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlInfo := len(m.Info)
		for k, v := range m.Info {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			v.JsonBytes(w)
			mlInfo--
			if mlInfo != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_AccRechargeDataRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_AccRechargeDataResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.TotalRecharge != 0 {
		w.RawByte('"')
		w.RawString("total_recharge")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TotalRecharge))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("draw_list")
	w.RawByte('"')
	w.RawByte(':')
	if m.DrawList == nil {
		w.RawString("null")
	} else if len(m.DrawList) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlDrawList := len(m.DrawList)
		for k, v := range m.DrawList {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Bool(v)
			mlDrawList--
			if mlDrawList != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_AccRechargeDrawRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Idx != 0 {
		w.RawByte('"')
		w.RawString("idx")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Idx))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_AccRechargeDrawResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_StellargemShopDataRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_StellargemShopDataResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.IsDoubleOpen {
		w.RawByte('"')
		w.RawString("is_double_open")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.IsDoubleOpen)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("buy_cnt")
	w.RawByte('"')
	w.RawByte(':')
	if m.BuyCnt == nil {
		w.RawString("null")
	} else if len(m.BuyCnt) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlBuyCnt := len(m.BuyCnt)
		for k, v := range m.BuyCnt {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlBuyCnt--
			if mlBuyCnt != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_StellargemShopBuyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Idx != 0 {
		w.RawByte('"')
		w.RawString("idx")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Idx))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_StellargemShopBuyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_WeeklySaleInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_WeeklySaleInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("buy_times")
	w.RawByte('"')
	w.RawByte(':')
	if m.BuyTimes == nil {
		w.RawString("null")
	} else if len(m.BuyTimes) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlBuyTimes := len(m.BuyTimes)
		for k, v := range m.BuyTimes {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlBuyTimes--
			if mlBuyTimes != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.NxtRefreshAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("nxt_refresh_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.NxtRefreshAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_WeeklySaleBuyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Idx != 0 {
		w.RawByte('"')
		w.RawString("idx")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Idx))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_WeeklySaleBuyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_PassesInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_PassesInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("passes")
	w.RawByte('"')
	w.RawByte(':')
	m.Passes.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_UnlockPassesRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_UnlockPassesResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Status != 0 {
		w.RawByte('"')
		w.RawString("status")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Status))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DrawPassesRewardRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Lv != 0 {
		w.RawByte('"')
		w.RawString("lv")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lv))
		needWriteComma = true
	}
	if m.IsAll {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("is_all")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.IsAll)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DrawPassesRewardResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ZeroBuyInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_ZeroBuyInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.StartAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("start_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.StartAt))
		needWriteComma = true
	}
	if m.EndAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("end_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.EndAt))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("each_day")
	w.RawByte('"')
	w.RawByte(':')
	if m.EachDay == nil {
		w.RawString("null")
	} else if len(m.EachDay) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.EachDay {
			v.JsonBytes(w)
			if i != len(m.EachDay)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DrawZeroBuyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Day != 0 {
		w.RawByte('"')
		w.RawString("day")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Day))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DrawZeroBuyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("each_day")
	w.RawByte('"')
	w.RawByte(':')
	if m.EachDay == nil {
		w.RawString("null")
	} else if len(m.EachDay) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.EachDay {
			v.JsonBytes(w)
			if i != len(m.EachDay)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ZeroBuyDrawNextDayRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Day != 0 {
		w.RawByte('"')
		w.RawString("day")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Day))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ZeroBuyDrawNextDayResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("each_day")
	w.RawByte('"')
	w.RawByte(':')
	if m.EachDay == nil {
		w.RawString("null")
	} else if len(m.EachDay) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.EachDay {
			v.JsonBytes(w)
			if i != len(m.EachDay)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ActivityStartedPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("activity")
	w.RawByte('"')
	w.RawByte(':')
	m.Activity.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ActivityEndedPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("activity")
	w.RawByte('"')
	w.RawByte(':')
	m.Activity.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_LimitTimePackagePush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("package")
	w.RawByte('"')
	w.RawByte(':')
	m.Package.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_BuyLimitTimePackagePush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != 0 {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	if m.BagId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("bag_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BagId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlItems := len(m.Items)
		for k, v := range m.Items {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlItems--
			if mlItems != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_BuyActivityNormalPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != 0 {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	if m.BagId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("bag_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BagId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlItems := len(m.Items)
		for k, v := range m.Items {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlItems--
			if mlItems != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_DailySaleUpdatePush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("buy_times")
	w.RawByte('"')
	w.RawByte(':')
	if m.BuyTimes == nil {
		w.RawString("null")
	} else if len(m.BuyTimes) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlBuyTimes := len(m.BuyTimes)
		for k, v := range m.BuyTimes {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlBuyTimes--
			if mlBuyTimes != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_WeeklySaleUpdatePush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("buy_times")
	w.RawByte('"')
	w.RawByte(':')
	if m.BuyTimes == nil {
		w.RawString("null")
	} else if len(m.BuyTimes) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlBuyTimes := len(m.BuyTimes)
		for k, v := range m.BuyTimes {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlBuyTimes--
			if mlBuyTimes != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("cfg")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cfg == nil {
		w.RawString("null")
	} else if len(m.Cfg) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cfg {
			v.JsonBytes(w)
			if i != len(m.Cfg)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.NxtRefreshAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("nxt_refresh_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.NxtRefreshAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_UnlockAdvancePassesPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_AddPassesExpPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Lv != 0 {
		w.RawByte('"')
		w.RawString("lv")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lv))
		needWriteComma = true
	}
	if m.Exp != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("exp")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Exp))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_LevelGrowthFundBuyPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Buy {
		w.RawByte('"')
		w.RawString("buy")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Buy)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_ZeroBuyActivePush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatBuyLimitTimePackagesRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != 0 {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	if m.BagIdx != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("bag_idx")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BagIdx))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_CheatBuyLimitTimePackagesResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatBuyLevelGrowthFundRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatBuyLevelGrowthFundResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatRechargeRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Amount != 0 {
		w.RawByte('"')
		w.RawString("amount")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Amount))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_CheatRechargeResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatClearStellargemCntRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatClearStellargemCntResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatUnlockAdvancePassesRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatUnlockAdvancePassesResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatAddPassesExpRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Exp != 0 {
		w.RawByte('"')
		w.RawString("exp")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Exp))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Activity_CheatAddPassesExpResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatRefreshWeeklyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatRefreshWeeklyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatClearZeroBuyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatClearZeroBuyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Activity) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity) GoString() string {
	return m.String()
}

func (m *Activity_ActivityListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityListRequest) GoString() string {
	return m.String()
}

func (m *Activity_ActivityListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityListResponse) GoString() string {
	return m.String()
}

func (m *Activity_ActivityThreeDayInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityThreeDayInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityThreeDayInfoRequest) GoString() string {
	return m.String()
}

func (m *Activity_ActivityThreeDayInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityThreeDayInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityThreeDayInfoResponse) GoString() string {
	return m.String()
}

func (m *Activity_ActivityThreeDayGetRewardRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityThreeDayGetRewardRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityThreeDayGetRewardRequest) GoString() string {
	return m.String()
}

func (m *Activity_ActivityThreeDayGetRewardResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityThreeDayGetRewardResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityThreeDayGetRewardResponse) GoString() string {
	return m.String()
}

func (m *Activity_DailySaleInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DailySaleInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DailySaleInfoRequest) GoString() string {
	return m.String()
}

func (m *Activity_DailySaleInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DailySaleInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DailySaleInfoResponse) GoString() string {
	return m.String()
}

func (m *Activity_DailySaleBuyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DailySaleBuyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DailySaleBuyRequest) GoString() string {
	return m.String()
}

func (m *Activity_DailySaleBuyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DailySaleBuyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DailySaleBuyResponse) GoString() string {
	return m.String()
}

func (m *Activity_GetLimitTimePackagesRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_GetLimitTimePackagesRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_GetLimitTimePackagesRequest) GoString() string {
	return m.String()
}

func (m *Activity_GetLimitTimePackagesResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_GetLimitTimePackagesResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_GetLimitTimePackagesResponse) GoString() string {
	return m.String()
}

func (m *Activity_LevelGrowthFundDataRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_LevelGrowthFundDataRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_LevelGrowthFundDataRequest) GoString() string {
	return m.String()
}

func (m *Activity_LevelGrowthFundDataResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_LevelGrowthFundDataResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_LevelGrowthFundDataResponse) GoString() string {
	return m.String()
}

func (m *Activity_LevelGrowthFundGetRewardRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_LevelGrowthFundGetRewardRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_LevelGrowthFundGetRewardRequest) GoString() string {
	return m.String()
}

func (m *Activity_LevelGrowthFundGetRewardResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_LevelGrowthFundGetRewardResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_LevelGrowthFundGetRewardResponse) GoString() string {
	return m.String()
}

func (m *Activity_AccRechargeDataRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_AccRechargeDataRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_AccRechargeDataRequest) GoString() string {
	return m.String()
}

func (m *Activity_AccRechargeDataResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_AccRechargeDataResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_AccRechargeDataResponse) GoString() string {
	return m.String()
}

func (m *Activity_AccRechargeDrawRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_AccRechargeDrawRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_AccRechargeDrawRequest) GoString() string {
	return m.String()
}

func (m *Activity_AccRechargeDrawResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_AccRechargeDrawResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_AccRechargeDrawResponse) GoString() string {
	return m.String()
}

func (m *Activity_StellargemShopDataRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_StellargemShopDataRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_StellargemShopDataRequest) GoString() string {
	return m.String()
}

func (m *Activity_StellargemShopDataResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_StellargemShopDataResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_StellargemShopDataResponse) GoString() string {
	return m.String()
}

func (m *Activity_StellargemShopBuyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_StellargemShopBuyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_StellargemShopBuyRequest) GoString() string {
	return m.String()
}

func (m *Activity_StellargemShopBuyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_StellargemShopBuyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_StellargemShopBuyResponse) GoString() string {
	return m.String()
}

func (m *Activity_WeeklySaleInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_WeeklySaleInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_WeeklySaleInfoRequest) GoString() string {
	return m.String()
}

func (m *Activity_WeeklySaleInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_WeeklySaleInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_WeeklySaleInfoResponse) GoString() string {
	return m.String()
}

func (m *Activity_WeeklySaleBuyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_WeeklySaleBuyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_WeeklySaleBuyRequest) GoString() string {
	return m.String()
}

func (m *Activity_WeeklySaleBuyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_WeeklySaleBuyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_WeeklySaleBuyResponse) GoString() string {
	return m.String()
}

func (m *Activity_PassesInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_PassesInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_PassesInfoRequest) GoString() string {
	return m.String()
}

func (m *Activity_PassesInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_PassesInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_PassesInfoResponse) GoString() string {
	return m.String()
}

func (m *Activity_UnlockPassesRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_UnlockPassesRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_UnlockPassesRequest) GoString() string {
	return m.String()
}

func (m *Activity_UnlockPassesResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_UnlockPassesResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_UnlockPassesResponse) GoString() string {
	return m.String()
}

func (m *Activity_DrawPassesRewardRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DrawPassesRewardRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DrawPassesRewardRequest) GoString() string {
	return m.String()
}

func (m *Activity_DrawPassesRewardResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DrawPassesRewardResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DrawPassesRewardResponse) GoString() string {
	return m.String()
}

func (m *Activity_ZeroBuyInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ZeroBuyInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ZeroBuyInfoRequest) GoString() string {
	return m.String()
}

func (m *Activity_ZeroBuyInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ZeroBuyInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ZeroBuyInfoResponse) GoString() string {
	return m.String()
}

func (m *Activity_DrawZeroBuyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DrawZeroBuyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DrawZeroBuyRequest) GoString() string {
	return m.String()
}

func (m *Activity_DrawZeroBuyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DrawZeroBuyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DrawZeroBuyResponse) GoString() string {
	return m.String()
}

func (m *Activity_ZeroBuyDrawNextDayRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ZeroBuyDrawNextDayRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ZeroBuyDrawNextDayRequest) GoString() string {
	return m.String()
}

func (m *Activity_ZeroBuyDrawNextDayResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ZeroBuyDrawNextDayResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ZeroBuyDrawNextDayResponse) GoString() string {
	return m.String()
}

func (m *Activity_ActivityStartedPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityStartedPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityStartedPush) GoString() string {
	return m.String()
}

func (m *Activity_ActivityEndedPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ActivityEndedPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ActivityEndedPush) GoString() string {
	return m.String()
}

func (m *Activity_LimitTimePackagePush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_LimitTimePackagePush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_LimitTimePackagePush) GoString() string {
	return m.String()
}

func (m *Activity_BuyLimitTimePackagePush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_BuyLimitTimePackagePush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_BuyLimitTimePackagePush) GoString() string {
	return m.String()
}

func (m *Activity_BuyActivityNormalPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_BuyActivityNormalPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_BuyActivityNormalPush) GoString() string {
	return m.String()
}

func (m *Activity_DailySaleUpdatePush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_DailySaleUpdatePush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_DailySaleUpdatePush) GoString() string {
	return m.String()
}

func (m *Activity_WeeklySaleUpdatePush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_WeeklySaleUpdatePush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_WeeklySaleUpdatePush) GoString() string {
	return m.String()
}

func (m *Activity_UnlockAdvancePassesPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_UnlockAdvancePassesPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_UnlockAdvancePassesPush) GoString() string {
	return m.String()
}

func (m *Activity_AddPassesExpPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_AddPassesExpPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_AddPassesExpPush) GoString() string {
	return m.String()
}

func (m *Activity_LevelGrowthFundBuyPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_LevelGrowthFundBuyPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_LevelGrowthFundBuyPush) GoString() string {
	return m.String()
}

func (m *Activity_ZeroBuyActivePush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_ZeroBuyActivePush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_ZeroBuyActivePush) GoString() string {
	return m.String()
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatBuyLimitTimePackagesResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatBuyLevelGrowthFundRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatBuyLevelGrowthFundResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatRechargeRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatRechargeRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatRechargeRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatRechargeResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatRechargeResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatRechargeResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatClearStellargemCntRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatClearStellargemCntRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatClearStellargemCntRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatClearStellargemCntResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatClearStellargemCntResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatClearStellargemCntResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatUnlockAdvancePassesRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatUnlockAdvancePassesRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatUnlockAdvancePassesRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatUnlockAdvancePassesResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatUnlockAdvancePassesResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatUnlockAdvancePassesResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatAddPassesExpRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatAddPassesExpRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatAddPassesExpRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatAddPassesExpResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatAddPassesExpResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatAddPassesExpResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatRefreshWeeklyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatRefreshWeeklyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatRefreshWeeklyRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatRefreshWeeklyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatRefreshWeeklyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatRefreshWeeklyResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatClearZeroBuyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatClearZeroBuyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatClearZeroBuyRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatClearZeroBuyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatClearZeroBuyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatClearZeroBuyResponse) GoString() string {
	return m.String()
}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) GoString() string {
	return m.String()
}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) GoString() string {
	return m.String()
}

func (m *Activity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_ActivityListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_ActivityListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_ActivityThreeDayInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_ActivityThreeDayInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LoginDay != 0 {
		n += 1 + sovActivity(uint64(m.LoginDay))
	}
	if len(m.Receive) > 0 {
		for k, v := range m.Receive {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	if m.Recharge {
		n += 2
	}
	return n
}

func (m *Activity_ActivityThreeDayGetRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Day != 0 {
		n += 1 + sovActivity(uint64(m.Day))
	}
	return n
}

func (m *Activity_ActivityThreeDayGetRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Reward) > 0 {
		for k, v := range m.Reward {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Activity_DailySaleInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_DailySaleInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuyTimes) > 0 {
		for k, v := range m.BuyTimes {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_DailySaleBuyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Idx != 0 {
		n += 1 + sovActivity(uint64(m.Idx))
	}
	return n
}

func (m *Activity_DailySaleBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_GetLimitTimePackagesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_GetLimitTimePackagesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Packages) > 0 {
		for k, v := range m.Packages {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovActivity(uint64(l))
			}
			mapEntrySize := 1 + sovActivity(uint64(k)) + l
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Activity_LevelGrowthFundDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_LevelGrowthFundDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Buy {
		n += 2
	}
	if len(m.Info) > 0 {
		for k, v := range m.Info {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovActivity(uint64(l))
			}
			mapEntrySize := 1 + sovActivity(uint64(k)) + l
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_LevelGrowthFundGetRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivity(uint64(m.Id))
	}
	return n
}

func (m *Activity_LevelGrowthFundGetRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Info) > 0 {
		for k, v := range m.Info {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovActivity(uint64(l))
			}
			mapEntrySize := 1 + sovActivity(uint64(k)) + l
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Activity_AccRechargeDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_AccRechargeDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalRecharge != 0 {
		n += 1 + sovActivity(uint64(m.TotalRecharge))
	}
	if len(m.DrawList) > 0 {
		for k, v := range m.DrawList {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + 1
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_AccRechargeDrawRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Idx != 0 {
		n += 1 + sovActivity(uint64(m.Idx))
	}
	return n
}

func (m *Activity_AccRechargeDrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_StellargemShopDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_StellargemShopDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsDoubleOpen {
		n += 2
	}
	if len(m.BuyCnt) > 0 {
		for k, v := range m.BuyCnt {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_StellargemShopBuyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Idx != 0 {
		n += 1 + sovActivity(uint64(m.Idx))
	}
	return n
}

func (m *Activity_StellargemShopBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_WeeklySaleInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_WeeklySaleInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuyTimes) > 0 {
		for k, v := range m.BuyTimes {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	if m.NxtRefreshAt != 0 {
		n += 1 + sovActivity(uint64(m.NxtRefreshAt))
	}
	return n
}

func (m *Activity_WeeklySaleBuyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Idx != 0 {
		n += 1 + sovActivity(uint64(m.Idx))
	}
	return n
}

func (m *Activity_WeeklySaleBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_PassesInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_PassesInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Passes != nil {
		l = m.Passes.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	return n
}

func (m *Activity_UnlockPassesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_UnlockPassesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovActivity(uint64(m.Status))
	}
	return n
}

func (m *Activity_DrawPassesRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lv != 0 {
		n += 1 + sovActivity(uint64(m.Lv))
	}
	if m.IsAll {
		n += 2
	}
	return n
}

func (m *Activity_DrawPassesRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Activity_ZeroBuyInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_ZeroBuyInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	if m.StartAt != 0 {
		n += 1 + sovActivity(uint64(m.StartAt))
	}
	if m.EndAt != 0 {
		n += 1 + sovActivity(uint64(m.EndAt))
	}
	if len(m.EachDay) > 0 {
		for _, e := range m.EachDay {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_DrawZeroBuyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Day != 0 {
		n += 1 + sovActivity(uint64(m.Day))
	}
	return n
}

func (m *Activity_DrawZeroBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.EachDay) > 0 {
		for _, e := range m.EachDay {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_ZeroBuyDrawNextDayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Day != 0 {
		n += 1 + sovActivity(uint64(m.Day))
	}
	return n
}

func (m *Activity_ZeroBuyDrawNextDayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.EachDay) > 0 {
		for _, e := range m.EachDay {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_ActivityStartedPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Activity != nil {
		l = m.Activity.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	return n
}

func (m *Activity_ActivityEndedPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Activity != nil {
		l = m.Activity.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	return n
}

func (m *Activity_LimitTimePackagePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Package != nil {
		l = m.Package.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	return n
}

func (m *Activity_BuyLimitTimePackagePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivity(uint64(m.Id))
	}
	if m.BagId != 0 {
		n += 1 + sovActivity(uint64(m.BagId))
	}
	if len(m.Items) > 0 {
		for k, v := range m.Items {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Activity_BuyActivityNormalPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivity(uint64(m.Id))
	}
	if m.BagId != 0 {
		n += 1 + sovActivity(uint64(m.BagId))
	}
	if len(m.Items) > 0 {
		for k, v := range m.Items {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Activity_DailySaleUpdatePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuyTimes) > 0 {
		for k, v := range m.BuyTimes {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *Activity_WeeklySaleUpdatePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuyTimes) > 0 {
		for k, v := range m.BuyTimes {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivity(uint64(k)) + 1 + sovActivity(uint64(v))
			n += mapEntrySize + 1 + sovActivity(uint64(mapEntrySize))
		}
	}
	if len(m.Cfg) > 0 {
		for _, e := range m.Cfg {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	if m.NxtRefreshAt != 0 {
		n += 1 + sovActivity(uint64(m.NxtRefreshAt))
	}
	return n
}

func (m *Activity_UnlockAdvancePassesPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_AddPassesExpPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lv != 0 {
		n += 1 + sovActivity(uint64(m.Lv))
	}
	if m.Exp != 0 {
		n += 1 + sovActivity(uint64(m.Exp))
	}
	return n
}

func (m *Activity_LevelGrowthFundBuyPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Buy {
		n += 2
	}
	return n
}

func (m *Activity_ZeroBuyActivePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatBuyLimitTimePackagesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivity(uint64(m.Id))
	}
	if m.BagIdx != 0 {
		n += 1 + sovActivity(uint64(m.BagIdx))
	}
	return n
}

func (m *Activity_CheatBuyLimitTimePackagesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatBuyLevelGrowthFundRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatBuyLevelGrowthFundResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatRechargeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Amount != 0 {
		n += 1 + sovActivity(uint64(m.Amount))
	}
	return n
}

func (m *Activity_CheatRechargeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatClearStellargemCntRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatClearStellargemCntResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatUnlockAdvancePassesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatUnlockAdvancePassesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatAddPassesExpRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Exp != 0 {
		n += 1 + sovActivity(uint64(m.Exp))
	}
	return n
}

func (m *Activity_CheatAddPassesExpResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatRefreshWeeklyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatRefreshWeeklyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatClearZeroBuyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatClearZeroBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatZeroBuyAheadOneDayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Activity_CheatZeroBuyAheadOneDayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovActivity(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozActivity(x uint64) (n int) {
	return sovActivity(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Activity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Activity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Activity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &models.Activity{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityThreeDayInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityThreeDayInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityThreeDayInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityThreeDayInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityThreeDayInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityThreeDayInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginDay", wireType)
			}
			m.LoginDay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoginDay |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Receive == nil {
				m.Receive = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Receive[mapkey] = mapvalue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.FirstPayCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recharge", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Recharge = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityThreeDayGetRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityThreeDayGetRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityThreeDayGetRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Day", wireType)
			}
			m.Day = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Day |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityThreeDayGetRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityThreeDayGetRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityThreeDayGetRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reward == nil {
				m.Reward = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Reward[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DailySaleInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DailySaleInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DailySaleInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DailySaleInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DailySaleInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DailySaleInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyTimes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BuyTimes == nil {
				m.BuyTimes = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.BuyTimes[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.DailySaleCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DailySaleBuyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DailySaleBuyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DailySaleBuyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			m.Idx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Idx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DailySaleBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DailySaleBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DailySaleBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_GetLimitTimePackagesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetLimitTimePackagesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetLimitTimePackagesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_GetLimitTimePackagesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetLimitTimePackagesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetLimitTimePackagesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Packages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Packages == nil {
				m.Packages = make(map[int64]*models.LimitedTimePackage)
			}
			var mapkey int64
			var mapvalue *models.LimitedTimePackage
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthActivity
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthActivity
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &models.LimitedTimePackage{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Packages[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_LevelGrowthFundDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LevelGrowthFundDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LevelGrowthFundDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_LevelGrowthFundDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LevelGrowthFundDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LevelGrowthFundDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Buy = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = make(map[int64]*models.LevelGrowthFundItem)
			}
			var mapkey int64
			var mapvalue *models.LevelGrowthFundItem
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthActivity
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthActivity
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &models.LevelGrowthFundItem{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Info[mapkey] = mapvalue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.LevelGrowthFundCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_LevelGrowthFundGetRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LevelGrowthFundGetRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LevelGrowthFundGetRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_LevelGrowthFundGetRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LevelGrowthFundGetRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LevelGrowthFundGetRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = make(map[int64]*models.LevelGrowthFundItem)
			}
			var mapkey int64
			var mapvalue *models.LevelGrowthFundItem
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthActivity
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthActivity
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &models.LevelGrowthFundItem{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Info[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_AccRechargeDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccRechargeDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccRechargeDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_AccRechargeDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccRechargeDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccRechargeDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalRecharge", wireType)
			}
			m.TotalRecharge = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalRecharge |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DrawList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DrawList == nil {
				m.DrawList = make(map[int64]bool)
			}
			var mapkey int64
			var mapvalue bool
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapvaluetemp int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvaluetemp |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					mapvalue = bool(mapvaluetemp != 0)
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.DrawList[mapkey] = mapvalue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.AccRechargeCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_AccRechargeDrawRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccRechargeDrawRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccRechargeDrawRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			m.Idx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Idx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_AccRechargeDrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccRechargeDrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccRechargeDrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_StellargemShopDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StellargemShopDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StellargemShopDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_StellargemShopDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StellargemShopDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StellargemShopDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDoubleOpen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsDoubleOpen = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyCnt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BuyCnt == nil {
				m.BuyCnt = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.BuyCnt[mapkey] = mapvalue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.StellargemShopCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_StellargemShopBuyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StellargemShopBuyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StellargemShopBuyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			m.Idx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Idx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_StellargemShopBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StellargemShopBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StellargemShopBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_WeeklySaleInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySaleInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySaleInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_WeeklySaleInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySaleInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySaleInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyTimes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BuyTimes == nil {
				m.BuyTimes = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.BuyTimes[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.WeeklySaleCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NxtRefreshAt", wireType)
			}
			m.NxtRefreshAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NxtRefreshAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_WeeklySaleBuyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySaleBuyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySaleBuyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			m.Idx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Idx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_WeeklySaleBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySaleBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySaleBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_PassesInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PassesInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PassesInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_PassesInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PassesInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PassesInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Passes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Passes == nil {
				m.Passes = &models.Passes{}
			}
			if err := m.Passes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_UnlockPassesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnlockPassesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnlockPassesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_UnlockPassesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnlockPassesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnlockPassesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= models.PassesStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DrawPassesRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DrawPassesRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DrawPassesRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lv", wireType)
			}
			m.Lv = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lv |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAll", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAll = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DrawPassesRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DrawPassesRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DrawPassesRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ZeroBuyInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ZeroBuyInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ZeroBuyInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ZeroBuyInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ZeroBuyInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ZeroBuyInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.ZeroBuyCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartAt", wireType)
			}
			m.StartAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndAt", wireType)
			}
			m.EndAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EachDay", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EachDay = append(m.EachDay, &models.ZeroBuy{})
			if err := m.EachDay[len(m.EachDay)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DrawZeroBuyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DrawZeroBuyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DrawZeroBuyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Day", wireType)
			}
			m.Day = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Day |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DrawZeroBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DrawZeroBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DrawZeroBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EachDay", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EachDay = append(m.EachDay, &models.ZeroBuy{})
			if err := m.EachDay[len(m.EachDay)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ZeroBuyDrawNextDayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ZeroBuyDrawNextDayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ZeroBuyDrawNextDayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Day", wireType)
			}
			m.Day = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Day |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ZeroBuyDrawNextDayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ZeroBuyDrawNextDayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ZeroBuyDrawNextDayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EachDay", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EachDay = append(m.EachDay, &models.ZeroBuy{})
			if err := m.EachDay[len(m.EachDay)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityStartedPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityStartedPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityStartedPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Activity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Activity == nil {
				m.Activity = &models.Activity{}
			}
			if err := m.Activity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ActivityEndedPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityEndedPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityEndedPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Activity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Activity == nil {
				m.Activity = &models.Activity{}
			}
			if err := m.Activity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_LimitTimePackagePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LimitTimePackagePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LimitTimePackagePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Package", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Package == nil {
				m.Package = &models.LimitedTimePackage{}
			}
			if err := m.Package.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_BuyLimitTimePackagePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyLimitTimePackagePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyLimitTimePackagePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BagId", wireType)
			}
			m.BagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BagId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Items == nil {
				m.Items = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Items[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_BuyActivityNormalPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyActivityNormalPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyActivityNormalPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BagId", wireType)
			}
			m.BagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BagId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Items == nil {
				m.Items = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Items[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_DailySaleUpdatePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DailySaleUpdatePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DailySaleUpdatePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyTimes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BuyTimes == nil {
				m.BuyTimes = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.BuyTimes[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.DailySaleCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_WeeklySaleUpdatePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySaleUpdatePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySaleUpdatePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyTimes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BuyTimes == nil {
				m.BuyTimes = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivity(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivity
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.BuyTimes[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cfg = append(m.Cfg, &models.WeeklySaleCfg{})
			if err := m.Cfg[len(m.Cfg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NxtRefreshAt", wireType)
			}
			m.NxtRefreshAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NxtRefreshAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_UnlockAdvancePassesPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnlockAdvancePassesPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnlockAdvancePassesPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_AddPassesExpPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddPassesExpPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddPassesExpPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lv", wireType)
			}
			m.Lv = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lv |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_LevelGrowthFundBuyPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LevelGrowthFundBuyPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LevelGrowthFundBuyPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Buy = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_ZeroBuyActivePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ZeroBuyActivePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ZeroBuyActivePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatBuyLimitTimePackagesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatBuyLimitTimePackagesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatBuyLimitTimePackagesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BagIdx", wireType)
			}
			m.BagIdx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BagIdx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatBuyLimitTimePackagesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatBuyLimitTimePackagesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatBuyLimitTimePackagesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatBuyLevelGrowthFundRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatBuyLevelGrowthFundRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatBuyLevelGrowthFundRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatBuyLevelGrowthFundResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatBuyLevelGrowthFundResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatBuyLevelGrowthFundResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatRechargeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatRechargeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatRechargeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			m.Amount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Amount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatRechargeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatRechargeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatRechargeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatClearStellargemCntRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatClearStellargemCntRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatClearStellargemCntRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatClearStellargemCntResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatClearStellargemCntResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatClearStellargemCntResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatUnlockAdvancePassesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatUnlockAdvancePassesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatUnlockAdvancePassesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatUnlockAdvancePassesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatUnlockAdvancePassesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatUnlockAdvancePassesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatAddPassesExpRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatAddPassesExpRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatAddPassesExpRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatAddPassesExpResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatAddPassesExpResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatAddPassesExpResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatRefreshWeeklyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatRefreshWeeklyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatRefreshWeeklyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatRefreshWeeklyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatRefreshWeeklyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatRefreshWeeklyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatClearZeroBuyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatClearZeroBuyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatClearZeroBuyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatClearZeroBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatClearZeroBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatClearZeroBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatZeroBuyAheadOneDayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatZeroBuyAheadOneDayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatZeroBuyAheadOneDayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Activity_CheatZeroBuyAheadOneDayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatZeroBuyAheadOneDayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatZeroBuyAheadOneDayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipActivity(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthActivity
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupActivity
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthActivity
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthActivity        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowActivity          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupActivity = fmt.Errorf("proto: unexpected end of group")
)
