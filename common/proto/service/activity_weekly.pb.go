// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/activity_weekly.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ActivityWeeklyErrorCode int32

const (
	ActivityWeeklyErrorCode_ErrActivityWeeklySystem        ActivityWeeklyErrorCode = 0
	ActivityWeeklyErrorCode_ErrActivityWeeklyNotData       ActivityWeeklyErrorCode = 1
	ActivityWeeklyErrorCode_ErrActivityWeeklyConfig        ActivityWeeklyErrorCode = 2
	ActivityWeeklyErrorCode_ErrActivityWeeklyNoStart       ActivityWeeklyErrorCode = 3
	ActivityWeeklyErrorCode_ErrActivityWeeklyTimeOver      ActivityWeeklyErrorCode = 4
	ActivityWeeklyErrorCode_ErrActivityWeeklyNoReward      ActivityWeeklyErrorCode = 5
	ActivityWeeklyErrorCode_ErrActivityWeeklyReceived      ActivityWeeklyErrorCode = 6
	ActivityWeeklyErrorCode_ErrActivityWeeklyNotComplete   ActivityWeeklyErrorCode = 7
	ActivityWeeklyErrorCode_ErrActivityWeeklyNotScore      ActivityWeeklyErrorCode = 8
	ActivityWeeklyErrorCode_ErrActivityWeeklyScoreReceived ActivityWeeklyErrorCode = 9
	ActivityWeeklyErrorCode_ErrActivityWeeklyNotDay        ActivityWeeklyErrorCode = 10
	ActivityWeeklyErrorCode_ErrActivityWeeklyNotTimes      ActivityWeeklyErrorCode = 11
	ActivityWeeklyErrorCode_ErrActivityWeeklyTimes         ActivityWeeklyErrorCode = 12
	ActivityWeeklyErrorCode_ErrActivityWeeklyNoActivity    ActivityWeeklyErrorCode = 13
	ActivityWeeklyErrorCode_ErrActivityWeeklyNoExChange    ActivityWeeklyErrorCode = 14
	ActivityWeeklyErrorCode_ErrActivityWeeklyNoGift        ActivityWeeklyErrorCode = 15
	ActivityWeeklyErrorCode_ErrActivityWeeklyParam         ActivityWeeklyErrorCode = 16
)

var ActivityWeeklyErrorCode_name = map[int32]string{
	0:  "ErrActivityWeeklySystem",
	1:  "ErrActivityWeeklyNotData",
	2:  "ErrActivityWeeklyConfig",
	3:  "ErrActivityWeeklyNoStart",
	4:  "ErrActivityWeeklyTimeOver",
	5:  "ErrActivityWeeklyNoReward",
	6:  "ErrActivityWeeklyReceived",
	7:  "ErrActivityWeeklyNotComplete",
	8:  "ErrActivityWeeklyNotScore",
	9:  "ErrActivityWeeklyScoreReceived",
	10: "ErrActivityWeeklyNotDay",
	11: "ErrActivityWeeklyNotTimes",
	12: "ErrActivityWeeklyTimes",
	13: "ErrActivityWeeklyNoActivity",
	14: "ErrActivityWeeklyNoExChange",
	15: "ErrActivityWeeklyNoGift",
	16: "ErrActivityWeeklyParam",
}

var ActivityWeeklyErrorCode_value = map[string]int32{
	"ErrActivityWeeklySystem":        0,
	"ErrActivityWeeklyNotData":       1,
	"ErrActivityWeeklyConfig":        2,
	"ErrActivityWeeklyNoStart":       3,
	"ErrActivityWeeklyTimeOver":      4,
	"ErrActivityWeeklyNoReward":      5,
	"ErrActivityWeeklyReceived":      6,
	"ErrActivityWeeklyNotComplete":   7,
	"ErrActivityWeeklyNotScore":      8,
	"ErrActivityWeeklyScoreReceived": 9,
	"ErrActivityWeeklyNotDay":        10,
	"ErrActivityWeeklyNotTimes":      11,
	"ErrActivityWeeklyTimes":         12,
	"ErrActivityWeeklyNoActivity":    13,
	"ErrActivityWeeklyNoExChange":    14,
	"ErrActivityWeeklyNoGift":        15,
	"ErrActivityWeeklyParam":         16,
}

func (ActivityWeeklyErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0}
}

type ActivityWeekly struct {
}

func (m *ActivityWeekly) Reset()      { *m = ActivityWeekly{} }
func (*ActivityWeekly) ProtoMessage() {}
func (*ActivityWeekly) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0}
}
func (m *ActivityWeekly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly.Merge(m, src)
}
func (m *ActivityWeekly) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly proto.InternalMessageInfo

func (*ActivityWeekly) XXX_MessageName() string {
	return "service.ActivityWeekly"
}

// 获取活动情况
type ActivityWeekly_GetActivityInfoRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_GetActivityInfoRequest) Reset()      { *m = ActivityWeekly_GetActivityInfoRequest{} }
func (*ActivityWeekly_GetActivityInfoRequest) ProtoMessage() {}
func (*ActivityWeekly_GetActivityInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 0}
}
func (m *ActivityWeekly_GetActivityInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_GetActivityInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_GetActivityInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_GetActivityInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_GetActivityInfoRequest.Merge(m, src)
}
func (m *ActivityWeekly_GetActivityInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_GetActivityInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_GetActivityInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_GetActivityInfoRequest proto.InternalMessageInfo

func (m *ActivityWeekly_GetActivityInfoRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_GetActivityInfoRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.GetActivityInfoRequest"
}

type ActivityWeekly_GetActivityInfoResponse struct {
	Info *models.ActivityWeekly `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *ActivityWeekly_GetActivityInfoResponse) Reset() {
	*m = ActivityWeekly_GetActivityInfoResponse{}
}
func (*ActivityWeekly_GetActivityInfoResponse) ProtoMessage() {}
func (*ActivityWeekly_GetActivityInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 1}
}
func (m *ActivityWeekly_GetActivityInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_GetActivityInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_GetActivityInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_GetActivityInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_GetActivityInfoResponse.Merge(m, src)
}
func (m *ActivityWeekly_GetActivityInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_GetActivityInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_GetActivityInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_GetActivityInfoResponse proto.InternalMessageInfo

func (m *ActivityWeekly_GetActivityInfoResponse) GetInfo() *models.ActivityWeekly {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*ActivityWeekly_GetActivityInfoResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.GetActivityInfoResponse"
}

// 参与铸剑
type ActivityWeekly_CastSwordActivationRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Times      int64 `protobuf:"varint,2,opt,name=times,proto3" json:"times,omitempty"`
}

func (m *ActivityWeekly_CastSwordActivationRequest) Reset() {
	*m = ActivityWeekly_CastSwordActivationRequest{}
}
func (*ActivityWeekly_CastSwordActivationRequest) ProtoMessage() {}
func (*ActivityWeekly_CastSwordActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 2}
}
func (m *ActivityWeekly_CastSwordActivationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_CastSwordActivationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_CastSwordActivationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_CastSwordActivationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_CastSwordActivationRequest.Merge(m, src)
}
func (m *ActivityWeekly_CastSwordActivationRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_CastSwordActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_CastSwordActivationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_CastSwordActivationRequest proto.InternalMessageInfo

func (m *ActivityWeekly_CastSwordActivationRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_CastSwordActivationRequest) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (*ActivityWeekly_CastSwordActivationRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.CastSwordActivationRequest"
}

type ActivityWeekly_CastSwordActivationResponse struct {
	Info    *models.ActivityWeekly `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rewards []*models.WeeklyItems  `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (m *ActivityWeekly_CastSwordActivationResponse) Reset() {
	*m = ActivityWeekly_CastSwordActivationResponse{}
}
func (*ActivityWeekly_CastSwordActivationResponse) ProtoMessage() {}
func (*ActivityWeekly_CastSwordActivationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 3}
}
func (m *ActivityWeekly_CastSwordActivationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_CastSwordActivationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_CastSwordActivationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_CastSwordActivationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_CastSwordActivationResponse.Merge(m, src)
}
func (m *ActivityWeekly_CastSwordActivationResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_CastSwordActivationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_CastSwordActivationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_CastSwordActivationResponse proto.InternalMessageInfo

func (m *ActivityWeekly_CastSwordActivationResponse) GetInfo() *models.ActivityWeekly {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ActivityWeekly_CastSwordActivationResponse) GetRewards() []*models.WeeklyItems {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*ActivityWeekly_CastSwordActivationResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.CastSwordActivationResponse"
}

// 获取挑战奖励
type ActivityWeekly_WeeklyChallengeReceiveRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Id         int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) Reset() {
	*m = ActivityWeekly_WeeklyChallengeReceiveRequest{}
}
func (*ActivityWeekly_WeeklyChallengeReceiveRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyChallengeReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 4}
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*ActivityWeekly_WeeklyChallengeReceiveRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyChallengeReceiveRequest"
}

type ActivityWeekly_WeeklyChallengeReceiveResponse struct {
	Info  *models.ActivityWeekly `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Items []*models.Item         `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) Reset() {
	*m = ActivityWeekly_WeeklyChallengeReceiveResponse{}
}
func (*ActivityWeekly_WeeklyChallengeReceiveResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyChallengeReceiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 5}
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyChallengeReceiveResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) GetInfo() *models.ActivityWeekly {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*ActivityWeekly_WeeklyChallengeReceiveResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyChallengeReceiveResponse"
}

// 兑换物品
type ActivityWeekly_WeeklyExchangeRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Id         int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ActivityWeekly_WeeklyExchangeRequest) Reset()      { *m = ActivityWeekly_WeeklyExchangeRequest{} }
func (*ActivityWeekly_WeeklyExchangeRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyExchangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 6}
}
func (m *ActivityWeekly_WeeklyExchangeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyExchangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyExchangeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyExchangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyExchangeRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyExchangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyExchangeRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyExchangeRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_WeeklyExchangeRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*ActivityWeekly_WeeklyExchangeRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyExchangeRequest"
}

type ActivityWeekly_WeeklyExchangeResponse struct {
	Info  *models.ActivityWeekly `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Items []*models.Item         `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *ActivityWeekly_WeeklyExchangeResponse) Reset()      { *m = ActivityWeekly_WeeklyExchangeResponse{} }
func (*ActivityWeekly_WeeklyExchangeResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyExchangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 7}
}
func (m *ActivityWeekly_WeeklyExchangeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyExchangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyExchangeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyExchangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyExchangeResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyExchangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyExchangeResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyExchangeResponse) GetInfo() *models.ActivityWeekly {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ActivityWeekly_WeeklyExchangeResponse) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*ActivityWeekly_WeeklyExchangeResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyExchangeResponse"
}

// 购买礼包
type ActivityWeekly_WeeklyGiftRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Id         int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ActivityWeekly_WeeklyGiftRequest) Reset()      { *m = ActivityWeekly_WeeklyGiftRequest{} }
func (*ActivityWeekly_WeeklyGiftRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyGiftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 8}
}
func (m *ActivityWeekly_WeeklyGiftRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyGiftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyGiftRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyGiftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyGiftRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyGiftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyGiftRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyGiftRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_WeeklyGiftRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*ActivityWeekly_WeeklyGiftRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyGiftRequest"
}

type ActivityWeekly_WeeklyGiftResponse struct {
	Info *models.ActivityWeekly `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *ActivityWeekly_WeeklyGiftResponse) Reset()      { *m = ActivityWeekly_WeeklyGiftResponse{} }
func (*ActivityWeekly_WeeklyGiftResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyGiftResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 9}
}
func (m *ActivityWeekly_WeeklyGiftResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyGiftResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyGiftResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyGiftResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyGiftResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyGiftResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyGiftResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyGiftResponse) GetInfo() *models.ActivityWeekly {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*ActivityWeekly_WeeklyGiftResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyGiftResponse"
}

// 获取排行列表
type ActivityWeekly_WeeklyRankingListRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	StartIndex int64 `protobuf:"varint,2,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	Count      int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (m *ActivityWeekly_WeeklyRankingListRequest) Reset() {
	*m = ActivityWeekly_WeeklyRankingListRequest{}
}
func (*ActivityWeekly_WeeklyRankingListRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyRankingListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 10}
}
func (m *ActivityWeekly_WeeklyRankingListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyRankingListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyRankingListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyRankingListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyRankingListRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyRankingListRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyRankingListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyRankingListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyRankingListRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyRankingListRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_WeeklyRankingListRequest) GetStartIndex() int64 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *ActivityWeekly_WeeklyRankingListRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (*ActivityWeekly_WeeklyRankingListRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyRankingListRequest"
}

type ActivityWeekly_WeeklyRankingListResponse struct {
	SelfRankingId   int64               `protobuf:"varint,1,opt,name=self_ranking_id,json=selfRankingId,proto3" json:"self_ranking_id,omitempty"`
	RankingInfos    []*models.ArenaInfo `protobuf:"bytes,2,rep,name=ranking_infos,json=rankingInfos,proto3" json:"ranking_infos,omitempty"`
	NextRefreshTime int64               `protobuf:"varint,3,opt,name=next_refresh_time,json=nextRefreshTime,proto3" json:"next_refresh_time,omitempty"`
}

func (m *ActivityWeekly_WeeklyRankingListResponse) Reset() {
	*m = ActivityWeekly_WeeklyRankingListResponse{}
}
func (*ActivityWeekly_WeeklyRankingListResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyRankingListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 11}
}
func (m *ActivityWeekly_WeeklyRankingListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyRankingListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyRankingListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyRankingListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyRankingListResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyRankingListResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyRankingListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyRankingListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyRankingListResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyRankingListResponse) GetSelfRankingId() int64 {
	if m != nil {
		return m.SelfRankingId
	}
	return 0
}

func (m *ActivityWeekly_WeeklyRankingListResponse) GetRankingInfos() []*models.ArenaInfo {
	if m != nil {
		return m.RankingInfos
	}
	return nil
}

func (m *ActivityWeekly_WeeklyRankingListResponse) GetNextRefreshTime() int64 {
	if m != nil {
		return m.NextRefreshTime
	}
	return 0
}

func (*ActivityWeekly_WeeklyRankingListResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyRankingListResponse"
}

// 获取自己排行
type ActivityWeekly_WeeklySelfRankingIdRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) Reset() {
	*m = ActivityWeekly_WeeklySelfRankingIdRequest{}
}
func (*ActivityWeekly_WeeklySelfRankingIdRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklySelfRankingIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 12}
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_WeeklySelfRankingIdRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklySelfRankingIdRequest"
}

type ActivityWeekly_WeeklySelfRankingIdResponse struct {
	SelfRankingId int64 `protobuf:"varint,1,opt,name=self_ranking_id,json=selfRankingId,proto3" json:"self_ranking_id,omitempty"`
}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) Reset() {
	*m = ActivityWeekly_WeeklySelfRankingIdResponse{}
}
func (*ActivityWeekly_WeeklySelfRankingIdResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklySelfRankingIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 13}
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklySelfRankingIdResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) GetSelfRankingId() int64 {
	if m != nil {
		return m.SelfRankingId
	}
	return 0
}

func (*ActivityWeekly_WeeklySelfRankingIdResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklySelfRankingIdResponse"
}

// 获取公会（位面）挑战积分
type ActivityWeekly_GetGuildChallengeScoreRequest struct {
	ActivityId int64  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Version    int64  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	GuildId    string `protobuf:"bytes,3,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) Reset() {
	*m = ActivityWeekly_GetGuildChallengeScoreRequest{}
}
func (*ActivityWeekly_GetGuildChallengeScoreRequest) ProtoMessage() {}
func (*ActivityWeekly_GetGuildChallengeScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 14}
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreRequest.Merge(m, src)
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreRequest proto.InternalMessageInfo

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (*ActivityWeekly_GetGuildChallengeScoreRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.GetGuildChallengeScoreRequest"
}

type ActivityWeekly_GetGuildChallengeScoreResponse struct {
	Score int64 `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) Reset() {
	*m = ActivityWeekly_GetGuildChallengeScoreResponse{}
}
func (*ActivityWeekly_GetGuildChallengeScoreResponse) ProtoMessage() {}
func (*ActivityWeekly_GetGuildChallengeScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 15}
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreResponse.Merge(m, src)
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_GetGuildChallengeScoreResponse proto.InternalMessageInfo

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (*ActivityWeekly_GetGuildChallengeScoreResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.GetGuildChallengeScoreResponse"
}

// 获取铸剑配置
type ActivityWeekly_WeeklyCastswordCnfRequest struct {
}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) Reset() {
	*m = ActivityWeekly_WeeklyCastswordCnfRequest{}
}
func (*ActivityWeekly_WeeklyCastswordCnfRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyCastswordCnfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 16}
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfRequest proto.InternalMessageInfo

func (*ActivityWeekly_WeeklyCastswordCnfRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyCastswordCnfRequest"
}

type ActivityWeekly_WeeklyCastswordCnfResponse struct {
	Cnf           []*models.WeeklyCastswordCnf `protobuf:"bytes,1,rep,name=cnf,proto3" json:"cnf,omitempty"`
	CastswordDraw string                       `protobuf:"bytes,2,opt,name=CastswordDraw,proto3" json:"CastswordDraw,omitempty"`
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) Reset() {
	*m = ActivityWeekly_WeeklyCastswordCnfResponse{}
}
func (*ActivityWeekly_WeeklyCastswordCnfResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyCastswordCnfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 17}
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyCastswordCnfResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) GetCnf() []*models.WeeklyCastswordCnf {
	if m != nil {
		return m.Cnf
	}
	return nil
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) GetCastswordDraw() string {
	if m != nil {
		return m.CastswordDraw
	}
	return ""
}

func (*ActivityWeekly_WeeklyCastswordCnfResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyCastswordCnfResponse"
}

// 获取挑战配置
type ActivityWeekly_WeeklyChallengeCnfRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) Reset() {
	*m = ActivityWeekly_WeeklyChallengeCnfRequest{}
}
func (*ActivityWeekly_WeeklyChallengeCnfRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyChallengeCnfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 18}
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_WeeklyChallengeCnfRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyChallengeCnfRequest"
}

type ActivityWeekly_WeeklyChallengeCnfResponse struct {
	Cnf []*models.WeeklyChallengeCnf `protobuf:"bytes,1,rep,name=cnf,proto3" json:"cnf,omitempty"`
}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) Reset() {
	*m = ActivityWeekly_WeeklyChallengeCnfResponse{}
}
func (*ActivityWeekly_WeeklyChallengeCnfResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyChallengeCnfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 19}
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyChallengeCnfResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) GetCnf() []*models.WeeklyChallengeCnf {
	if m != nil {
		return m.Cnf
	}
	return nil
}

func (*ActivityWeekly_WeeklyChallengeCnfResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyChallengeCnfResponse"
}

// 获取兑换配置
type ActivityWeekly_WeeklyExchangeCnfRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) Reset() {
	*m = ActivityWeekly_WeeklyExchangeCnfRequest{}
}
func (*ActivityWeekly_WeeklyExchangeCnfRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyExchangeCnfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 20}
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_WeeklyExchangeCnfRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyExchangeCnfRequest"
}

type ActivityWeekly_WeeklyExchangeCnfResponse struct {
	Cnf []*models.WeeklyExchangeCnf `protobuf:"bytes,1,rep,name=cnf,proto3" json:"cnf,omitempty"`
}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) Reset() {
	*m = ActivityWeekly_WeeklyExchangeCnfResponse{}
}
func (*ActivityWeekly_WeeklyExchangeCnfResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyExchangeCnfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 21}
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyExchangeCnfResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) GetCnf() []*models.WeeklyExchangeCnf {
	if m != nil {
		return m.Cnf
	}
	return nil
}

func (*ActivityWeekly_WeeklyExchangeCnfResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyExchangeCnfResponse"
}

// 获取礼包配置
type ActivityWeekly_WeeklyGiftCnfRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) Reset()      { *m = ActivityWeekly_WeeklyGiftCnfRequest{} }
func (*ActivityWeekly_WeeklyGiftCnfRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyGiftCnfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 22}
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyGiftCnfRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_WeeklyGiftCnfRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyGiftCnfRequest"
}

type ActivityWeekly_WeeklyGiftCnfResponse struct {
	Cnf []*models.WeeklyGiftCnf `protobuf:"bytes,1,rep,name=cnf,proto3" json:"cnf,omitempty"`
}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) Reset()      { *m = ActivityWeekly_WeeklyGiftCnfResponse{} }
func (*ActivityWeekly_WeeklyGiftCnfResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyGiftCnfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 23}
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyGiftCnfResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyGiftCnfResponse) GetCnf() []*models.WeeklyGiftCnf {
	if m != nil {
		return m.Cnf
	}
	return nil
}

func (*ActivityWeekly_WeeklyGiftCnfResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyGiftCnfResponse"
}

// 获取排行榜配置
type ActivityWeekly_WeeklyRankCnfRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_WeeklyRankCnfRequest) Reset()      { *m = ActivityWeekly_WeeklyRankCnfRequest{} }
func (*ActivityWeekly_WeeklyRankCnfRequest) ProtoMessage() {}
func (*ActivityWeekly_WeeklyRankCnfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 24}
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyRankCnfRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyRankCnfRequest.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyRankCnfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyRankCnfRequest proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyRankCnfRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_WeeklyRankCnfRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyRankCnfRequest"
}

type ActivityWeekly_WeeklyRankCnfResponse struct {
	Cnf []*models.WeeklyRankCnf `protobuf:"bytes,1,rep,name=cnf,proto3" json:"cnf,omitempty"`
}

func (m *ActivityWeekly_WeeklyRankCnfResponse) Reset()      { *m = ActivityWeekly_WeeklyRankCnfResponse{} }
func (*ActivityWeekly_WeeklyRankCnfResponse) ProtoMessage() {}
func (*ActivityWeekly_WeeklyRankCnfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 25}
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyRankCnfResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyRankCnfResponse.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyRankCnfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyRankCnfResponse proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyRankCnfResponse) GetCnf() []*models.WeeklyRankCnf {
	if m != nil {
		return m.Cnf
	}
	return nil
}

func (*ActivityWeekly_WeeklyRankCnfResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyRankCnfResponse"
}

// 购买礼包推送
type ActivityWeekly_BuyGiftPush struct {
	Id    int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Items []*models.Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *ActivityWeekly_BuyGiftPush) Reset()      { *m = ActivityWeekly_BuyGiftPush{} }
func (*ActivityWeekly_BuyGiftPush) ProtoMessage() {}
func (*ActivityWeekly_BuyGiftPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 26}
}
func (m *ActivityWeekly_BuyGiftPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_BuyGiftPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_BuyGiftPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_BuyGiftPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_BuyGiftPush.Merge(m, src)
}
func (m *ActivityWeekly_BuyGiftPush) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_BuyGiftPush) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_BuyGiftPush.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_BuyGiftPush proto.InternalMessageInfo

func (m *ActivityWeekly_BuyGiftPush) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActivityWeekly_BuyGiftPush) GetItems() []*models.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*ActivityWeekly_BuyGiftPush) XXX_MessageName() string {
	return "service.ActivityWeekly.BuyGiftPush"
}

// 加入公会时的位面奖励推送
type ActivityWeekly_WeeklyChallengeGuildRewardsPush struct {
	ActivityId   int64                         `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	GuildId      string                        `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	GuildRewards map[int64]models.RewardStatus `protobuf:"bytes,3,rep,name=guild_rewards,json=guildRewards,proto3" json:"guild_rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=models.RewardStatus"`
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) Reset() {
	*m = ActivityWeekly_WeeklyChallengeGuildRewardsPush{}
}
func (*ActivityWeekly_WeeklyChallengeGuildRewardsPush) ProtoMessage() {}
func (*ActivityWeekly_WeeklyChallengeGuildRewardsPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 27}
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_WeeklyChallengeGuildRewardsPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeGuildRewardsPush.Merge(m, src)
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_WeeklyChallengeGuildRewardsPush.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_WeeklyChallengeGuildRewardsPush proto.InternalMessageInfo

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) GetGuildRewards() map[int64]models.RewardStatus {
	if m != nil {
		return m.GuildRewards
	}
	return nil
}

func (*ActivityWeekly_WeeklyChallengeGuildRewardsPush) XXX_MessageName() string {
	return "service.ActivityWeekly.WeeklyChallengeGuildRewardsPush"
}

// 作弊重置活动
type ActivityWeekly_CheatWeeklyRefreshRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) Reset() {
	*m = ActivityWeekly_CheatWeeklyRefreshRequest{}
}
func (*ActivityWeekly_CheatWeeklyRefreshRequest) ProtoMessage() {}
func (*ActivityWeekly_CheatWeeklyRefreshRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 28}
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshRequest.Merge(m, src)
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshRequest proto.InternalMessageInfo

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (*ActivityWeekly_CheatWeeklyRefreshRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.CheatWeeklyRefreshRequest"
}

type ActivityWeekly_CheatWeeklyRefreshResponse struct {
	Info *models.ActivityWeekly `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) Reset() {
	*m = ActivityWeekly_CheatWeeklyRefreshResponse{}
}
func (*ActivityWeekly_CheatWeeklyRefreshResponse) ProtoMessage() {}
func (*ActivityWeekly_CheatWeeklyRefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 29}
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshResponse.Merge(m, src)
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_CheatWeeklyRefreshResponse proto.InternalMessageInfo

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) GetInfo() *models.ActivityWeekly {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*ActivityWeekly_CheatWeeklyRefreshResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.CheatWeeklyRefreshResponse"
}

// 作弊购买礼包 直接获得道具和减少限购次数
type ActivityWeekly_CheatBuyWeeklyGiftRequest struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Id         int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) Reset() {
	*m = ActivityWeekly_CheatBuyWeeklyGiftRequest{}
}
func (*ActivityWeekly_CheatBuyWeeklyGiftRequest) ProtoMessage() {}
func (*ActivityWeekly_CheatBuyWeeklyGiftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 30}
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftRequest.Merge(m, src)
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftRequest proto.InternalMessageInfo

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*ActivityWeekly_CheatBuyWeeklyGiftRequest) XXX_MessageName() string {
	return "service.ActivityWeekly.CheatBuyWeeklyGiftRequest"
}

type ActivityWeekly_CheatBuyWeeklyGiftResponse struct {
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) Reset() {
	*m = ActivityWeekly_CheatBuyWeeklyGiftResponse{}
}
func (*ActivityWeekly_CheatBuyWeeklyGiftResponse) ProtoMessage() {}
func (*ActivityWeekly_CheatBuyWeeklyGiftResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50579266a118cf5f, []int{0, 31}
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftResponse.Merge(m, src)
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityWeekly_CheatBuyWeeklyGiftResponse proto.InternalMessageInfo

func (*ActivityWeekly_CheatBuyWeeklyGiftResponse) XXX_MessageName() string {
	return "service.ActivityWeekly.CheatBuyWeeklyGiftResponse"
}
func init() {
	proto.RegisterEnum("service.ActivityWeeklyErrorCode", ActivityWeeklyErrorCode_name, ActivityWeeklyErrorCode_value)
	proto.RegisterType((*ActivityWeekly)(nil), "service.ActivityWeekly")
	proto.RegisterType((*ActivityWeekly_GetActivityInfoRequest)(nil), "service.ActivityWeekly.GetActivityInfoRequest")
	proto.RegisterType((*ActivityWeekly_GetActivityInfoResponse)(nil), "service.ActivityWeekly.GetActivityInfoResponse")
	proto.RegisterType((*ActivityWeekly_CastSwordActivationRequest)(nil), "service.ActivityWeekly.CastSwordActivationRequest")
	proto.RegisterType((*ActivityWeekly_CastSwordActivationResponse)(nil), "service.ActivityWeekly.CastSwordActivationResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyChallengeReceiveRequest)(nil), "service.ActivityWeekly.WeeklyChallengeReceiveRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyChallengeReceiveResponse)(nil), "service.ActivityWeekly.WeeklyChallengeReceiveResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyExchangeRequest)(nil), "service.ActivityWeekly.WeeklyExchangeRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyExchangeResponse)(nil), "service.ActivityWeekly.WeeklyExchangeResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyGiftRequest)(nil), "service.ActivityWeekly.WeeklyGiftRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyGiftResponse)(nil), "service.ActivityWeekly.WeeklyGiftResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyRankingListRequest)(nil), "service.ActivityWeekly.WeeklyRankingListRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyRankingListResponse)(nil), "service.ActivityWeekly.WeeklyRankingListResponse")
	proto.RegisterType((*ActivityWeekly_WeeklySelfRankingIdRequest)(nil), "service.ActivityWeekly.WeeklySelfRankingIdRequest")
	proto.RegisterType((*ActivityWeekly_WeeklySelfRankingIdResponse)(nil), "service.ActivityWeekly.WeeklySelfRankingIdResponse")
	proto.RegisterType((*ActivityWeekly_GetGuildChallengeScoreRequest)(nil), "service.ActivityWeekly.GetGuildChallengeScoreRequest")
	proto.RegisterType((*ActivityWeekly_GetGuildChallengeScoreResponse)(nil), "service.ActivityWeekly.GetGuildChallengeScoreResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyCastswordCnfRequest)(nil), "service.ActivityWeekly.WeeklyCastswordCnfRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyCastswordCnfResponse)(nil), "service.ActivityWeekly.WeeklyCastswordCnfResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyChallengeCnfRequest)(nil), "service.ActivityWeekly.WeeklyChallengeCnfRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyChallengeCnfResponse)(nil), "service.ActivityWeekly.WeeklyChallengeCnfResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyExchangeCnfRequest)(nil), "service.ActivityWeekly.WeeklyExchangeCnfRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyExchangeCnfResponse)(nil), "service.ActivityWeekly.WeeklyExchangeCnfResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyGiftCnfRequest)(nil), "service.ActivityWeekly.WeeklyGiftCnfRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyGiftCnfResponse)(nil), "service.ActivityWeekly.WeeklyGiftCnfResponse")
	proto.RegisterType((*ActivityWeekly_WeeklyRankCnfRequest)(nil), "service.ActivityWeekly.WeeklyRankCnfRequest")
	proto.RegisterType((*ActivityWeekly_WeeklyRankCnfResponse)(nil), "service.ActivityWeekly.WeeklyRankCnfResponse")
	proto.RegisterType((*ActivityWeekly_BuyGiftPush)(nil), "service.ActivityWeekly.BuyGiftPush")
	proto.RegisterType((*ActivityWeekly_WeeklyChallengeGuildRewardsPush)(nil), "service.ActivityWeekly.WeeklyChallengeGuildRewardsPush")
	proto.RegisterMapType((map[int64]models.RewardStatus)(nil), "service.ActivityWeekly.WeeklyChallengeGuildRewardsPush.GuildRewardsEntry")
	proto.RegisterType((*ActivityWeekly_CheatWeeklyRefreshRequest)(nil), "service.ActivityWeekly.CheatWeeklyRefreshRequest")
	proto.RegisterType((*ActivityWeekly_CheatWeeklyRefreshResponse)(nil), "service.ActivityWeekly.CheatWeeklyRefreshResponse")
	proto.RegisterType((*ActivityWeekly_CheatBuyWeeklyGiftRequest)(nil), "service.ActivityWeekly.CheatBuyWeeklyGiftRequest")
	proto.RegisterType((*ActivityWeekly_CheatBuyWeeklyGiftResponse)(nil), "service.ActivityWeekly.CheatBuyWeeklyGiftResponse")
}

func init() {
	proto.RegisterFile("proto/service/activity_weekly.proto", fileDescriptor_50579266a118cf5f)
}

var fileDescriptor_50579266a118cf5f = []byte{
	// 1377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x5b, 0x6f, 0x13, 0x47,
	0x14, 0x8e, 0x6d, 0x42, 0xc8, 0x71, 0x2e, 0x9b, 0x69, 0x2e, 0x9b, 0x09, 0x2c, 0x88, 0x56, 0x2d,
	0x4a, 0x8b, 0xd3, 0xd2, 0x16, 0x4a, 0x2f, 0x2a, 0x60, 0xa2, 0xe0, 0x0a, 0x51, 0x64, 0xb7, 0xaa,
	0xd4, 0x97, 0x68, 0xf1, 0x8e, 0x93, 0x15, 0xf6, 0x6e, 0xba, 0xbb, 0x4e, 0xe2, 0xb7, 0xde, 0x82,
	0x82, 0x1b, 0x04, 0x88, 0x5b, 0x2b, 0x51, 0x21, 0x10, 0x15, 0x81, 0x56, 0x21, 0x0d, 0x04, 0xaa,
	0x06, 0xfa, 0xcc, 0x23, 0x8f, 0x3c, 0xb6, 0x49, 0xd7, 0x4e, 0xde, 0xfa, 0x13, 0xaa, 0xd9, 0x9d,
	0xd9, 0x78, 0x93, 0x45, 0x71, 0xa2, 0xf6, 0xcd, 0x73, 0xce, 0xf7, 0xcd, 0xf9, 0xce, 0x9c, 0x39,
	0x67, 0xd6, 0xf0, 0xe2, 0x90, 0xa1, 0x5b, 0x7a, 0x8f, 0x49, 0x8c, 0x61, 0x35, 0x4d, 0x7a, 0xe4,
	0xb4, 0xa5, 0x0e, 0xab, 0x56, 0xa1, 0x7f, 0x84, 0x90, 0x93, 0xd9, 0x42, 0xcc, 0xf1, 0xa2, 0x3a,
	0xe6, 0xc6, 0x3b, 0x5d, 0x74, 0x4e, 0x57, 0x48, 0xd6, 0x0c, 0x06, 0xe3, 0x0e, 0x1f, 0xe6, 0x84,
	0x6c, 0x12, 0xe6, 0xe8, 0x0a, 0x24, 0x33, 0x67, 0xfb, 0x0a, 0xd6, 0x00, 0xb3, 0x8b, 0x7e, 0x92,
	0x41, 0x34, 0x39, 0xd0, 0x43, 0xb4, 0x7c, 0xce, 0x74, 0x3d, 0x3b, 0x27, 0xdb, 0xa0, 0xe9, 0x20,
	0xdb, 0xfe, 0x33, 0x47, 0x1a, 0xde, 0x0f, 0xed, 0x7d, 0xc4, 0xe2, 0xc6, 0x84, 0x96, 0xd1, 0x93,
	0xe4, 0x8b, 0x3c, 0x31, 0x2d, 0xb4, 0x1d, 0xa2, 0x5e, 0x1e, 0xaa, 0x22, 0x86, 0x76, 0x84, 0x76,
	0x45, 0x92, 0xc0, 0x4d, 0x09, 0x05, 0xf7, 0x42, 0xc7, 0x2a, 0xaa, 0x39, 0xa4, 0x6b, 0x26, 0x41,
	0xdd, 0xb0, 0x49, 0xd5, 0x32, 0xba, 0x43, 0x8a, 0xee, 0x69, 0x8f, 0xb9, 0x5a, 0x62, 0xfe, 0xd8,
	0x49, 0x07, 0x83, 0x53, 0x80, 0xe3, 0xb2, 0x69, 0xa5, 0x46, 0x74, 0x43, 0x71, 0x00, 0xb2, 0xa5,
	0xea, 0x5a, 0xb5, 0x2a, 0x50, 0x2b, 0xd4, 0x5a, 0x6a, 0x8e, 0x98, 0x62, 0xd8, 0x71, 0xb9, 0x0b,
	0x3c, 0x0a, 0x5d, 0x81, 0x9b, 0xae, 0x5f, 0x1f, 0xda, 0x0d, 0x75, 0x06, 0x19, 0x91, 0x0d, 0x85,
	0x86, 0x88, 0xec, 0x8a, 0xee, 0x79, 0x81, 0xc3, 0x5d, 0x58, 0xc2, 0x22, 0x39, 0x33, 0xc9, 0x31,
	0xf8, 0x38, 0x6c, 0x73, 0xed, 0xf1, 0x41, 0x39, 0x9b, 0x25, 0xda, 0x00, 0x49, 0x92, 0x34, 0x51,
	0x87, 0x49, 0xd5, 0x19, 0x35, 0x41, 0x58, 0x55, 0x58, 0x3a, 0x61, 0x55, 0xc1, 0x43, 0x20, 0x3d,
	0x6f, 0xc7, 0x0d, 0xa4, 0xb3, 0x13, 0x6a, 0x55, 0xaa, 0x98, 0x25, 0xd3, 0xc0, 0xc1, 0x34, 0x8d,
	0xa4, 0xeb, 0xc2, 0x47, 0xa0, 0xcd, 0xe5, 0xf4, 0x8e, 0xa6, 0x07, 0x65, 0x27, 0xe0, 0x06, 0xb5,
	0x0f, 0x42, 0xfb, 0xca, 0x9d, 0xfe, 0x27, 0xcd, 0x87, 0xa1, 0xc5, 0xe5, 0xf4, 0xa9, 0x19, 0x6b,
	0xc3, 0x7a, 0x0f, 0x00, 0xaa, 0xdc, 0x65, 0x03, 0xd7, 0xd9, 0x00, 0x91, 0xad, 0x65, 0xed, 0xa4,
	0xaa, 0x0d, 0x1c, 0x55, 0xcd, 0xea, 0xe5, 0x6c, 0x87, 0xa8, 0x69, 0xc9, 0x86, 0xd5, 0xaf, 0x6a,
	0x0a, 0x19, 0x65, 0xba, 0xc0, 0x31, 0x25, 0xa8, 0x85, 0xde, 0xf6, 0xb4, 0x9e, 0xd7, 0x2c, 0x31,
	0xe2, 0xde, 0x76, 0x67, 0x81, 0x6f, 0x85, 0xa0, 0x33, 0x20, 0x28, 0x53, 0xff, 0x32, 0x34, 0x9b,
	0x24, 0x9b, 0xe9, 0x37, 0x5c, 0xdf, 0x72, 0xe4, 0x46, 0x6a, 0x66, 0x8c, 0x84, 0x82, 0xf6, 0x42,
	0xa3, 0x07, 0xd1, 0x32, 0x3a, 0x3f, 0xed, 0x16, 0x2f, 0x5d, 0x3a, 0x63, 0x9c, 0x36, 0x6f, 0x60,
	0x38, 0xba, 0x30, 0x51, 0x37, 0xb4, 0x68, 0x64, 0xd4, 0xea, 0x37, 0x48, 0xc6, 0x20, 0xe6, 0x60,
	0x3f, 0xed, 0x40, 0xa6, 0xaf, 0x99, 0x3a, 0x92, 0xae, 0xfd, 0x13, 0x35, 0x47, 0xf0, 0x07, 0x80,
	0x5d, 0xa1, 0xa9, 0xca, 0xd0, 0xeb, 0x18, 0x39, 0x5d, 0x81, 0xf4, 0xf5, 0x65, 0x8a, 0xf3, 0xb0,
	0xad, 0x8f, 0x58, 0x7d, 0x79, 0x35, 0xab, 0x78, 0x3d, 0x95, 0x4a, 0xeb, 0x46, 0xf5, 0xf7, 0x5c,
	0x84, 0xba, 0x61, 0x62, 0x98, 0xaa, 0xae, 0xb1, 0x22, 0xf1, 0x25, 0xea, 0x84, 0x2d, 0x03, 0x74,
	0x63, 0xca, 0xa3, 0x87, 0x50, 0x9f, 0xac, 0x73, 0xd6, 0x09, 0x05, 0xef, 0x05, 0xe9, 0x79, 0x61,
	0x59, 0x02, 0xad, 0x50, 0x6b, 0x52, 0x03, 0x8b, 0xe8, 0x2e, 0x70, 0x17, 0xaf, 0x2e, 0x1d, 0x69,
	0x26, 0x1d, 0x69, 0x71, 0x2d, 0xc3, 0xa4, 0xe2, 0x21, 0x7e, 0xa2, 0x7e, 0x27, 0xdb, 0xf0, 0x35,
	0x88, 0xa4, 0xb5, 0x8c, 0x18, 0x72, 0x2a, 0x89, 0xfd, 0x83, 0xcb, 0x47, 0xa0, 0x30, 0xf4, 0x12,
	0x34, 0x7a, 0xc6, 0xc3, 0x86, 0x3c, 0xe2, 0xe4, 0x56, 0x9f, 0xf4, 0x1b, 0xf1, 0xfb, 0x9e, 0x1c,
	0x9e, 0xc4, 0xb2, 0x9c, 0xb5, 0x4b, 0xf8, 0x91, 0xa7, 0xd7, 0xc7, 0xae, 0x46, 0x6f, 0x25, 0x81,
	0xc2, 0xf0, 0x7b, 0xbc, 0xd7, 0xf8, 0x74, 0x59, 0x8f, 0x90, 0x23, 0x3c, 0x0d, 0x1f, 0x99, 0xe9,
	0x78, 0xb5, 0x52, 0x47, 0xa7, 0x5f, 0x47, 0x25, 0xde, 0x91, 0xb1, 0x0f, 0x5a, 0x97, 0x87, 0xc6,
	0x7a, 0x24, 0x1c, 0xe0, 0x73, 0xd6, 0x23, 0xb2, 0xf0, 0xaf, 0x54, 0x86, 0x6f, 0xf3, 0x87, 0xe7,
	0x58, 0x7f, 0x68, 0x7a, 0xb9, 0x37, 0x14, 0xda, 0x23, 0x56, 0x11, 0x9a, 0x63, 0x9d, 0xd0, 0x07,
	0x21, 0x7a, 0x28, 0xef, 0xa8, 0x39, 0x9e, 0x37, 0x07, 0xd9, 0x24, 0x0d, 0xf1, 0x49, 0x5a, 0xd5,
	0xcc, 0xbe, 0x19, 0x86, 0xed, 0x2b, 0x6a, 0xeb, 0x74, 0x47, 0xd2, 0x7d, 0x4b, 0x9d, 0x7d, 0xd7,
	0x6c, 0xc5, 0xca, 0x86, 0x0b, 0xfb, 0x1a, 0x0e, 0x69, 0xd0, 0xe8, 0xba, 0xf8, 0x03, 0x1e, 0x71,
	0xb4, 0x24, 0x62, 0xec, 0xb3, 0x6d, 0xc5, 0x04, 0x8f, 0xad, 0xa1, 0x25, 0x56, 0x69, 0xe8, 0xd5,
	0x2c, 0xa3, 0x90, 0x6c, 0x18, 0xa8, 0x30, 0xe1, 0x4f, 0xa1, 0x65, 0x15, 0x04, 0x09, 0x10, 0x39,
	0x49, 0x0a, 0x4c, 0x38, 0xfd, 0x89, 0xba, 0xa1, 0x76, 0x58, 0xce, 0xe6, 0x89, 0x23, 0xb7, 0x69,
	0x4f, 0x2b, 0x3f, 0x1a, 0x97, 0x96, 0xb2, 0x64, 0x2b, 0x6f, 0x26, 0x5d, 0xc8, 0xbb, 0xe1, 0x77,
	0x42, 0xb4, 0xe1, 0xe2, 0x83, 0x44, 0xb6, 0x58, 0x11, 0xdc, 0x71, 0xba, 0x8e, 0x7b, 0x8e, 0x83,
	0xd8, 0x1b, 0x78, 0xda, 0x8e, 0x32, 0x1d, 0x87, 0xf2, 0x85, 0xff, 0xe0, 0xa9, 0xdd, 0xca, 0x74,
	0xad, 0xd8, 0xcd, 0xd5, 0xd5, 0x7d, 0xa1, 0x0e, 0x3a, 0xfc, 0x22, 0x7a, 0x0d, 0x43, 0x37, 0xe2,
	0xba, 0x42, 0x50, 0x0f, 0x74, 0xf4, 0x1a, 0x86, 0xdf, 0x9b, 0x2a, 0x98, 0x16, 0xc9, 0x09, 0x35,
	0x18, 0x15, 0x67, 0xc5, 0x26, 0xd4, 0x50, 0xbe, 0x37, 0x57, 0x9e, 0xbb, 0xb6, 0x74, 0xf1, 0x87,
	0xc5, 0xbb, 0x77, 0xd1, 0xeb, 0x20, 0xae, 0x22, 0x1c, 0xd3, 0xad, 0xc3, 0xb2, 0x25, 0x0b, 0x21,
	0xce, 0x28, 0xcd, 0x5c, 0x2f, 0x5d, 0x3d, 0x5d, 0xba, 0x34, 0x5d, 0x3a, 0x33, 0x15, 0x18, 0x22,
	0xae, 0x6b, 0x19, 0x75, 0x40, 0x08, 0x73, 0xc2, 0xd2, 0xd8, 0x99, 0xf2, 0xe3, 0x29, 0x16, 0x62,
	0x77, 0x60, 0x88, 0x14, 0x7d, 0xb9, 0x85, 0x08, 0x6e, 0x2e, 0xce, 0x8a, 0x51, 0x54, 0x5f, 0xba,
	0x7a, 0xc7, 0x7e, 0xf4, 0xa5, 0x7d, 0xeb, 0x3b, 0x14, 0x83, 0xce, 0x55, 0x70, 0xfa, 0x40, 0x7e,
	0x3c, 0x4c, 0x0c, 0x61, 0x13, 0xc7, 0xdb, 0x0f, 0x67, 0xca, 0x73, 0x17, 0x4a, 0x3f, 0x5e, 0x43,
	0x6f, 0x05, 0xe0, 0x8f, 0xe9, 0xee, 0x85, 0x11, 0x6a, 0x71, 0x5b, 0x71, 0x56, 0x6c, 0x41, 0xcd,
	0xf6, 0xc3, 0x19, 0x7b, 0x6c, 0x72, 0xe9, 0x9b, 0xc9, 0xa5, 0x1b, 0xa7, 0xec, 0xa9, 0x89, 0x40,
	0x16, 0xfb, 0x76, 0x54, 0x84, 0xcd, 0x1e, 0xeb, 0xa7, 0xcb, 0xf6, 0x85, 0xaf, 0xec, 0x87, 0x33,
	0x94, 0x75, 0xf6, 0x32, 0xda, 0x07, 0x5b, 0x83, 0x4e, 0x2b, 0xae, 0xe7, 0x86, 0xb2, 0xc4, 0x22,
	0x42, 0x1d, 0x27, 0x96, 0x26, 0xce, 0x97, 0xc6, 0xbf, 0xa7, 0x49, 0x4d, 0x4d, 0x94, 0xc6, 0xcf,
	0xa1, 0x37, 0x02, 0x45, 0x5a, 0xce, 0x13, 0x27, 0x6c, 0xf1, 0x2a, 0x73, 0xeb, 0xae, 0x3d, 0x7e,
	0xea, 0xef, 0xdf, 0xce, 0x2c, 0x3e, 0xb8, 0x87, 0x3e, 0x04, 0x69, 0x75, 0x29, 0xdd, 0x27, 0x91,
	0xc9, 0xac, 0xc7, 0x5d, 0xc5, 0x59, 0xb1, 0x03, 0xb5, 0xb9, 0x3c, 0x2a, 0xb6, 0xf8, 0xeb, 0xb2,
	0xd8, 0xa0, 0x42, 0x39, 0xa5, 0x2d, 0x08, 0xe0, 0x55, 0xf6, 0xca, 0x83, 0xa5, 0x2b, 0xf7, 0xa9,
	0xce, 0xf1, 0xe9, 0xe7, 0x89, 0xa4, 0x87, 0x6f, 0x0a, 0x51, 0x8f, 0xf2, 0xcb, 0xf5, 0xd2, 0xa5,
	0x69, 0x26, 0x32, 0x06, 0xed, 0x81, 0xc5, 0x32, 0x85, 0x06, 0x3f, 0x9e, 0xdd, 0x85, 0xbd, 0xd0,
	0x15, 0x10, 0x82, 0xaf, 0x85, 0x46, 0xef, 0xfc, 0xae, 0xde, 0x29, 0x9d, 0xfe, 0xc3, 0x1e, 0x9f,
	0x2e, 0xdd, 0x9f, 0xb3, 0x8b, 0x93, 0x68, 0x7f, 0x20, 0xaf, 0x77, 0x34, 0xee, 0x3c, 0x37, 0x42,
	0x13, 0x16, 0x8b, 0xb3, 0x62, 0x2b, 0x42, 0xe5, 0xd3, 0xb7, 0xdd, 0x82, 0x2d, 0xde, 0xf8, 0xd9,
	0x1e, 0x3b, 0x5f, 0xbe, 0xfd, 0x3b, 0x7a, 0x3b, 0xf0, 0x18, 0x68, 0x47, 0x09, 0xcd, 0x1e, 0xed,
	0xe6, 0x23, 0x7b, 0x62, 0xcc, 0xb9, 0x53, 0x67, 0xed, 0x8b, 0x53, 0xe5, 0xc7, 0xdf, 0x06, 0x66,
	0x76, 0x5c, 0x36, 0xe4, 0x9c, 0x20, 0xf0, 0xcc, 0xec, 0xb3, 0x5f, 0x7b, 0x99, 0x1d, 0x3a, 0xf6,
	0xec, 0x2f, 0xa9, 0x66, 0x72, 0x5e, 0x0a, 0x3d, 0x99, 0x97, 0x42, 0x4f, 0xe7, 0xa5, 0xd0, 0x9f,
	0xf3, 0x52, 0x68, 0x71, 0x5e, 0xaa, 0xf9, 0x67, 0x5e, 0x0a, 0x9d, 0x5b, 0x90, 0x6a, 0x9e, 0x2c,
	0x48, 0xa1, 0xa7, 0x0b, 0x52, 0xcd, 0xb3, 0x05, 0xa9, 0xe6, 0xf3, 0x1d, 0x69, 0x5d, 0xd5, 0x76,
	0xd3, 0x59, 0x4b, 0x8c, 0x9e, 0xb4, 0x9e, 0xcb, 0xe9, 0x5a, 0x8f, 0xef, 0x5f, 0xf5, 0x89, 0xcd,
	0xce, 0xf2, 0xcd, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x85, 0x69, 0x86, 0x2c, 0x6d, 0x0f, 0x00,
	0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_GetActivityInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_GetActivityInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_CastSwordActivationRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_CastSwordActivationResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyChallengeReceiveRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyChallengeReceiveResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyExchangeRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyExchangeResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyGiftRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyGiftResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyRankingListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyRankingListResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklySelfRankingIdRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklySelfRankingIdResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_GetGuildChallengeScoreRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_GetGuildChallengeScoreResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyCastswordCnfRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyCastswordCnfResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyChallengeCnfRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyChallengeCnfResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyExchangeCnfRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyExchangeCnfResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyGiftCnfRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyGiftCnfResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyRankCnfRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyRankCnfResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_BuyGiftPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_WeeklyChallengeGuildRewardsPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_CheatWeeklyRefreshRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_CheatWeeklyRefreshResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_CheatBuyWeeklyGiftRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityWeekly_CheatBuyWeeklyGiftResponse.Get().(proto.Message)
	})
}

var poolActivityWeekly = &sync.Pool{New: func() interface{} { return &ActivityWeekly{} }}

func (m *ActivityWeekly) ReleasePool() { m.Reset(); poolActivityWeekly.Put(m); m = nil }

var poolActivityWeekly_GetActivityInfoRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_GetActivityInfoRequest{} }}

func (m *ActivityWeekly_GetActivityInfoRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_GetActivityInfoRequest.Put(m)
	m = nil
}

var poolActivityWeekly_GetActivityInfoResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_GetActivityInfoResponse{} }}

func (m *ActivityWeekly_GetActivityInfoResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_GetActivityInfoResponse.Put(m)
	m = nil
}

var poolActivityWeekly_CastSwordActivationRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_CastSwordActivationRequest{} }}

func (m *ActivityWeekly_CastSwordActivationRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_CastSwordActivationRequest.Put(m)
	m = nil
}

var poolActivityWeekly_CastSwordActivationResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_CastSwordActivationResponse{} }}

func (m *ActivityWeekly_CastSwordActivationResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_CastSwordActivationResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyChallengeReceiveRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyChallengeReceiveRequest{} }}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyChallengeReceiveRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyChallengeReceiveResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyChallengeReceiveResponse{} }}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyChallengeReceiveResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyExchangeRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyExchangeRequest{} }}

func (m *ActivityWeekly_WeeklyExchangeRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyExchangeRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyExchangeResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyExchangeResponse{} }}

func (m *ActivityWeekly_WeeklyExchangeResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyExchangeResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyGiftRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyGiftRequest{} }}

func (m *ActivityWeekly_WeeklyGiftRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyGiftRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyGiftResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyGiftResponse{} }}

func (m *ActivityWeekly_WeeklyGiftResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyGiftResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyRankingListRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyRankingListRequest{} }}

func (m *ActivityWeekly_WeeklyRankingListRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyRankingListRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyRankingListResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyRankingListResponse{} }}

func (m *ActivityWeekly_WeeklyRankingListResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyRankingListResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklySelfRankingIdRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklySelfRankingIdRequest{} }}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklySelfRankingIdRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklySelfRankingIdResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklySelfRankingIdResponse{} }}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklySelfRankingIdResponse.Put(m)
	m = nil
}

var poolActivityWeekly_GetGuildChallengeScoreRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_GetGuildChallengeScoreRequest{} }}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_GetGuildChallengeScoreRequest.Put(m)
	m = nil
}

var poolActivityWeekly_GetGuildChallengeScoreResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_GetGuildChallengeScoreResponse{} }}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_GetGuildChallengeScoreResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyCastswordCnfRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyCastswordCnfRequest{} }}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyCastswordCnfRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyCastswordCnfResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyCastswordCnfResponse{} }}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyCastswordCnfResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyChallengeCnfRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyChallengeCnfRequest{} }}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyChallengeCnfRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyChallengeCnfResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyChallengeCnfResponse{} }}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyChallengeCnfResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyExchangeCnfRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyExchangeCnfRequest{} }}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyExchangeCnfRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyExchangeCnfResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyExchangeCnfResponse{} }}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyExchangeCnfResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyGiftCnfRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyGiftCnfRequest{} }}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyGiftCnfRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyGiftCnfResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyGiftCnfResponse{} }}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyGiftCnfResponse.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyRankCnfRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyRankCnfRequest{} }}

func (m *ActivityWeekly_WeeklyRankCnfRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyRankCnfRequest.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyRankCnfResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyRankCnfResponse{} }}

func (m *ActivityWeekly_WeeklyRankCnfResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyRankCnfResponse.Put(m)
	m = nil
}

var poolActivityWeekly_BuyGiftPush = &sync.Pool{New: func() interface{} { return &ActivityWeekly_BuyGiftPush{} }}

func (m *ActivityWeekly_BuyGiftPush) ReleasePool() {
	m.Reset()
	poolActivityWeekly_BuyGiftPush.Put(m)
	m = nil
}

var poolActivityWeekly_WeeklyChallengeGuildRewardsPush = &sync.Pool{New: func() interface{} { return &ActivityWeekly_WeeklyChallengeGuildRewardsPush{} }}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) ReleasePool() {
	m.Reset()
	poolActivityWeekly_WeeklyChallengeGuildRewardsPush.Put(m)
	m = nil
}

var poolActivityWeekly_CheatWeeklyRefreshRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_CheatWeeklyRefreshRequest{} }}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_CheatWeeklyRefreshRequest.Put(m)
	m = nil
}

var poolActivityWeekly_CheatWeeklyRefreshResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_CheatWeeklyRefreshResponse{} }}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_CheatWeeklyRefreshResponse.Put(m)
	m = nil
}

var poolActivityWeekly_CheatBuyWeeklyGiftRequest = &sync.Pool{New: func() interface{} { return &ActivityWeekly_CheatBuyWeeklyGiftRequest{} }}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) ReleasePool() {
	m.Reset()
	poolActivityWeekly_CheatBuyWeeklyGiftRequest.Put(m)
	m = nil
}

var poolActivityWeekly_CheatBuyWeeklyGiftResponse = &sync.Pool{New: func() interface{} { return &ActivityWeekly_CheatBuyWeeklyGiftResponse{} }}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) ReleasePool() {
	m.Reset()
	poolActivityWeekly_CheatBuyWeeklyGiftResponse.Put(m)
	m = nil
}
func (x ActivityWeeklyErrorCode) String() string {
	s, ok := ActivityWeeklyErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *ActivityWeekly) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly)
	if !ok {
		that2, ok := that.(ActivityWeekly)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ActivityWeekly_GetActivityInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_GetActivityInfoRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_GetActivityInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_GetActivityInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_GetActivityInfoResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_GetActivityInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *ActivityWeekly_CastSwordActivationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_CastSwordActivationRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_CastSwordActivationRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.Times != that1.Times {
		return false
	}
	return true
}
func (this *ActivityWeekly_CastSwordActivationResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_CastSwordActivationResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_CastSwordActivationResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if !this.Rewards[i].Equal(that1.Rewards[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyChallengeReceiveRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyChallengeReceiveRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyChallengeReceiveRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyChallengeReceiveResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyChallengeReceiveResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyChallengeReceiveResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyExchangeRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyExchangeRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyExchangeRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyExchangeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyExchangeResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyExchangeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyGiftRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyGiftRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyGiftRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyGiftResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyGiftResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyGiftResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyRankingListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyRankingListRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyRankingListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.StartIndex != that1.StartIndex {
		return false
	}
	if this.Count != that1.Count {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyRankingListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyRankingListResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyRankingListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SelfRankingId != that1.SelfRankingId {
		return false
	}
	if len(this.RankingInfos) != len(that1.RankingInfos) {
		return false
	}
	for i := range this.RankingInfos {
		if !this.RankingInfos[i].Equal(that1.RankingInfos[i]) {
			return false
		}
	}
	if this.NextRefreshTime != that1.NextRefreshTime {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklySelfRankingIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklySelfRankingIdRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklySelfRankingIdRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklySelfRankingIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklySelfRankingIdResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklySelfRankingIdResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SelfRankingId != that1.SelfRankingId {
		return false
	}
	return true
}
func (this *ActivityWeekly_GetGuildChallengeScoreRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_GetGuildChallengeScoreRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_GetGuildChallengeScoreRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	if this.GuildId != that1.GuildId {
		return false
	}
	return true
}
func (this *ActivityWeekly_GetGuildChallengeScoreResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_GetGuildChallengeScoreResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_GetGuildChallengeScoreResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Score != that1.Score {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyCastswordCnfRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyCastswordCnfRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyCastswordCnfRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyCastswordCnfResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyCastswordCnfResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyCastswordCnfResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cnf) != len(that1.Cnf) {
		return false
	}
	for i := range this.Cnf {
		if !this.Cnf[i].Equal(that1.Cnf[i]) {
			return false
		}
	}
	if this.CastswordDraw != that1.CastswordDraw {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyChallengeCnfRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyChallengeCnfRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyChallengeCnfRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyChallengeCnfResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyChallengeCnfResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyChallengeCnfResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cnf) != len(that1.Cnf) {
		return false
	}
	for i := range this.Cnf {
		if !this.Cnf[i].Equal(that1.Cnf[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyExchangeCnfRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyExchangeCnfRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyExchangeCnfRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyExchangeCnfResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyExchangeCnfResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyExchangeCnfResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cnf) != len(that1.Cnf) {
		return false
	}
	for i := range this.Cnf {
		if !this.Cnf[i].Equal(that1.Cnf[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyGiftCnfRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyGiftCnfRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyGiftCnfRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyGiftCnfResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyGiftCnfResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyGiftCnfResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cnf) != len(that1.Cnf) {
		return false
	}
	for i := range this.Cnf {
		if !this.Cnf[i].Equal(that1.Cnf[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyRankCnfRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyRankCnfRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyRankCnfRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_WeeklyRankCnfResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyRankCnfResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyRankCnfResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cnf) != len(that1.Cnf) {
		return false
	}
	for i := range this.Cnf {
		if !this.Cnf[i].Equal(that1.Cnf[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_BuyGiftPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_BuyGiftPush)
	if !ok {
		that2, ok := that.(ActivityWeekly_BuyGiftPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_WeeklyChallengeGuildRewardsPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_WeeklyChallengeGuildRewardsPush)
	if !ok {
		that2, ok := that.(ActivityWeekly_WeeklyChallengeGuildRewardsPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.GuildId != that1.GuildId {
		return false
	}
	if len(this.GuildRewards) != len(that1.GuildRewards) {
		return false
	}
	for i := range this.GuildRewards {
		if this.GuildRewards[i] != that1.GuildRewards[i] {
			return false
		}
	}
	return true
}
func (this *ActivityWeekly_CheatWeeklyRefreshRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_CheatWeeklyRefreshRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_CheatWeeklyRefreshRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	return true
}
func (this *ActivityWeekly_CheatWeeklyRefreshResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_CheatWeeklyRefreshResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_CheatWeeklyRefreshResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *ActivityWeekly_CheatBuyWeeklyGiftRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_CheatBuyWeeklyGiftRequest)
	if !ok {
		that2, ok := that.(ActivityWeekly_CheatBuyWeeklyGiftRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ActivityId != that1.ActivityId {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *ActivityWeekly_CheatBuyWeeklyGiftResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityWeekly_CheatBuyWeeklyGiftResponse)
	if !ok {
		that2, ok := that.(ActivityWeekly_CheatBuyWeeklyGiftResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *ActivityWeekly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_GetActivityInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_GetActivityInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_GetActivityInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_GetActivityInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_GetActivityInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_GetActivityInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_CastSwordActivationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_CastSwordActivationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_CastSwordActivationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Times != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Times))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_CastSwordActivationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_CastSwordActivationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_CastSwordActivationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for iNdEx := len(m.Rewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyExchangeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyExchangeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyExchangeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyExchangeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyExchangeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyExchangeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyGiftRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyGiftRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyGiftRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyGiftResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyGiftResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyGiftResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyRankingListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyRankingListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyRankingListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Count != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x18
	}
	if m.StartIndex != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.StartIndex))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyRankingListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyRankingListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyRankingListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NextRefreshTime != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.NextRefreshTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.RankingInfos) > 0 {
		for iNdEx := len(m.RankingInfos) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RankingInfos[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.SelfRankingId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.SelfRankingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SelfRankingId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.SelfRankingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintActivityWeekly(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Version != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Score != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CastswordDraw) > 0 {
		i -= len(m.CastswordDraw)
		copy(dAtA[i:], m.CastswordDraw)
		i = encodeVarintActivityWeekly(dAtA, i, uint64(len(m.CastswordDraw)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cnf) > 0 {
		for iNdEx := len(m.Cnf) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cnf[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for iNdEx := len(m.Cnf) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cnf[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for iNdEx := len(m.Cnf) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cnf[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for iNdEx := len(m.Cnf) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cnf[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyRankCnfRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyRankCnfRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyRankCnfRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyRankCnfResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyRankCnfResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyRankCnfResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for iNdEx := len(m.Cnf) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cnf[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_BuyGiftPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_BuyGiftPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_BuyGiftPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Id != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GuildRewards) > 0 {
		for k := range m.GuildRewards {
			v := m.GuildRewards[k]
			baseI := i
			i = encodeVarintActivityWeekly(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintActivityWeekly(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintActivityWeekly(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintActivityWeekly(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityWeekly(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if m.ActivityId != 0 {
		i = encodeVarintActivityWeekly(dAtA, i, uint64(m.ActivityId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintActivityWeekly(dAtA []byte, offset int, v uint64) int {
	offset -= sovActivityWeekly(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *ActivityWeekly) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *ActivityWeekly_GetActivityInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_GetActivityInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_CastSwordActivationRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.Times != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("times")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Times))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_CastSwordActivationResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Rewards {
			v.JsonBytes(w)
			if i != len(m.Rewards)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.Id != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyExchangeRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.Id != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyExchangeResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyGiftRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.Id != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyGiftResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyRankingListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.StartIndex != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("start_index")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.StartIndex))
		needWriteComma = true
	}
	if m.Count != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Count))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyRankingListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.SelfRankingId != 0 {
		w.RawByte('"')
		w.RawString("self_ranking_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SelfRankingId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("ranking_infos")
	w.RawByte('"')
	w.RawByte(':')
	if m.RankingInfos == nil {
		w.RawString("null")
	} else if len(m.RankingInfos) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.RankingInfos {
			v.JsonBytes(w)
			if i != len(m.RankingInfos)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.NextRefreshTime != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("next_refresh_time")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.NextRefreshTime))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.SelfRankingId != 0 {
		w.RawByte('"')
		w.RawString("self_ranking_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SelfRankingId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.Version != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("version")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Version))
		needWriteComma = true
	}
	if m.GuildId != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("guild_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.GuildId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Score != 0 {
		w.RawByte('"')
		w.RawString("score")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Score))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cnf")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cnf == nil {
		w.RawString("null")
	} else if len(m.Cnf) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cnf {
			v.JsonBytes(w)
			if i != len(m.Cnf)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.CastswordDraw != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("CastswordDraw")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.CastswordDraw)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cnf")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cnf == nil {
		w.RawString("null")
	} else if len(m.Cnf) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cnf {
			v.JsonBytes(w)
			if i != len(m.Cnf)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cnf")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cnf == nil {
		w.RawString("null")
	} else if len(m.Cnf) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cnf {
			v.JsonBytes(w)
			if i != len(m.Cnf)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cnf")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cnf == nil {
		w.RawString("null")
	} else if len(m.Cnf) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cnf {
			v.JsonBytes(w)
			if i != len(m.Cnf)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyRankCnfRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyRankCnfResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cnf")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cnf == nil {
		w.RawString("null")
	} else if len(m.Cnf) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Cnf {
			v.JsonBytes(w)
			if i != len(m.Cnf)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_BuyGiftPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != 0 {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("items")
	w.RawByte('"')
	w.RawByte(':')
	if m.Items == nil {
		w.RawString("null")
	} else if len(m.Items) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Items {
			v.JsonBytes(w)
			if i != len(m.Items)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.GuildId != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("guild_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.GuildId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("guild_rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.GuildRewards == nil {
		w.RawString("null")
	} else if len(m.GuildRewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlGuildRewards := len(m.GuildRewards)
		for k, v := range m.GuildRewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlGuildRewards--
			if mlGuildRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.ActivityId != 0 {
		w.RawByte('"')
		w.RawString("activity_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ActivityId))
		needWriteComma = true
	}
	if m.Id != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *ActivityWeekly) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_GetActivityInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_GetActivityInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_GetActivityInfoRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_GetActivityInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_GetActivityInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_GetActivityInfoResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_CastSwordActivationRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_CastSwordActivationRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_CastSwordActivationRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_CastSwordActivationResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_CastSwordActivationResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_CastSwordActivationResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyExchangeRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyExchangeRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyExchangeRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyExchangeResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyExchangeResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyExchangeResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyGiftRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyGiftRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyGiftRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyGiftResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyGiftResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyGiftResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyRankingListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyRankingListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyRankingListRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyRankingListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyRankingListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyRankingListResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyRankCnfRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyRankCnfResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_BuyGiftPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_BuyGiftPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_BuyGiftPush) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) GoString() string {
	return m.String()
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) GoString() string {
	return m.String()
}

func (m *ActivityWeekly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivityWeekly_GetActivityInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_GetActivityInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	return n
}

func (m *ActivityWeekly_CastSwordActivationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.Times != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Times))
	}
	return n
}

func (m *ActivityWeekly_CastSwordActivationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	if len(m.Rewards) > 0 {
		for _, e := range m.Rewards {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.Id != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Id))
	}
	return n
}

func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyExchangeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.Id != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Id))
	}
	return n
}

func (m *ActivityWeekly_WeeklyExchangeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyGiftRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.Id != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Id))
	}
	return n
}

func (m *ActivityWeekly_WeeklyGiftResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	return n
}

func (m *ActivityWeekly_WeeklyRankingListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.StartIndex != 0 {
		n += 1 + sovActivityWeekly(uint64(m.StartIndex))
	}
	if m.Count != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Count))
	}
	return n
}

func (m *ActivityWeekly_WeeklyRankingListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SelfRankingId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.SelfRankingId))
	}
	if len(m.RankingInfos) > 0 {
		for _, e := range m.RankingInfos {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	if m.NextRefreshTime != 0 {
		n += 1 + sovActivityWeekly(uint64(m.NextRefreshTime))
	}
	return n
}

func (m *ActivityWeekly_WeeklySelfRankingIdRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_WeeklySelfRankingIdResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SelfRankingId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.SelfRankingId))
	}
	return n
}

func (m *ActivityWeekly_GetGuildChallengeScoreRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.Version != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Version))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	return n
}

func (m *ActivityWeekly_GetGuildChallengeScoreResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Score != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Score))
	}
	return n
}

func (m *ActivityWeekly_WeeklyCastswordCnfRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivityWeekly_WeeklyCastswordCnfResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for _, e := range m.Cnf {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	l = len(m.CastswordDraw)
	if l > 0 {
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	return n
}

func (m *ActivityWeekly_WeeklyChallengeCnfRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_WeeklyChallengeCnfResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for _, e := range m.Cnf {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyExchangeCnfRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_WeeklyExchangeCnfResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for _, e := range m.Cnf {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyGiftCnfRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_WeeklyGiftCnfResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for _, e := range m.Cnf {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyRankCnfRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_WeeklyRankCnfResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cnf) > 0 {
		for _, e := range m.Cnf {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_BuyGiftPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Id))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovActivityWeekly(uint64(l))
		}
	}
	return n
}

func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	if len(m.GuildRewards) > 0 {
		for k, v := range m.GuildRewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovActivityWeekly(uint64(k)) + 1 + sovActivityWeekly(uint64(v))
			n += mapEntrySize + 1 + sovActivityWeekly(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *ActivityWeekly_CheatWeeklyRefreshRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	return n
}

func (m *ActivityWeekly_CheatWeeklyRefreshResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovActivityWeekly(uint64(l))
	}
	return n
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivityId != 0 {
		n += 1 + sovActivityWeekly(uint64(m.ActivityId))
	}
	if m.Id != 0 {
		n += 1 + sovActivityWeekly(uint64(m.Id))
	}
	return n
}

func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovActivityWeekly(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozActivityWeekly(x uint64) (n int) {
	return sovActivityWeekly(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ActivityWeekly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityWeekly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityWeekly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_GetActivityInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetActivityInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetActivityInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_GetActivityInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetActivityInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetActivityInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.ActivityWeekly{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_CastSwordActivationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CastSwordActivationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CastSwordActivationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Times", wireType)
			}
			m.Times = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Times |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_CastSwordActivationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CastSwordActivationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CastSwordActivationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.ActivityWeekly{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rewards = append(m.Rewards, &models.WeeklyItems{})
			if err := m.Rewards[len(m.Rewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyChallengeReceiveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyChallengeReceiveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyChallengeReceiveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyChallengeReceiveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyChallengeReceiveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyChallengeReceiveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.ActivityWeekly{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyExchangeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyExchangeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyExchangeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyExchangeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyExchangeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyExchangeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.ActivityWeekly{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyGiftRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyGiftRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyGiftRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyGiftResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyGiftResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyGiftResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.ActivityWeekly{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyRankingListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyRankingListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyRankingListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartIndex", wireType)
			}
			m.StartIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyRankingListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyRankingListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyRankingListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfRankingId", wireType)
			}
			m.SelfRankingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SelfRankingId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingInfos = append(m.RankingInfos, &models.ArenaInfo{})
			if err := m.RankingInfos[len(m.RankingInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextRefreshTime", wireType)
			}
			m.NextRefreshTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextRefreshTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklySelfRankingIdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySelfRankingIdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySelfRankingIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklySelfRankingIdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklySelfRankingIdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklySelfRankingIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfRankingId", wireType)
			}
			m.SelfRankingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SelfRankingId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_GetGuildChallengeScoreRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGuildChallengeScoreRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGuildChallengeScoreRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_GetGuildChallengeScoreResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGuildChallengeScoreResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGuildChallengeScoreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyCastswordCnfRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyCastswordCnfRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyCastswordCnfRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyCastswordCnfResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyCastswordCnfResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyCastswordCnfResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cnf", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cnf = append(m.Cnf, &models.WeeklyCastswordCnf{})
			if err := m.Cnf[len(m.Cnf)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CastswordDraw", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CastswordDraw = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyChallengeCnfRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyChallengeCnfRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyChallengeCnfRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyChallengeCnfResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyChallengeCnfResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyChallengeCnfResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cnf", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cnf = append(m.Cnf, &models.WeeklyChallengeCnf{})
			if err := m.Cnf[len(m.Cnf)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyExchangeCnfRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyExchangeCnfRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyExchangeCnfRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyExchangeCnfResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyExchangeCnfResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyExchangeCnfResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cnf", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cnf = append(m.Cnf, &models.WeeklyExchangeCnf{})
			if err := m.Cnf[len(m.Cnf)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyGiftCnfRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyGiftCnfRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyGiftCnfRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyGiftCnfResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyGiftCnfResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyGiftCnfResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cnf", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cnf = append(m.Cnf, &models.WeeklyGiftCnf{})
			if err := m.Cnf[len(m.Cnf)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyRankCnfRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyRankCnfRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyRankCnfRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyRankCnfResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyRankCnfResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyRankCnfResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cnf", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cnf = append(m.Cnf, &models.WeeklyRankCnf{})
			if err := m.Cnf[len(m.Cnf)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_BuyGiftPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyGiftPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyGiftPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &models.Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_WeeklyChallengeGuildRewardsPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeeklyChallengeGuildRewardsPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeeklyChallengeGuildRewardsPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuildRewards == nil {
				m.GuildRewards = make(map[int64]models.RewardStatus)
			}
			var mapkey int64
			var mapvalue models.RewardStatus
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivityWeekly
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivityWeekly
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivityWeekly
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= models.RewardStatus(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipActivityWeekly(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthActivityWeekly
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.GuildRewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_CheatWeeklyRefreshRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatWeeklyRefreshRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatWeeklyRefreshRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_CheatWeeklyRefreshResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatWeeklyRefreshResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatWeeklyRefreshResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.ActivityWeekly{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatBuyWeeklyGiftRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatBuyWeeklyGiftRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityId", wireType)
			}
			m.ActivityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityWeekly_CheatBuyWeeklyGiftResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatBuyWeeklyGiftResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatBuyWeeklyGiftResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivityWeekly(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityWeekly
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipActivityWeekly(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowActivityWeekly
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivityWeekly
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthActivityWeekly
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupActivityWeekly
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthActivityWeekly
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthActivityWeekly        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowActivityWeekly          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupActivityWeekly = fmt.Errorf("proto: unexpected end of group")
)
