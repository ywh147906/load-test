// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/personal_boss.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PersonalBossErrorCode int32

const (
	PersonalBossErrorCode_ErrPersonalBossCompleted             PersonalBossErrorCode = 0
	PersonalBossErrorCode_ErrPersonalBossNotCompleted          PersonalBossErrorCode = 1
	PersonalBossErrorCode_ErrPersonalBossPointNotEnough        PersonalBossErrorCode = 2
	PersonalBossErrorCode_ErrPersonalBossPointUpperLimit       PersonalBossErrorCode = 3
	PersonalBossErrorCode_ErrPersonalBossHelpCountNotEnough    PersonalBossErrorCode = 4
	PersonalBossErrorCode_ErrPersonalBossBeHelpCountNotEnough  PersonalBossErrorCode = 5
	PersonalBossErrorCode_ErrPersonalBossHelpSelf              PersonalBossErrorCode = 6
	PersonalBossErrorCode_ErrPersonalBossHelpShareCd           PersonalBossErrorCode = 7
	PersonalBossErrorCode_ErrPersonalBossHelpMsgExpired        PersonalBossErrorCode = 8
	PersonalBossErrorCode_ErrPersonalBossAlreadyHelp           PersonalBossErrorCode = 9
	PersonalBossErrorCode_ErrPersonalBossAlreadyDrawPassReward PersonalBossErrorCode = 10
)

var PersonalBossErrorCode_name = map[int32]string{
	0:  "ErrPersonalBossCompleted",
	1:  "ErrPersonalBossNotCompleted",
	2:  "ErrPersonalBossPointNotEnough",
	3:  "ErrPersonalBossPointUpperLimit",
	4:  "ErrPersonalBossHelpCountNotEnough",
	5:  "ErrPersonalBossBeHelpCountNotEnough",
	6:  "ErrPersonalBossHelpSelf",
	7:  "ErrPersonalBossHelpShareCd",
	8:  "ErrPersonalBossHelpMsgExpired",
	9:  "ErrPersonalBossAlreadyHelp",
	10: "ErrPersonalBossAlreadyDrawPassReward",
}

var PersonalBossErrorCode_value = map[string]int32{
	"ErrPersonalBossCompleted":             0,
	"ErrPersonalBossNotCompleted":          1,
	"ErrPersonalBossPointNotEnough":        2,
	"ErrPersonalBossPointUpperLimit":       3,
	"ErrPersonalBossHelpCountNotEnough":    4,
	"ErrPersonalBossBeHelpCountNotEnough":  5,
	"ErrPersonalBossHelpSelf":              6,
	"ErrPersonalBossHelpShareCd":           7,
	"ErrPersonalBossHelpMsgExpired":        8,
	"ErrPersonalBossAlreadyHelp":           9,
	"ErrPersonalBossAlreadyDrawPassReward": 10,
}

func (PersonalBossErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0}
}

type PersonalBoss struct {
}

func (m *PersonalBoss) Reset()      { *m = PersonalBoss{} }
func (*PersonalBoss) ProtoMessage() {}
func (*PersonalBoss) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0}
}
func (m *PersonalBoss) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss.Merge(m, src)
}
func (m *PersonalBoss) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss proto.InternalMessageInfo

func (*PersonalBoss) XXX_MessageName() string {
	return "service.PersonalBoss"
}

// 获取个人BOSS信息
type PersonalBoss_PersonalBossInfoRequest struct {
}

func (m *PersonalBoss_PersonalBossInfoRequest) Reset()      { *m = PersonalBoss_PersonalBossInfoRequest{} }
func (*PersonalBoss_PersonalBossInfoRequest) ProtoMessage() {}
func (*PersonalBoss_PersonalBossInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 0}
}
func (m *PersonalBoss_PersonalBossInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossInfoRequest.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossInfoRequest proto.InternalMessageInfo

func (*PersonalBoss_PersonalBossInfoRequest) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossInfoRequest"
}

type PersonalBoss_PersonalBossInfoResponse struct {
	Info *models.PersonalBossInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *PersonalBoss_PersonalBossInfoResponse) Reset()      { *m = PersonalBoss_PersonalBossInfoResponse{} }
func (*PersonalBoss_PersonalBossInfoResponse) ProtoMessage() {}
func (*PersonalBoss_PersonalBossInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 1}
}
func (m *PersonalBoss_PersonalBossInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossInfoResponse.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossInfoResponse proto.InternalMessageInfo

func (m *PersonalBoss_PersonalBossInfoResponse) GetInfo() *models.PersonalBossInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*PersonalBoss_PersonalBossInfoResponse) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossInfoResponse"
}

// 个人BOSS开始挑战
type PersonalBoss_PersonalBossStartRequest struct {
}

func (m *PersonalBoss_PersonalBossStartRequest) Reset()      { *m = PersonalBoss_PersonalBossStartRequest{} }
func (*PersonalBoss_PersonalBossStartRequest) ProtoMessage() {}
func (*PersonalBoss_PersonalBossStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 2}
}
func (m *PersonalBoss_PersonalBossStartRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossStartRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossStartRequest.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossStartRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossStartRequest proto.InternalMessageInfo

func (*PersonalBoss_PersonalBossStartRequest) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossStartRequest"
}

type PersonalBoss_PersonalBossStartResponse struct {
	BattleId int64                     `protobuf:"varint,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	Sbp      *models.SingleBattleParam `protobuf:"bytes,2,opt,name=sbp,proto3" json:"sbp,omitempty"`
}

func (m *PersonalBoss_PersonalBossStartResponse) Reset() {
	*m = PersonalBoss_PersonalBossStartResponse{}
}
func (*PersonalBoss_PersonalBossStartResponse) ProtoMessage() {}
func (*PersonalBoss_PersonalBossStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 3}
}
func (m *PersonalBoss_PersonalBossStartResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossStartResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossStartResponse.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossStartResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossStartResponse proto.InternalMessageInfo

func (m *PersonalBoss_PersonalBossStartResponse) GetBattleId() int64 {
	if m != nil {
		return m.BattleId
	}
	return 0
}

func (m *PersonalBoss_PersonalBossStartResponse) GetSbp() *models.SingleBattleParam {
	if m != nil {
		return m.Sbp
	}
	return nil
}

func (*PersonalBoss_PersonalBossStartResponse) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossStartResponse"
}

// 个人BOSS结束
type PersonalBoss_PersonalBossFinishRequest struct {
	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (m *PersonalBoss_PersonalBossFinishRequest) Reset() {
	*m = PersonalBoss_PersonalBossFinishRequest{}
}
func (*PersonalBoss_PersonalBossFinishRequest) ProtoMessage() {}
func (*PersonalBoss_PersonalBossFinishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 4}
}
func (m *PersonalBoss_PersonalBossFinishRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossFinishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossFinishRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossFinishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossFinishRequest.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossFinishRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossFinishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossFinishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossFinishRequest proto.InternalMessageInfo

func (m *PersonalBoss_PersonalBossFinishRequest) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (*PersonalBoss_PersonalBossFinishRequest) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossFinishRequest"
}

type PersonalBoss_PersonalBossFinishResponse struct {
	Rewards map[int64]int64 `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *PersonalBoss_PersonalBossFinishResponse) Reset() {
	*m = PersonalBoss_PersonalBossFinishResponse{}
}
func (*PersonalBoss_PersonalBossFinishResponse) ProtoMessage() {}
func (*PersonalBoss_PersonalBossFinishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 5}
}
func (m *PersonalBoss_PersonalBossFinishResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossFinishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossFinishResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossFinishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossFinishResponse.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossFinishResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossFinishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossFinishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossFinishResponse proto.InternalMessageInfo

func (m *PersonalBoss_PersonalBossFinishResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*PersonalBoss_PersonalBossFinishResponse) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossFinishResponse"
}

// 领取最终奖励
type PersonalBoss_DrawPassRewardRequest struct {
}

func (m *PersonalBoss_DrawPassRewardRequest) Reset()      { *m = PersonalBoss_DrawPassRewardRequest{} }
func (*PersonalBoss_DrawPassRewardRequest) ProtoMessage() {}
func (*PersonalBoss_DrawPassRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 6}
}
func (m *PersonalBoss_DrawPassRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_DrawPassRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_DrawPassRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_DrawPassRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_DrawPassRewardRequest.Merge(m, src)
}
func (m *PersonalBoss_DrawPassRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_DrawPassRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_DrawPassRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_DrawPassRewardRequest proto.InternalMessageInfo

func (*PersonalBoss_DrawPassRewardRequest) XXX_MessageName() string {
	return "service.PersonalBoss.DrawPassRewardRequest"
}

type PersonalBoss_DrawPassRewardResponse struct {
	Rewards map[int64]int64 `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *PersonalBoss_DrawPassRewardResponse) Reset()      { *m = PersonalBoss_DrawPassRewardResponse{} }
func (*PersonalBoss_DrawPassRewardResponse) ProtoMessage() {}
func (*PersonalBoss_DrawPassRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 7}
}
func (m *PersonalBoss_DrawPassRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_DrawPassRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_DrawPassRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_DrawPassRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_DrawPassRewardResponse.Merge(m, src)
}
func (m *PersonalBoss_DrawPassRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_DrawPassRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_DrawPassRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_DrawPassRewardResponse proto.InternalMessageInfo

func (m *PersonalBoss_DrawPassRewardResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*PersonalBoss_DrawPassRewardResponse) XXX_MessageName() string {
	return "service.PersonalBoss.DrawPassRewardResponse"
}

// 保存助战效果方案
type PersonalBoss_SaveHelperCardsRequest struct {
	Cards map[int64]int64 `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *PersonalBoss_SaveHelperCardsRequest) Reset()      { *m = PersonalBoss_SaveHelperCardsRequest{} }
func (*PersonalBoss_SaveHelperCardsRequest) ProtoMessage() {}
func (*PersonalBoss_SaveHelperCardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 8}
}
func (m *PersonalBoss_SaveHelperCardsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_SaveHelperCardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_SaveHelperCardsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_SaveHelperCardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_SaveHelperCardsRequest.Merge(m, src)
}
func (m *PersonalBoss_SaveHelperCardsRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_SaveHelperCardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_SaveHelperCardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_SaveHelperCardsRequest proto.InternalMessageInfo

func (m *PersonalBoss_SaveHelperCardsRequest) GetCards() map[int64]int64 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (*PersonalBoss_SaveHelperCardsRequest) XXX_MessageName() string {
	return "service.PersonalBoss.SaveHelperCardsRequest"
}

type PersonalBoss_SaveHelperCardsResponse struct {
}

func (m *PersonalBoss_SaveHelperCardsResponse) Reset()      { *m = PersonalBoss_SaveHelperCardsResponse{} }
func (*PersonalBoss_SaveHelperCardsResponse) ProtoMessage() {}
func (*PersonalBoss_SaveHelperCardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 9}
}
func (m *PersonalBoss_SaveHelperCardsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_SaveHelperCardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_SaveHelperCardsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_SaveHelperCardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_SaveHelperCardsResponse.Merge(m, src)
}
func (m *PersonalBoss_SaveHelperCardsResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_SaveHelperCardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_SaveHelperCardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_SaveHelperCardsResponse proto.InternalMessageInfo

func (*PersonalBoss_SaveHelperCardsResponse) XXX_MessageName() string {
	return "service.PersonalBoss.SaveHelperCardsResponse"
}

// 获取我的助战信息
type PersonalBoss_PersonalBossHelperInfoRequest struct {
}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) Reset() {
	*m = PersonalBoss_PersonalBossHelperInfoRequest{}
}
func (*PersonalBoss_PersonalBossHelperInfoRequest) ProtoMessage() {}
func (*PersonalBoss_PersonalBossHelperInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 10}
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoRequest.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoRequest proto.InternalMessageInfo

func (*PersonalBoss_PersonalBossHelperInfoRequest) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossHelperInfoRequest"
}

type PersonalBoss_PersonalBossHelperInfoResponse struct {
	Info *models.PersonalBossHelperInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) Reset() {
	*m = PersonalBoss_PersonalBossHelperInfoResponse{}
}
func (*PersonalBoss_PersonalBossHelperInfoResponse) ProtoMessage() {}
func (*PersonalBoss_PersonalBossHelperInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 11}
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoResponse.Merge(m, src)
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_PersonalBossHelperInfoResponse proto.InternalMessageInfo

func (m *PersonalBoss_PersonalBossHelperInfoResponse) GetInfo() *models.PersonalBossHelperInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*PersonalBoss_PersonalBossHelperInfoResponse) XXX_MessageName() string {
	return "service.PersonalBoss.PersonalBossHelperInfoResponse"
}

// 向聊天频道发送助力申请
type PersonalBoss_SendHelpMessageRequest struct {
	Channels []bool `protobuf:"varint,1,rep,packed,name=channels,proto3" json:"channels,omitempty"`
}

func (m *PersonalBoss_SendHelpMessageRequest) Reset()      { *m = PersonalBoss_SendHelpMessageRequest{} }
func (*PersonalBoss_SendHelpMessageRequest) ProtoMessage() {}
func (*PersonalBoss_SendHelpMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 12}
}
func (m *PersonalBoss_SendHelpMessageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_SendHelpMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_SendHelpMessageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_SendHelpMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_SendHelpMessageRequest.Merge(m, src)
}
func (m *PersonalBoss_SendHelpMessageRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_SendHelpMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_SendHelpMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_SendHelpMessageRequest proto.InternalMessageInfo

func (m *PersonalBoss_SendHelpMessageRequest) GetChannels() []bool {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (*PersonalBoss_SendHelpMessageRequest) XXX_MessageName() string {
	return "service.PersonalBoss.SendHelpMessageRequest"
}

type PersonalBoss_SendHelpMessageResponse struct {
	Cd int64 `protobuf:"varint,1,opt,name=cd,proto3" json:"cd,omitempty"`
}

func (m *PersonalBoss_SendHelpMessageResponse) Reset()      { *m = PersonalBoss_SendHelpMessageResponse{} }
func (*PersonalBoss_SendHelpMessageResponse) ProtoMessage() {}
func (*PersonalBoss_SendHelpMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 13}
}
func (m *PersonalBoss_SendHelpMessageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_SendHelpMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_SendHelpMessageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_SendHelpMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_SendHelpMessageResponse.Merge(m, src)
}
func (m *PersonalBoss_SendHelpMessageResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_SendHelpMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_SendHelpMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_SendHelpMessageResponse proto.InternalMessageInfo

func (m *PersonalBoss_SendHelpMessageResponse) GetCd() int64 {
	if m != nil {
		return m.Cd
	}
	return 0
}

func (*PersonalBoss_SendHelpMessageResponse) XXX_MessageName() string {
	return "service.PersonalBoss.SendHelpMessageResponse"
}

// 助力其他玩家
type PersonalBoss_HelpPersonalBossRequest struct {
	RoleId    string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	HelpMsgId string `protobuf:"bytes,2,opt,name=help_msg_id,json=helpMsgId,proto3" json:"help_msg_id,omitempty"`
}

func (m *PersonalBoss_HelpPersonalBossRequest) Reset()      { *m = PersonalBoss_HelpPersonalBossRequest{} }
func (*PersonalBoss_HelpPersonalBossRequest) ProtoMessage() {}
func (*PersonalBoss_HelpPersonalBossRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 14}
}
func (m *PersonalBoss_HelpPersonalBossRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_HelpPersonalBossRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_HelpPersonalBossRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_HelpPersonalBossRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_HelpPersonalBossRequest.Merge(m, src)
}
func (m *PersonalBoss_HelpPersonalBossRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_HelpPersonalBossRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_HelpPersonalBossRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_HelpPersonalBossRequest proto.InternalMessageInfo

func (m *PersonalBoss_HelpPersonalBossRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *PersonalBoss_HelpPersonalBossRequest) GetHelpMsgId() string {
	if m != nil {
		return m.HelpMsgId
	}
	return ""
}

func (*PersonalBoss_HelpPersonalBossRequest) XXX_MessageName() string {
	return "service.PersonalBoss.HelpPersonalBossRequest"
}

type PersonalBoss_HelpPersonalBossResponse struct {
	Hm          *models.HelpMessage `protobuf:"bytes,1,opt,name=hm,proto3" json:"hm,omitempty"`
	MyHelpCount int64               `protobuf:"varint,2,opt,name=my_help_count,json=myHelpCount,proto3" json:"my_help_count,omitempty"`
}

func (m *PersonalBoss_HelpPersonalBossResponse) Reset()      { *m = PersonalBoss_HelpPersonalBossResponse{} }
func (*PersonalBoss_HelpPersonalBossResponse) ProtoMessage() {}
func (*PersonalBoss_HelpPersonalBossResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 15}
}
func (m *PersonalBoss_HelpPersonalBossResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_HelpPersonalBossResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_HelpPersonalBossResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_HelpPersonalBossResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_HelpPersonalBossResponse.Merge(m, src)
}
func (m *PersonalBoss_HelpPersonalBossResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_HelpPersonalBossResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_HelpPersonalBossResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_HelpPersonalBossResponse proto.InternalMessageInfo

func (m *PersonalBoss_HelpPersonalBossResponse) GetHm() *models.HelpMessage {
	if m != nil {
		return m.Hm
	}
	return nil
}

func (m *PersonalBoss_HelpPersonalBossResponse) GetMyHelpCount() int64 {
	if m != nil {
		return m.MyHelpCount
	}
	return 0
}

func (*PersonalBoss_HelpPersonalBossResponse) XXX_MessageName() string {
	return "service.PersonalBoss.HelpPersonalBossResponse"
}

// 钻石购买点数
type PersonalBoss_BuyPersonalBossPointRequest struct {
}

func (m *PersonalBoss_BuyPersonalBossPointRequest) Reset() {
	*m = PersonalBoss_BuyPersonalBossPointRequest{}
}
func (*PersonalBoss_BuyPersonalBossPointRequest) ProtoMessage() {}
func (*PersonalBoss_BuyPersonalBossPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 16}
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_BuyPersonalBossPointRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_BuyPersonalBossPointRequest.Merge(m, src)
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_BuyPersonalBossPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_BuyPersonalBossPointRequest proto.InternalMessageInfo

func (*PersonalBoss_BuyPersonalBossPointRequest) XXX_MessageName() string {
	return "service.PersonalBoss.BuyPersonalBossPointRequest"
}

type PersonalBoss_BuyPersonalBossPointResponse struct {
}

func (m *PersonalBoss_BuyPersonalBossPointResponse) Reset() {
	*m = PersonalBoss_BuyPersonalBossPointResponse{}
}
func (*PersonalBoss_BuyPersonalBossPointResponse) ProtoMessage() {}
func (*PersonalBoss_BuyPersonalBossPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 17}
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_BuyPersonalBossPointResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_BuyPersonalBossPointResponse.Merge(m, src)
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_BuyPersonalBossPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_BuyPersonalBossPointResponse proto.InternalMessageInfo

func (*PersonalBoss_BuyPersonalBossPointResponse) XXX_MessageName() string {
	return "service.PersonalBoss.BuyPersonalBossPointResponse"
}

//---------------------- push ----------------------//
// 增加助战点推送
type PersonalBoss_AddHelpPointPush struct {
	Point int64 `protobuf:"varint,1,opt,name=point,proto3" json:"point,omitempty"`
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (m *PersonalBoss_AddHelpPointPush) Reset()      { *m = PersonalBoss_AddHelpPointPush{} }
func (*PersonalBoss_AddHelpPointPush) ProtoMessage() {}
func (*PersonalBoss_AddHelpPointPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f7d38123e8b933, []int{0, 18}
}
func (m *PersonalBoss_AddHelpPointPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBoss_AddHelpPointPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBoss_AddHelpPointPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBoss_AddHelpPointPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBoss_AddHelpPointPush.Merge(m, src)
}
func (m *PersonalBoss_AddHelpPointPush) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBoss_AddHelpPointPush) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBoss_AddHelpPointPush.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBoss_AddHelpPointPush proto.InternalMessageInfo

func (m *PersonalBoss_AddHelpPointPush) GetPoint() int64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *PersonalBoss_AddHelpPointPush) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (*PersonalBoss_AddHelpPointPush) XXX_MessageName() string {
	return "service.PersonalBoss.AddHelpPointPush"
}
func init() {
	proto.RegisterEnum("service.PersonalBossErrorCode", PersonalBossErrorCode_name, PersonalBossErrorCode_value)
	proto.RegisterType((*PersonalBoss)(nil), "service.PersonalBoss")
	proto.RegisterType((*PersonalBoss_PersonalBossInfoRequest)(nil), "service.PersonalBoss.PersonalBossInfoRequest")
	proto.RegisterType((*PersonalBoss_PersonalBossInfoResponse)(nil), "service.PersonalBoss.PersonalBossInfoResponse")
	proto.RegisterType((*PersonalBoss_PersonalBossStartRequest)(nil), "service.PersonalBoss.PersonalBossStartRequest")
	proto.RegisterType((*PersonalBoss_PersonalBossStartResponse)(nil), "service.PersonalBoss.PersonalBossStartResponse")
	proto.RegisterType((*PersonalBoss_PersonalBossFinishRequest)(nil), "service.PersonalBoss.PersonalBossFinishRequest")
	proto.RegisterType((*PersonalBoss_PersonalBossFinishResponse)(nil), "service.PersonalBoss.PersonalBossFinishResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.PersonalBoss.PersonalBossFinishResponse.RewardsEntry")
	proto.RegisterType((*PersonalBoss_DrawPassRewardRequest)(nil), "service.PersonalBoss.DrawPassRewardRequest")
	proto.RegisterType((*PersonalBoss_DrawPassRewardResponse)(nil), "service.PersonalBoss.DrawPassRewardResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.PersonalBoss.DrawPassRewardResponse.RewardsEntry")
	proto.RegisterType((*PersonalBoss_SaveHelperCardsRequest)(nil), "service.PersonalBoss.SaveHelperCardsRequest")
	proto.RegisterMapType((map[int64]int64)(nil), "service.PersonalBoss.SaveHelperCardsRequest.CardsEntry")
	proto.RegisterType((*PersonalBoss_SaveHelperCardsResponse)(nil), "service.PersonalBoss.SaveHelperCardsResponse")
	proto.RegisterType((*PersonalBoss_PersonalBossHelperInfoRequest)(nil), "service.PersonalBoss.PersonalBossHelperInfoRequest")
	proto.RegisterType((*PersonalBoss_PersonalBossHelperInfoResponse)(nil), "service.PersonalBoss.PersonalBossHelperInfoResponse")
	proto.RegisterType((*PersonalBoss_SendHelpMessageRequest)(nil), "service.PersonalBoss.SendHelpMessageRequest")
	proto.RegisterType((*PersonalBoss_SendHelpMessageResponse)(nil), "service.PersonalBoss.SendHelpMessageResponse")
	proto.RegisterType((*PersonalBoss_HelpPersonalBossRequest)(nil), "service.PersonalBoss.HelpPersonalBossRequest")
	proto.RegisterType((*PersonalBoss_HelpPersonalBossResponse)(nil), "service.PersonalBoss.HelpPersonalBossResponse")
	proto.RegisterType((*PersonalBoss_BuyPersonalBossPointRequest)(nil), "service.PersonalBoss.BuyPersonalBossPointRequest")
	proto.RegisterType((*PersonalBoss_BuyPersonalBossPointResponse)(nil), "service.PersonalBoss.BuyPersonalBossPointResponse")
	proto.RegisterType((*PersonalBoss_AddHelpPointPush)(nil), "service.PersonalBoss.AddHelpPointPush")
}

func init() { proto.RegisterFile("proto/service/personal_boss.proto", fileDescriptor_a9f7d38123e8b933) }

var fileDescriptor_a9f7d38123e8b933 = []byte{
	// 1064 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4b, 0x6c, 0x1b, 0x45,
	0x18, 0xf6, 0xda, 0xcd, 0xc3, 0x7f, 0x0a, 0x75, 0x27, 0x4d, 0xbc, 0x9e, 0x90, 0x25, 0x6d, 0x39,
	0x94, 0x97, 0x2d, 0x05, 0xa4, 0x84, 0x48, 0xb4, 0xaa, 0x1d, 0xa3, 0x44, 0x22, 0x21, 0xb2, 0x41,
	0x48, 0x5c, 0xa2, 0x8d, 0x77, 0x12, 0xaf, 0xd8, 0xdd, 0x59, 0x66, 0xd6, 0x29, 0xb9, 0x05, 0x10,
	0x6d, 0x6a, 0x09, 0xd1, 0x0b, 0x15, 0x45, 0x91, 0x50, 0x2b, 0x21, 0xd1, 0x16, 0x04, 0x49, 0xe5,
	0x26, 0xa5, 0xa2, 0x5c, 0x7b, 0xec, 0xb1, 0x47, 0x70, 0x62, 0x27, 0xb9, 0x71, 0xe6, 0x84, 0xf6,
	0x95, 0xac, 0xed, 0xed, 0x05, 0x89, 0x9b, 0xff, 0xf9, 0xff, 0xef, 0x31, 0xdf, 0xec, 0x8c, 0x0c,
	0xa7, 0x4d, 0x46, 0x2d, 0x9a, 0xe1, 0x84, 0x2d, 0xab, 0x25, 0x92, 0x31, 0x09, 0xe3, 0xd4, 0x90,
	0xb5, 0xf9, 0x05, 0xca, 0x79, 0xda, 0xe9, 0xa1, 0x1e, 0xaf, 0x89, 0x93, 0xee, 0xac, 0x4e, 0x15,
	0xa2, 0xf1, 0xcc, 0x82, 0xcc, 0x89, 0x3b, 0x81, 0x47, 0x5a, 0x1a, 0x21, 0x1c, 0x38, 0xd5, 0x06,
	0xb5, 0x2c, 0xcd, 0x03, 0x9f, 0xf9, 0x07, 0xe0, 0xf8, 0x9c, 0x07, 0xc9, 0x52, 0xce, 0x71, 0x0a,
	0x92, 0xc1, 0x7a, 0xda, 0x58, 0xa4, 0x05, 0xf2, 0x49, 0x85, 0x70, 0x0b, 0x4f, 0x81, 0xd8, 0xd9,
	0xe2, 0x26, 0x35, 0x38, 0x41, 0xaf, 0xc1, 0x31, 0xd5, 0x58, 0xa4, 0xa2, 0x30, 0x22, 0x9c, 0xeb,
	0x1b, 0x15, 0xd3, 0xae, 0x56, 0xba, 0x63, 0xde, 0x99, 0xc2, 0xb8, 0x95, 0xa9, 0x68, 0xc9, 0xcc,
	0xf2, 0x55, 0x08, 0xa4, 0x42, 0x7a, 0x9e, 0xcc, 0x10, 0xc4, 0x5d, 0xfb, 0xf3, 0xaa, 0xe2, 0x68,
	0xc5, 0x0a, 0xbd, 0xee, 0xc2, 0xb4, 0x82, 0x5e, 0x85, 0x18, 0x5f, 0x30, 0xc5, 0xa8, 0x63, 0x21,
	0xe5, 0x5b, 0x28, 0xaa, 0xc6, 0x92, 0x46, 0xb2, 0xce, 0xd0, 0x9c, 0xcc, 0x64, 0xbd, 0x60, 0x4f,
	0xe1, 0x89, 0x56, 0x99, 0x77, 0x54, 0x43, 0xe5, 0x65, 0xcf, 0x03, 0x1a, 0x06, 0x50, 0xf9, 0x3c,
	0xaf, 0x94, 0x4a, 0x84, 0x73, 0x47, 0xa7, 0xb7, 0x10, 0x57, 0x79, 0xd1, 0x5d, 0xc0, 0x1b, 0x02,
	0xe0, 0x30, 0xb0, 0x67, 0xf2, 0x43, 0xe8, 0x61, 0xe4, 0x92, 0xcc, 0x14, 0x1b, 0x1a, 0x3b, 0xd7,
	0x37, 0xfa, 0x76, 0xda, 0x3b, 0xc4, 0x96, 0x3c, 0xd2, 0xcf, 0xa6, 0x48, 0x17, 0x5c, 0x7c, 0xde,
	0xb0, 0xd8, 0x4a, 0xc1, 0x67, 0xc3, 0x13, 0x70, 0x3c, 0xd8, 0x40, 0x09, 0x88, 0x7d, 0x4c, 0x56,
	0xbc, 0x1c, 0xec, 0x9f, 0xe8, 0x14, 0x74, 0x2d, 0xcb, 0x5a, 0x85, 0x38, 0x21, 0xc4, 0x0a, 0x6e,
	0x31, 0x11, 0x1d, 0x17, 0x70, 0x12, 0x06, 0x26, 0x99, 0x7c, 0x69, 0x4e, 0xe6, 0xdc, 0xe5, 0xf0,
	0xf3, 0xbe, 0x2d, 0xc0, 0x60, 0x7b, 0xc7, 0xdb, 0x48, 0xb1, 0x7d, 0x23, 0x6f, 0x85, 0x6f, 0x24,
	0x1c, 0xfe, 0x3f, 0x6c, 0xe2, 0xa6, 0x00, 0x83, 0x45, 0x79, 0x99, 0x4c, 0x11, 0xcd, 0x24, 0x2c,
	0x67, 0x93, 0xf8, 0x47, 0x36, 0x03, 0x5d, 0xa5, 0x80, 0xd3, 0xb1, 0x70, 0xa7, 0xe1, 0xe0, 0x74,
	0xee, 0xc8, 0xa7, 0xcb, 0x82, 0xc7, 0x01, 0x72, 0xff, 0xcd, 0x63, 0x0a, 0x92, 0x1d, 0x2a, 0x6e,
	0x20, 0xf8, 0x45, 0x18, 0x0e, 0xba, 0x71, 0x47, 0x82, 0x37, 0xec, 0x7d, 0x90, 0x9e, 0x35, 0xe0,
	0x1d, 0xc9, 0x68, 0xcb, 0x3d, 0x93, 0xc2, 0xee, 0x59, 0x00, 0xe5, 0xde, 0xb6, 0x37, 0x61, 0xb0,
	0x48, 0x0c, 0xc5, 0x5e, 0x9f, 0x21, 0x9c, 0xcb, 0x4b, 0xc4, 0x0f, 0x0d, 0x43, 0x6f, 0xa9, 0x2c,
	0x1b, 0x06, 0xd1, 0xdc, 0xdc, 0x7a, 0x0b, 0x87, 0x35, 0x7e, 0x19, 0x92, 0x1d, 0x28, 0xcf, 0xc4,
	0xf3, 0x10, 0x2d, 0xf9, 0xd7, 0x2f, 0x5a, 0x52, 0x70, 0x01, 0x92, 0xf6, 0x58, 0xd0, 0x84, 0xaf,
	0x90, 0x84, 0x1e, 0x46, 0x8f, 0xae, 0x6b, 0xbc, 0xd0, 0x6d, 0x97, 0xd3, 0x0a, 0x92, 0xa0, 0xaf,
	0x4c, 0x34, 0x73, 0x5e, 0xe7, 0x4b, 0x76, 0x33, 0xea, 0x34, 0xe3, 0xf6, 0xd2, 0x0c, 0x5f, 0x9a,
	0x56, 0x70, 0x09, 0xc4, 0x4e, 0x4e, 0x4f, 0xff, 0x2c, 0x44, 0xcb, 0xba, 0x17, 0x41, 0xbf, 0x1f,
	0x41, 0xd0, 0x68, 0xb4, 0xac, 0xa3, 0x33, 0xf0, 0x9c, 0xbe, 0x32, 0xef, 0x68, 0x94, 0x68, 0xc5,
	0xb0, 0xbc, 0x93, 0xea, 0xd3, 0x57, 0xec, 0xc9, 0x9c, 0xbd, 0x84, 0x87, 0x61, 0x28, 0x5b, 0x59,
	0x09, 0x6a, 0xcc, 0x51, 0xd5, 0x38, 0x7c, 0x8a, 0x24, 0x78, 0x21, 0xbc, 0xed, 0x9d, 0xe7, 0x79,
	0x48, 0x5c, 0x54, 0x9c, 0x84, 0x9c, 0xf5, 0xb9, 0x0a, 0x2f, 0xdb, 0x1f, 0x86, 0x69, 0x17, 0x5e,
	0x3c, 0x6e, 0x61, 0xaf, 0x5a, 0xd4, 0x92, 0x35, 0xff, 0x73, 0x71, 0x8a, 0x57, 0x1e, 0x74, 0xc1,
	0x40, 0x90, 0x3d, 0xcf, 0x18, 0x65, 0x39, 0xaa, 0x10, 0x34, 0x06, 0x62, 0x9e, 0xb1, 0x60, 0x2f,
	0x47, 0x75, 0x53, 0x23, 0x16, 0x51, 0x12, 0x11, 0x9c, 0xaa, 0xd6, 0xc4, 0x01, 0xd4, 0xdf, 0xd8,
	0xda, 0x3c, 0x58, 0xfd, 0xae, 0xf1, 0xe5, 0xbd, 0xe6, 0xd5, 0xd5, 0xe6, 0xfa, 0xd5, 0xec, 0x7b,
	0xc5, 0x22, 0x9a, 0x80, 0xa1, 0x36, 0xe0, 0x2c, 0xb5, 0x8e, 0xb0, 0x82, 0x8f, 0x6d, 0xae, 0xdf,
	0xe9, 0xc0, 0x8e, 0xc3, 0x70, 0x1b, 0xd6, 0xd9, 0xd6, 0x2c, 0xb5, 0xf2, 0x06, 0xad, 0x2c, 0x95,
	0x13, 0x51, 0x3c, 0x50, 0xad, 0x89, 0x27, 0xd1, 0x89, 0x46, 0xf5, 0x76, 0x73, 0xed, 0xdb, 0xbd,
	0xcf, 0x1f, 0xec, 0x6e, 0x7f, 0xb5, 0x7f, 0xff, 0x1e, 0xba, 0x00, 0x52, 0x18, 0xf2, 0x03, 0xd3,
	0x24, 0xec, 0x5d, 0x55, 0x57, 0xad, 0x44, 0x0c, 0x0f, 0x55, 0x6b, 0x62, 0x12, 0x0d, 0x1c, 0x42,
	0x1b, 0x5b, 0x9b, 0xfb, 0x8f, 0x1e, 0xed, 0x6e, 0x57, 0x0f, 0x6e, 0x5c, 0x43, 0x17, 0xe0, 0x74,
	0x1b, 0xc1, 0xe1, 0x21, 0x1d, 0xc9, 0x1f, 0xc3, 0x62, 0xb5, 0x26, 0x9e, 0x42, 0xc8, 0xe5, 0x68,
	0xfe, 0x74, 0xb3, 0xf9, 0xcd, 0xaf, 0x9e, 0x83, 0x49, 0x38, 0xdb, 0x46, 0x90, 0x25, 0x21, 0x14,
	0x5d, 0xbe, 0x8d, 0xfd, 0x5b, 0x77, 0x43, 0x58, 0xc6, 0x21, 0x19, 0x62, 0xa3, 0x48, 0xb4, 0xc5,
	0x44, 0xb7, 0x8f, 0xb4, 0x47, 0xbf, 0xf8, 0x7d, 0xef, 0xe1, 0x8d, 0xfd, 0x2b, 0x77, 0x1a, 0x5b,
	0x1b, 0x2e, 0x0b, 0x1a, 0x03, 0x1c, 0x86, 0x2c, 0xcb, 0x8c, 0xe4, 0x94, 0x44, 0x0f, 0x4e, 0x56,
	0x6b, 0x62, 0x3f, 0x3a, 0xe9, 0x4e, 0x37, 0xd6, 0x2e, 0xef, 0xfe, 0x76, 0x37, 0x37, 0xb9, 0xbb,
	0xfd, 0x33, 0x3a, 0xdf, 0x11, 0xfa, 0x94, 0x7b, 0x07, 0xf2, 0x9f, 0x9a, 0x2a, 0x23, 0x4a, 0xa2,
	0xb7, 0x35, 0xb9, 0xe6, 0xfd, 0xb5, 0xe6, 0x67, 0xbf, 0xd8, 0xe1, 0xfd, 0x71, 0xa5, 0xb9, 0xfe,
	0x3d, 0xca, 0x74, 0x08, 0x5f, 0xd4, 0x18, 0x91, 0x15, 0xe7, 0x2b, 0x4f, 0xc4, 0xf1, 0x89, 0x6a,
	0x4d, 0xec, 0x43, 0xf1, 0xc6, 0xd6, 0xa6, 0xe7, 0x34, 0x0f, 0x2f, 0x85, 0x03, 0x5a, 0x5f, 0xf1,
	0x04, 0x1c, 0xea, 0x6e, 0x6d, 0x1e, 0xdc, 0xba, 0xdc, 0xf8, 0xfa, 0x7a, 0x73, 0x7d, 0x75, 0xef,
	0xe1, 0x5a, 0xe3, 0x87, 0xeb, 0x8d, 0xea, 0x46, 0x76, 0xf6, 0xe9, 0x5f, 0x52, 0xe4, 0xc7, 0xba,
	0x24, 0x3c, 0xae, 0x4b, 0xc2, 0x93, 0xba, 0x24, 0xfc, 0x59, 0x97, 0x84, 0xfd, 0xba, 0x14, 0xf9,
	0xbb, 0x2e, 0x09, 0xd7, 0x76, 0xa4, 0xc8, 0xe3, 0x1d, 0x49, 0x78, 0xb2, 0x23, 0x45, 0x9e, 0xee,
	0x48, 0x91, 0x8f, 0x46, 0x4a, 0x54, 0x35, 0x5e, 0xb7, 0x9f, 0x64, 0xc2, 0x32, 0x25, 0xaa, 0xeb,
	0xd4, 0xc8, 0xb4, 0xfc, 0xf7, 0x59, 0xe8, 0x76, 0xca, 0x37, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xcb, 0xbd, 0x3c, 0x88, 0x13, 0x09, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossStartRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossStartResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossFinishRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossFinishResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_DrawPassRewardRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_DrawPassRewardResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_SaveHelperCardsRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_SaveHelperCardsResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossHelperInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_PersonalBossHelperInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_SendHelpMessageRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_SendHelpMessageResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_HelpPersonalBossRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_HelpPersonalBossResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_BuyPersonalBossPointRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_BuyPersonalBossPointResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBoss_AddHelpPointPush.Get().(proto.Message)
	})
}

var poolPersonalBoss = &sync.Pool{New: func() interface{} { return &PersonalBoss{} }}

func (m *PersonalBoss) ReleasePool() { m.Reset(); poolPersonalBoss.Put(m); m = nil }

var poolPersonalBoss_PersonalBossInfoRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossInfoRequest{} }}

func (m *PersonalBoss_PersonalBossInfoRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossInfoRequest.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossInfoResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossInfoResponse{} }}

func (m *PersonalBoss_PersonalBossInfoResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossInfoResponse.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossStartRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossStartRequest{} }}

func (m *PersonalBoss_PersonalBossStartRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossStartRequest.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossStartResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossStartResponse{} }}

func (m *PersonalBoss_PersonalBossStartResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossStartResponse.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossFinishRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossFinishRequest{} }}

func (m *PersonalBoss_PersonalBossFinishRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossFinishRequest.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossFinishResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossFinishResponse{} }}

func (m *PersonalBoss_PersonalBossFinishResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossFinishResponse.Put(m)
	m = nil
}

var poolPersonalBoss_DrawPassRewardRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_DrawPassRewardRequest{} }}

func (m *PersonalBoss_DrawPassRewardRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_DrawPassRewardRequest.Put(m)
	m = nil
}

var poolPersonalBoss_DrawPassRewardResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_DrawPassRewardResponse{} }}

func (m *PersonalBoss_DrawPassRewardResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_DrawPassRewardResponse.Put(m)
	m = nil
}

var poolPersonalBoss_SaveHelperCardsRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_SaveHelperCardsRequest{} }}

func (m *PersonalBoss_SaveHelperCardsRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_SaveHelperCardsRequest.Put(m)
	m = nil
}

var poolPersonalBoss_SaveHelperCardsResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_SaveHelperCardsResponse{} }}

func (m *PersonalBoss_SaveHelperCardsResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_SaveHelperCardsResponse.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossHelperInfoRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossHelperInfoRequest{} }}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossHelperInfoRequest.Put(m)
	m = nil
}

var poolPersonalBoss_PersonalBossHelperInfoResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_PersonalBossHelperInfoResponse{} }}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_PersonalBossHelperInfoResponse.Put(m)
	m = nil
}

var poolPersonalBoss_SendHelpMessageRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_SendHelpMessageRequest{} }}

func (m *PersonalBoss_SendHelpMessageRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_SendHelpMessageRequest.Put(m)
	m = nil
}

var poolPersonalBoss_SendHelpMessageResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_SendHelpMessageResponse{} }}

func (m *PersonalBoss_SendHelpMessageResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_SendHelpMessageResponse.Put(m)
	m = nil
}

var poolPersonalBoss_HelpPersonalBossRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_HelpPersonalBossRequest{} }}

func (m *PersonalBoss_HelpPersonalBossRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_HelpPersonalBossRequest.Put(m)
	m = nil
}

var poolPersonalBoss_HelpPersonalBossResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_HelpPersonalBossResponse{} }}

func (m *PersonalBoss_HelpPersonalBossResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_HelpPersonalBossResponse.Put(m)
	m = nil
}

var poolPersonalBoss_BuyPersonalBossPointRequest = &sync.Pool{New: func() interface{} { return &PersonalBoss_BuyPersonalBossPointRequest{} }}

func (m *PersonalBoss_BuyPersonalBossPointRequest) ReleasePool() {
	m.Reset()
	poolPersonalBoss_BuyPersonalBossPointRequest.Put(m)
	m = nil
}

var poolPersonalBoss_BuyPersonalBossPointResponse = &sync.Pool{New: func() interface{} { return &PersonalBoss_BuyPersonalBossPointResponse{} }}

func (m *PersonalBoss_BuyPersonalBossPointResponse) ReleasePool() {
	m.Reset()
	poolPersonalBoss_BuyPersonalBossPointResponse.Put(m)
	m = nil
}

var poolPersonalBoss_AddHelpPointPush = &sync.Pool{New: func() interface{} { return &PersonalBoss_AddHelpPointPush{} }}

func (m *PersonalBoss_AddHelpPointPush) ReleasePool() {
	m.Reset()
	poolPersonalBoss_AddHelpPointPush.Put(m)
	m = nil
}
func (x PersonalBossErrorCode) String() string {
	s, ok := PersonalBossErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *PersonalBoss) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss)
	if !ok {
		that2, ok := that.(PersonalBoss)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossInfoRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossInfoResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossStartRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossStartRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossStartRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossStartResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossStartResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossStartResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BattleId != that1.BattleId {
		return false
	}
	if !this.Sbp.Equal(that1.Sbp) {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossFinishRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossFinishRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossFinishRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.IsSuccess != that1.IsSuccess {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossFinishResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossFinishResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossFinishResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *PersonalBoss_DrawPassRewardRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_DrawPassRewardRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_DrawPassRewardRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_DrawPassRewardResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_DrawPassRewardResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_DrawPassRewardResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *PersonalBoss_SaveHelperCardsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_SaveHelperCardsRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_SaveHelperCardsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Cards) != len(that1.Cards) {
		return false
	}
	for i := range this.Cards {
		if this.Cards[i] != that1.Cards[i] {
			return false
		}
	}
	return true
}
func (this *PersonalBoss_SaveHelperCardsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_SaveHelperCardsResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_SaveHelperCardsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossHelperInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossHelperInfoRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossHelperInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_PersonalBossHelperInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_PersonalBossHelperInfoResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_PersonalBossHelperInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *PersonalBoss_SendHelpMessageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_SendHelpMessageRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_SendHelpMessageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Channels) != len(that1.Channels) {
		return false
	}
	for i := range this.Channels {
		if this.Channels[i] != that1.Channels[i] {
			return false
		}
	}
	return true
}
func (this *PersonalBoss_SendHelpMessageResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_SendHelpMessageResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_SendHelpMessageResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Cd != that1.Cd {
		return false
	}
	return true
}
func (this *PersonalBoss_HelpPersonalBossRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_HelpPersonalBossRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_HelpPersonalBossRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.HelpMsgId != that1.HelpMsgId {
		return false
	}
	return true
}
func (this *PersonalBoss_HelpPersonalBossResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_HelpPersonalBossResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_HelpPersonalBossResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hm.Equal(that1.Hm) {
		return false
	}
	if this.MyHelpCount != that1.MyHelpCount {
		return false
	}
	return true
}
func (this *PersonalBoss_BuyPersonalBossPointRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_BuyPersonalBossPointRequest)
	if !ok {
		that2, ok := that.(PersonalBoss_BuyPersonalBossPointRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_BuyPersonalBossPointResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_BuyPersonalBossPointResponse)
	if !ok {
		that2, ok := that.(PersonalBoss_BuyPersonalBossPointResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PersonalBoss_AddHelpPointPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBoss_AddHelpPointPush)
	if !ok {
		that2, ok := that.(PersonalBoss_AddHelpPointPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Point != that1.Point {
		return false
	}
	if this.Total != that1.Total {
		return false
	}
	return true
}
func (m *PersonalBoss) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossStartRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossStartRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossStartRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossStartResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossStartResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossStartResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Sbp != nil {
		{
			size, err := m.Sbp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BattleId != 0 {
		i = encodeVarintPersonalBoss(dAtA, i, uint64(m.BattleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossFinishRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossFinishRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossFinishRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsSuccess {
		i--
		if m.IsSuccess {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossFinishResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossFinishResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossFinishResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintPersonalBoss(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintPersonalBoss(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintPersonalBoss(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_DrawPassRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_DrawPassRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_DrawPassRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_DrawPassRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_DrawPassRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_DrawPassRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintPersonalBoss(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintPersonalBoss(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintPersonalBoss(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_SaveHelperCardsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_SaveHelperCardsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_SaveHelperCardsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cards) > 0 {
		for k := range m.Cards {
			v := m.Cards[k]
			baseI := i
			i = encodeVarintPersonalBoss(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintPersonalBoss(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintPersonalBoss(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_SaveHelperCardsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_SaveHelperCardsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_SaveHelperCardsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_SendHelpMessageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_SendHelpMessageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_SendHelpMessageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Channels) > 0 {
		for iNdEx := len(m.Channels) - 1; iNdEx >= 0; iNdEx-- {
			i--
			if m.Channels[iNdEx] {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
		}
		i = encodeVarintPersonalBoss(dAtA, i, uint64(len(m.Channels)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_SendHelpMessageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_SendHelpMessageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_SendHelpMessageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Cd != 0 {
		i = encodeVarintPersonalBoss(dAtA, i, uint64(m.Cd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_HelpPersonalBossRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_HelpPersonalBossRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_HelpPersonalBossRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HelpMsgId) > 0 {
		i -= len(m.HelpMsgId)
		copy(dAtA[i:], m.HelpMsgId)
		i = encodeVarintPersonalBoss(dAtA, i, uint64(len(m.HelpMsgId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintPersonalBoss(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_HelpPersonalBossResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_HelpPersonalBossResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_HelpPersonalBossResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MyHelpCount != 0 {
		i = encodeVarintPersonalBoss(dAtA, i, uint64(m.MyHelpCount))
		i--
		dAtA[i] = 0x10
	}
	if m.Hm != nil {
		{
			size, err := m.Hm.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_BuyPersonalBossPointRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_BuyPersonalBossPointRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_BuyPersonalBossPointRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_BuyPersonalBossPointResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_BuyPersonalBossPointResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_BuyPersonalBossPointResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PersonalBoss_AddHelpPointPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBoss_AddHelpPointPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBoss_AddHelpPointPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Total != 0 {
		i = encodeVarintPersonalBoss(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x10
	}
	if m.Point != 0 {
		i = encodeVarintPersonalBoss(dAtA, i, uint64(m.Point))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPersonalBoss(dAtA []byte, offset int, v uint64) int {
	offset -= sovPersonalBoss(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *PersonalBoss) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossStartRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossStartResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.BattleId != 0 {
		w.RawByte('"')
		w.RawString("battle_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BattleId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("sbp")
	w.RawByte('"')
	w.RawByte(':')
	m.Sbp.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossFinishRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.IsSuccess {
		w.RawByte('"')
		w.RawString("is_success")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.IsSuccess)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossFinishResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_DrawPassRewardRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_DrawPassRewardResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_SaveHelperCardsRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("cards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Cards == nil {
		w.RawString("null")
	} else if len(m.Cards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlCards := len(m.Cards)
		for k, v := range m.Cards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlCards--
			if mlCards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_SaveHelperCardsResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_SendHelpMessageRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("channels")
	w.RawByte('"')
	w.RawByte(':')
	if m.Channels == nil {
		w.RawString("null")
	} else if len(m.Channels) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Channels {
			w.Bool(v)
			if i != len(m.Channels)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_SendHelpMessageResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Cd != 0 {
		w.RawByte('"')
		w.RawString("cd")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Cd))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_HelpPersonalBossRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.HelpMsgId != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("help_msg_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.HelpMsgId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_HelpPersonalBossResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hm")
	w.RawByte('"')
	w.RawByte(':')
	m.Hm.JsonBytes(w)
	needWriteComma = true
	if m.MyHelpCount != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("my_help_count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.MyHelpCount))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss_BuyPersonalBossPointRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_BuyPersonalBossPointResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *PersonalBoss_AddHelpPointPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Point != 0 {
		w.RawByte('"')
		w.RawString("point")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Point))
		needWriteComma = true
	}
	if m.Total != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("total")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Total))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBoss) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossInfoRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossInfoResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossStartRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossStartRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossStartRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossStartResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossStartResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossStartResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossFinishRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossFinishRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossFinishRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossFinishResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossFinishResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossFinishResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_DrawPassRewardRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_DrawPassRewardRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_DrawPassRewardRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_DrawPassRewardResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_DrawPassRewardResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_DrawPassRewardResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_SaveHelperCardsRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_SaveHelperCardsRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_SaveHelperCardsRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_SaveHelperCardsResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_SaveHelperCardsResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_SaveHelperCardsResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_SendHelpMessageRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_SendHelpMessageRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_SendHelpMessageRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_SendHelpMessageResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_SendHelpMessageResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_SendHelpMessageResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_HelpPersonalBossRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_HelpPersonalBossRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_HelpPersonalBossRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_HelpPersonalBossResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_HelpPersonalBossResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_HelpPersonalBossResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_BuyPersonalBossPointRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) GoString() string {
	return m.String()
}

func (m *PersonalBoss_BuyPersonalBossPointResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) GoString() string {
	return m.String()
}

func (m *PersonalBoss_AddHelpPointPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBoss_AddHelpPointPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBoss_AddHelpPointPush) GoString() string {
	return m.String()
}

func (m *PersonalBoss) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_PersonalBossInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_PersonalBossInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	return n
}

func (m *PersonalBoss_PersonalBossStartRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_PersonalBossStartResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BattleId != 0 {
		n += 1 + sovPersonalBoss(uint64(m.BattleId))
	}
	if m.Sbp != nil {
		l = m.Sbp.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	return n
}

func (m *PersonalBoss_PersonalBossFinishRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsSuccess {
		n += 2
	}
	return n
}

func (m *PersonalBoss_PersonalBossFinishResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovPersonalBoss(uint64(k)) + 1 + sovPersonalBoss(uint64(v))
			n += mapEntrySize + 1 + sovPersonalBoss(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *PersonalBoss_DrawPassRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_DrawPassRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovPersonalBoss(uint64(k)) + 1 + sovPersonalBoss(uint64(v))
			n += mapEntrySize + 1 + sovPersonalBoss(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *PersonalBoss_SaveHelperCardsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cards) > 0 {
		for k, v := range m.Cards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovPersonalBoss(uint64(k)) + 1 + sovPersonalBoss(uint64(v))
			n += mapEntrySize + 1 + sovPersonalBoss(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *PersonalBoss_SaveHelperCardsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_PersonalBossHelperInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_PersonalBossHelperInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	return n
}

func (m *PersonalBoss_SendHelpMessageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Channels) > 0 {
		n += 1 + sovPersonalBoss(uint64(len(m.Channels))) + len(m.Channels)*1
	}
	return n
}

func (m *PersonalBoss_SendHelpMessageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cd != 0 {
		n += 1 + sovPersonalBoss(uint64(m.Cd))
	}
	return n
}

func (m *PersonalBoss_HelpPersonalBossRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	l = len(m.HelpMsgId)
	if l > 0 {
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	return n
}

func (m *PersonalBoss_HelpPersonalBossResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hm != nil {
		l = m.Hm.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	if m.MyHelpCount != 0 {
		n += 1 + sovPersonalBoss(uint64(m.MyHelpCount))
	}
	return n
}

func (m *PersonalBoss_BuyPersonalBossPointRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_BuyPersonalBossPointResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PersonalBoss_AddHelpPointPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Point != 0 {
		n += 1 + sovPersonalBoss(uint64(m.Point))
	}
	if m.Total != 0 {
		n += 1 + sovPersonalBoss(uint64(m.Total))
	}
	return n
}

func sovPersonalBoss(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPersonalBoss(x uint64) (n int) {
	return sovPersonalBoss(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PersonalBoss) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBoss: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBoss: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.PersonalBossInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossStartRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossStartRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossStartRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossStartResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossStartResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossStartResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BattleId", wireType)
			}
			m.BattleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BattleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sbp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sbp == nil {
				m.Sbp = &models.SingleBattleParam{}
			}
			if err := m.Sbp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossFinishRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossFinishRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossFinishRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSuccess", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSuccess = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossFinishResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossFinishResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossFinishResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPersonalBoss
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipPersonalBoss(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthPersonalBoss
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_DrawPassRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DrawPassRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DrawPassRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_DrawPassRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DrawPassRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DrawPassRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPersonalBoss
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipPersonalBoss(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthPersonalBoss
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_SaveHelperCardsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveHelperCardsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveHelperCardsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cards == nil {
				m.Cards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPersonalBoss
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipPersonalBoss(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthPersonalBoss
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Cards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_SaveHelperCardsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveHelperCardsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveHelperCardsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossHelperInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossHelperInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossHelperInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_PersonalBossHelperInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossHelperInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossHelperInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.PersonalBossHelperInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_SendHelpMessageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendHelpMessageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendHelpMessageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPersonalBoss
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Channels = append(m.Channels, bool(v != 0))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPersonalBoss
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthPersonalBoss
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthPersonalBoss
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				elementCount = packedLen
				if elementCount != 0 && len(m.Channels) == 0 {
					m.Channels = make([]bool, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPersonalBoss
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Channels = append(m.Channels, bool(v != 0))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_SendHelpMessageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendHelpMessageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendHelpMessageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cd", wireType)
			}
			m.Cd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cd |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_HelpPersonalBossRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HelpPersonalBossRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HelpPersonalBossRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelpMsgId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HelpMsgId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_HelpPersonalBossResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HelpPersonalBossResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HelpPersonalBossResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hm", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hm == nil {
				m.Hm = &models.HelpMessage{}
			}
			if err := m.Hm.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MyHelpCount", wireType)
			}
			m.MyHelpCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MyHelpCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_BuyPersonalBossPointRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyPersonalBossPointRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyPersonalBossPointRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_BuyPersonalBossPointResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyPersonalBossPointResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyPersonalBossPointResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBoss_AddHelpPointPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddHelpPointPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddHelpPointPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Point", wireType)
			}
			m.Point = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Point |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPersonalBoss(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPersonalBoss
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPersonalBoss
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPersonalBoss
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPersonalBoss        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPersonalBoss          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPersonalBoss = fmt.Errorf("proto: unexpected end of group")
)
