// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/hero.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type HeroErrorCode int32

const (
	HeroErrorCode_ErrHeroNotFound                   HeroErrorCode = 0
	HeroErrorCode_ErrHeroInvalidSlot                HeroErrorCode = 1
	HeroErrorCode_ErrHeroNeedEquip                  HeroErrorCode = 2
	HeroErrorCode_ErrHeroMaxEquipStar               HeroErrorCode = 3
	HeroErrorCode_ErrEquippedOtherHero              HeroErrorCode = 4
	HeroErrorCode_ErrEquipNotFound                  HeroErrorCode = 5
	HeroErrorCode_ErrEquipHeroNotMatch              HeroErrorCode = 6
	HeroErrorCode_ErrCanNotEquippedThisSlot         HeroErrorCode = 7
	HeroErrorCode_ErrSlotHasNotEquip                HeroErrorCode = 8
	HeroErrorCode_ErrRoleLevelNotEnough             HeroErrorCode = 9
	HeroErrorCode_ErrCanNotMeltEquipped             HeroErrorCode = 10
	HeroErrorCode_ErrNeedSelectEquip                HeroErrorCode = 11
	HeroErrorCode_ErrMeltExpNotEnough               HeroErrorCode = 12
	HeroErrorCode_ErrMaxMeltLevel                   HeroErrorCode = 13
	HeroErrorCode_ErrBiographyNotUnlock             HeroErrorCode = 14
	HeroErrorCode_ErrBiographyNoReward              HeroErrorCode = 15
	HeroErrorCode_ErrBiographyDoNotRepeatGetReward  HeroErrorCode = 16
	HeroErrorCode_ErrBiographyNotExist              HeroErrorCode = 17
	HeroErrorCode_ErrSoulContractMaxLevel           HeroErrorCode = 18
	HeroErrorCode_ErrSoulContractConditionNotEnough HeroErrorCode = 19
	HeroErrorCode_ErrEquipRefineNotUnlock           HeroErrorCode = 20
	HeroErrorCode_ErrEquipEnchantNotUnlock          HeroErrorCode = 21
	HeroErrorCode_ErrEquipNoUpgradeable             HeroErrorCode = 22
	HeroErrorCode_ErrEquipNoResonanceToActivate     HeroErrorCode = 23
	HeroErrorCode_ErrHeroFashionNotActivated        HeroErrorCode = 24
	HeroErrorCode_ErrEquipSlotNotUnlock             HeroErrorCode = 25
)

var HeroErrorCode_name = map[int32]string{
	0:  "ErrHeroNotFound",
	1:  "ErrHeroInvalidSlot",
	2:  "ErrHeroNeedEquip",
	3:  "ErrHeroMaxEquipStar",
	4:  "ErrEquippedOtherHero",
	5:  "ErrEquipNotFound",
	6:  "ErrEquipHeroNotMatch",
	7:  "ErrCanNotEquippedThisSlot",
	8:  "ErrSlotHasNotEquip",
	9:  "ErrRoleLevelNotEnough",
	10: "ErrCanNotMeltEquipped",
	11: "ErrNeedSelectEquip",
	12: "ErrMeltExpNotEnough",
	13: "ErrMaxMeltLevel",
	14: "ErrBiographyNotUnlock",
	15: "ErrBiographyNoReward",
	16: "ErrBiographyDoNotRepeatGetReward",
	17: "ErrBiographyNotExist",
	18: "ErrSoulContractMaxLevel",
	19: "ErrSoulContractConditionNotEnough",
	20: "ErrEquipRefineNotUnlock",
	21: "ErrEquipEnchantNotUnlock",
	22: "ErrEquipNoUpgradeable",
	23: "ErrEquipNoResonanceToActivate",
	24: "ErrHeroFashionNotActivated",
	25: "ErrEquipSlotNotUnlock",
}

var HeroErrorCode_value = map[string]int32{
	"ErrHeroNotFound":                   0,
	"ErrHeroInvalidSlot":                1,
	"ErrHeroNeedEquip":                  2,
	"ErrHeroMaxEquipStar":               3,
	"ErrEquippedOtherHero":              4,
	"ErrEquipNotFound":                  5,
	"ErrEquipHeroNotMatch":              6,
	"ErrCanNotEquippedThisSlot":         7,
	"ErrSlotHasNotEquip":                8,
	"ErrRoleLevelNotEnough":             9,
	"ErrCanNotMeltEquipped":             10,
	"ErrNeedSelectEquip":                11,
	"ErrMeltExpNotEnough":               12,
	"ErrMaxMeltLevel":                   13,
	"ErrBiographyNotUnlock":             14,
	"ErrBiographyNoReward":              15,
	"ErrBiographyDoNotRepeatGetReward":  16,
	"ErrBiographyNotExist":              17,
	"ErrSoulContractMaxLevel":           18,
	"ErrSoulContractConditionNotEnough": 19,
	"ErrEquipRefineNotUnlock":           20,
	"ErrEquipEnchantNotUnlock":          21,
	"ErrEquipNoUpgradeable":             22,
	"ErrEquipNoResonanceToActivate":     23,
	"ErrHeroFashionNotActivated":        24,
	"ErrEquipSlotNotUnlock":             25,
}

func (HeroErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0}
}

type Hero struct {
}

func (m *Hero) Reset()      { *m = Hero{} }
func (*Hero) ProtoMessage() {}
func (*Hero) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0}
}
func (m *Hero) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero.Merge(m, src)
}
func (m *Hero) XXX_Size() int {
	return m.Size()
}
func (m *Hero) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero.DiscardUnknown(m)
}

var xxx_messageInfo_Hero proto.InternalMessageInfo

func (*Hero) XXX_MessageName() string {
	return "service.Hero"
}

// 获取玩家拥有的英雄id列表
type Hero_HeroListRequest struct {
}

func (m *Hero_HeroListRequest) Reset()      { *m = Hero_HeroListRequest{} }
func (*Hero_HeroListRequest) ProtoMessage() {}
func (*Hero_HeroListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 0}
}
func (m *Hero_HeroListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_HeroListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_HeroListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_HeroListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_HeroListRequest.Merge(m, src)
}
func (m *Hero_HeroListRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_HeroListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_HeroListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_HeroListRequest proto.InternalMessageInfo

func (*Hero_HeroListRequest) XXX_MessageName() string {
	return "service.Hero.HeroListRequest"
}

type Hero_HeroListResponse struct {
	HeroId []int64 `protobuf:"varint,1,rep,packed,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
}

func (m *Hero_HeroListResponse) Reset()      { *m = Hero_HeroListResponse{} }
func (*Hero_HeroListResponse) ProtoMessage() {}
func (*Hero_HeroListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 1}
}
func (m *Hero_HeroListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_HeroListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_HeroListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_HeroListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_HeroListResponse.Merge(m, src)
}
func (m *Hero_HeroListResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_HeroListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_HeroListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_HeroListResponse proto.InternalMessageInfo

func (m *Hero_HeroListResponse) GetHeroId() []int64 {
	if m != nil {
		return m.HeroId
	}
	return nil
}

func (*Hero_HeroListResponse) XXX_MessageName() string {
	return "service.Hero.HeroListResponse"
}

// 装备槽升（级）星
type Hero_UpgradeSlotRequest struct {
	HeroId int64 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	SlotId int64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (m *Hero_UpgradeSlotRequest) Reset()      { *m = Hero_UpgradeSlotRequest{} }
func (*Hero_UpgradeSlotRequest) ProtoMessage() {}
func (*Hero_UpgradeSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 2}
}
func (m *Hero_UpgradeSlotRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_UpgradeSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_UpgradeSlotRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_UpgradeSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_UpgradeSlotRequest.Merge(m, src)
}
func (m *Hero_UpgradeSlotRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_UpgradeSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_UpgradeSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_UpgradeSlotRequest proto.InternalMessageInfo

func (m *Hero_UpgradeSlotRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero_UpgradeSlotRequest) GetSlotId() int64 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (*Hero_UpgradeSlotRequest) XXX_MessageName() string {
	return "service.Hero.UpgradeSlotRequest"
}

type Hero_UpgradeSlotResponse struct {
	Hero *models.Hero `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
}

func (m *Hero_UpgradeSlotResponse) Reset()      { *m = Hero_UpgradeSlotResponse{} }
func (*Hero_UpgradeSlotResponse) ProtoMessage() {}
func (*Hero_UpgradeSlotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 3}
}
func (m *Hero_UpgradeSlotResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_UpgradeSlotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_UpgradeSlotResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_UpgradeSlotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_UpgradeSlotResponse.Merge(m, src)
}
func (m *Hero_UpgradeSlotResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_UpgradeSlotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_UpgradeSlotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_UpgradeSlotResponse proto.InternalMessageInfo

func (m *Hero_UpgradeSlotResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (*Hero_UpgradeSlotResponse) XXX_MessageName() string {
	return "service.Hero.UpgradeSlotResponse"
}

// 穿戴装备
type Hero_WearEquipRequest struct {
	HeroId  int64    `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	EquipId []string `protobuf:"bytes,2,rep,name=equip_id,json=equipId,proto3" json:"equip_id,omitempty"`
}

func (m *Hero_WearEquipRequest) Reset()      { *m = Hero_WearEquipRequest{} }
func (*Hero_WearEquipRequest) ProtoMessage() {}
func (*Hero_WearEquipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 4}
}
func (m *Hero_WearEquipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_WearEquipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_WearEquipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_WearEquipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_WearEquipRequest.Merge(m, src)
}
func (m *Hero_WearEquipRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_WearEquipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_WearEquipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_WearEquipRequest proto.InternalMessageInfo

func (m *Hero_WearEquipRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero_WearEquipRequest) GetEquipId() []string {
	if m != nil {
		return m.EquipId
	}
	return nil
}

func (*Hero_WearEquipRequest) XXX_MessageName() string {
	return "service.Hero.WearEquipRequest"
}

type Hero_WearEquipResponse struct {
	Hero   *models.Hero `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
	ItemId []int64      `protobuf:"varint,2,rep,packed,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (m *Hero_WearEquipResponse) Reset()      { *m = Hero_WearEquipResponse{} }
func (*Hero_WearEquipResponse) ProtoMessage() {}
func (*Hero_WearEquipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 5}
}
func (m *Hero_WearEquipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_WearEquipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_WearEquipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_WearEquipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_WearEquipResponse.Merge(m, src)
}
func (m *Hero_WearEquipResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_WearEquipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_WearEquipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_WearEquipResponse proto.InternalMessageInfo

func (m *Hero_WearEquipResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *Hero_WearEquipResponse) GetItemId() []int64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (*Hero_WearEquipResponse) XXX_MessageName() string {
	return "service.Hero.WearEquipResponse"
}

// 脱下装备
type Hero_TakeDownEquipRequest struct {
	HeroId int64 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	SlotId int64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (m *Hero_TakeDownEquipRequest) Reset()      { *m = Hero_TakeDownEquipRequest{} }
func (*Hero_TakeDownEquipRequest) ProtoMessage() {}
func (*Hero_TakeDownEquipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 6}
}
func (m *Hero_TakeDownEquipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_TakeDownEquipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_TakeDownEquipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_TakeDownEquipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_TakeDownEquipRequest.Merge(m, src)
}
func (m *Hero_TakeDownEquipRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_TakeDownEquipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_TakeDownEquipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_TakeDownEquipRequest proto.InternalMessageInfo

func (m *Hero_TakeDownEquipRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero_TakeDownEquipRequest) GetSlotId() int64 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (*Hero_TakeDownEquipRequest) XXX_MessageName() string {
	return "service.Hero.TakeDownEquipRequest"
}

type Hero_TakeDownEquipResponse struct {
	Hero   *models.Hero `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
	ItemId int64        `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (m *Hero_TakeDownEquipResponse) Reset()      { *m = Hero_TakeDownEquipResponse{} }
func (*Hero_TakeDownEquipResponse) ProtoMessage() {}
func (*Hero_TakeDownEquipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 7}
}
func (m *Hero_TakeDownEquipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_TakeDownEquipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_TakeDownEquipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_TakeDownEquipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_TakeDownEquipResponse.Merge(m, src)
}
func (m *Hero_TakeDownEquipResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_TakeDownEquipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_TakeDownEquipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_TakeDownEquipResponse proto.InternalMessageInfo

func (m *Hero_TakeDownEquipResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *Hero_TakeDownEquipResponse) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (*Hero_TakeDownEquipResponse) XXX_MessageName() string {
	return "service.Hero.TakeDownEquipResponse"
}

// 熔炼装备
type Hero_MeltEquipRequest struct {
	HeroId  int64    `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	SlotId  int64    `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	EquipId []string `protobuf:"bytes,3,rep,name=equip_id,json=equipId,proto3" json:"equip_id,omitempty"`
}

func (m *Hero_MeltEquipRequest) Reset()      { *m = Hero_MeltEquipRequest{} }
func (*Hero_MeltEquipRequest) ProtoMessage() {}
func (*Hero_MeltEquipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 8}
}
func (m *Hero_MeltEquipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_MeltEquipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_MeltEquipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_MeltEquipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_MeltEquipRequest.Merge(m, src)
}
func (m *Hero_MeltEquipRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_MeltEquipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_MeltEquipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_MeltEquipRequest proto.InternalMessageInfo

func (m *Hero_MeltEquipRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero_MeltEquipRequest) GetSlotId() int64 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (m *Hero_MeltEquipRequest) GetEquipId() []string {
	if m != nil {
		return m.EquipId
	}
	return nil
}

func (*Hero_MeltEquipRequest) XXX_MessageName() string {
	return "service.Hero.MeltEquipRequest"
}

type Hero_MeltEquipResponse struct {
}

func (m *Hero_MeltEquipResponse) Reset()      { *m = Hero_MeltEquipResponse{} }
func (*Hero_MeltEquipResponse) ProtoMessage() {}
func (*Hero_MeltEquipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 9}
}
func (m *Hero_MeltEquipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_MeltEquipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_MeltEquipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_MeltEquipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_MeltEquipResponse.Merge(m, src)
}
func (m *Hero_MeltEquipResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_MeltEquipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_MeltEquipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_MeltEquipResponse proto.InternalMessageInfo

func (*Hero_MeltEquipResponse) XXX_MessageName() string {
	return "service.Hero.MeltEquipResponse"
}

// 装备熔炼升星
type Hero_UpgradeSlotMeltStarRequest struct {
	HeroId int64 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	SlotId int64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (m *Hero_UpgradeSlotMeltStarRequest) Reset()      { *m = Hero_UpgradeSlotMeltStarRequest{} }
func (*Hero_UpgradeSlotMeltStarRequest) ProtoMessage() {}
func (*Hero_UpgradeSlotMeltStarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 10}
}
func (m *Hero_UpgradeSlotMeltStarRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_UpgradeSlotMeltStarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_UpgradeSlotMeltStarRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_UpgradeSlotMeltStarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_UpgradeSlotMeltStarRequest.Merge(m, src)
}
func (m *Hero_UpgradeSlotMeltStarRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_UpgradeSlotMeltStarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_UpgradeSlotMeltStarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_UpgradeSlotMeltStarRequest proto.InternalMessageInfo

func (m *Hero_UpgradeSlotMeltStarRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero_UpgradeSlotMeltStarRequest) GetSlotId() int64 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (*Hero_UpgradeSlotMeltStarRequest) XXX_MessageName() string {
	return "service.Hero.UpgradeSlotMeltStarRequest"
}

type Hero_UpgradeSlotMeltStarResponse struct {
	Hero *models.Hero `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
}

func (m *Hero_UpgradeSlotMeltStarResponse) Reset()      { *m = Hero_UpgradeSlotMeltStarResponse{} }
func (*Hero_UpgradeSlotMeltStarResponse) ProtoMessage() {}
func (*Hero_UpgradeSlotMeltStarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 11}
}
func (m *Hero_UpgradeSlotMeltStarResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_UpgradeSlotMeltStarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_UpgradeSlotMeltStarResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_UpgradeSlotMeltStarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_UpgradeSlotMeltStarResponse.Merge(m, src)
}
func (m *Hero_UpgradeSlotMeltStarResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_UpgradeSlotMeltStarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_UpgradeSlotMeltStarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_UpgradeSlotMeltStarResponse proto.InternalMessageInfo

func (m *Hero_UpgradeSlotMeltStarResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (*Hero_UpgradeSlotMeltStarResponse) XXX_MessageName() string {
	return "service.Hero.UpgradeSlotMeltStarResponse"
}

// 获取所有英雄传记可领取的奖励信息
type Hero_BiographyRewardInfoRequest struct {
}

func (m *Hero_BiographyRewardInfoRequest) Reset()      { *m = Hero_BiographyRewardInfoRequest{} }
func (*Hero_BiographyRewardInfoRequest) ProtoMessage() {}
func (*Hero_BiographyRewardInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 12}
}
func (m *Hero_BiographyRewardInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_BiographyRewardInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_BiographyRewardInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_BiographyRewardInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_BiographyRewardInfoRequest.Merge(m, src)
}
func (m *Hero_BiographyRewardInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_BiographyRewardInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_BiographyRewardInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_BiographyRewardInfoRequest proto.InternalMessageInfo

func (*Hero_BiographyRewardInfoRequest) XXX_MessageName() string {
	return "service.Hero.BiographyRewardInfoRequest"
}

type Hero_BiographyRewardInfoResponse struct {
	List []int64 `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
}

func (m *Hero_BiographyRewardInfoResponse) Reset()      { *m = Hero_BiographyRewardInfoResponse{} }
func (*Hero_BiographyRewardInfoResponse) ProtoMessage() {}
func (*Hero_BiographyRewardInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 13}
}
func (m *Hero_BiographyRewardInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_BiographyRewardInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_BiographyRewardInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_BiographyRewardInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_BiographyRewardInfoResponse.Merge(m, src)
}
func (m *Hero_BiographyRewardInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_BiographyRewardInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_BiographyRewardInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_BiographyRewardInfoResponse proto.InternalMessageInfo

func (m *Hero_BiographyRewardInfoResponse) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Hero_BiographyRewardInfoResponse) XXX_MessageName() string {
	return "service.Hero.BiographyRewardInfoResponse"
}

// 领取英雄传记奖励
type Hero_BiographyGetRewardRequest struct {
	RewardId int64 `protobuf:"varint,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
}

func (m *Hero_BiographyGetRewardRequest) Reset()      { *m = Hero_BiographyGetRewardRequest{} }
func (*Hero_BiographyGetRewardRequest) ProtoMessage() {}
func (*Hero_BiographyGetRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 14}
}
func (m *Hero_BiographyGetRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_BiographyGetRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_BiographyGetRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_BiographyGetRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_BiographyGetRewardRequest.Merge(m, src)
}
func (m *Hero_BiographyGetRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_BiographyGetRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_BiographyGetRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_BiographyGetRewardRequest proto.InternalMessageInfo

func (m *Hero_BiographyGetRewardRequest) GetRewardId() int64 {
	if m != nil {
		return m.RewardId
	}
	return 0
}

func (*Hero_BiographyGetRewardRequest) XXX_MessageName() string {
	return "service.Hero.BiographyGetRewardRequest"
}

type Hero_BiographyGetRewardResponse struct {
	Reward   map[int64]int64 `protobuf:"bytes,1,rep,name=reward,proto3" json:"reward,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RewardId int64           `protobuf:"varint,2,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
}

func (m *Hero_BiographyGetRewardResponse) Reset()      { *m = Hero_BiographyGetRewardResponse{} }
func (*Hero_BiographyGetRewardResponse) ProtoMessage() {}
func (*Hero_BiographyGetRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 15}
}
func (m *Hero_BiographyGetRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_BiographyGetRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_BiographyGetRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_BiographyGetRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_BiographyGetRewardResponse.Merge(m, src)
}
func (m *Hero_BiographyGetRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_BiographyGetRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_BiographyGetRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_BiographyGetRewardResponse proto.InternalMessageInfo

func (m *Hero_BiographyGetRewardResponse) GetReward() map[int64]int64 {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *Hero_BiographyGetRewardResponse) GetRewardId() int64 {
	if m != nil {
		return m.RewardId
	}
	return 0
}

func (*Hero_BiographyGetRewardResponse) XXX_MessageName() string {
	return "service.Hero.BiographyGetRewardResponse"
}

// 魂契升级
type Hero_UpgradeSoulContractRequest struct {
	HeroOriginId int64 `protobuf:"varint,1,opt,name=hero_origin_id,json=heroOriginId,proto3" json:"hero_origin_id,omitempty"`
}

func (m *Hero_UpgradeSoulContractRequest) Reset()      { *m = Hero_UpgradeSoulContractRequest{} }
func (*Hero_UpgradeSoulContractRequest) ProtoMessage() {}
func (*Hero_UpgradeSoulContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 16}
}
func (m *Hero_UpgradeSoulContractRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_UpgradeSoulContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_UpgradeSoulContractRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_UpgradeSoulContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_UpgradeSoulContractRequest.Merge(m, src)
}
func (m *Hero_UpgradeSoulContractRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_UpgradeSoulContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_UpgradeSoulContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_UpgradeSoulContractRequest proto.InternalMessageInfo

func (m *Hero_UpgradeSoulContractRequest) GetHeroOriginId() int64 {
	if m != nil {
		return m.HeroOriginId
	}
	return 0
}

func (*Hero_UpgradeSoulContractRequest) XXX_MessageName() string {
	return "service.Hero.UpgradeSoulContractRequest"
}

type Hero_UpgradeSoulContractResponse struct {
	Hero   *models.Hero    `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
	Reward map[int64]int64 `protobuf:"bytes,2,rep,name=reward,proto3" json:"reward,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Hero_UpgradeSoulContractResponse) Reset()      { *m = Hero_UpgradeSoulContractResponse{} }
func (*Hero_UpgradeSoulContractResponse) ProtoMessage() {}
func (*Hero_UpgradeSoulContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 17}
}
func (m *Hero_UpgradeSoulContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_UpgradeSoulContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_UpgradeSoulContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_UpgradeSoulContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_UpgradeSoulContractResponse.Merge(m, src)
}
func (m *Hero_UpgradeSoulContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_UpgradeSoulContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_UpgradeSoulContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_UpgradeSoulContractResponse proto.InternalMessageInfo

func (m *Hero_UpgradeSoulContractResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *Hero_UpgradeSoulContractResponse) GetReward() map[int64]int64 {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (*Hero_UpgradeSoulContractResponse) XXX_MessageName() string {
	return "service.Hero.UpgradeSoulContractResponse"
}

// 激活共鸣
type Hero_ActivateResonanceRequest struct {
	HeroOriginId int64 `protobuf:"varint,1,opt,name=hero_origin_id,json=heroOriginId,proto3" json:"hero_origin_id,omitempty"`
	ResonanceId  int64 `protobuf:"varint,2,opt,name=resonance_id,json=resonanceId,proto3" json:"resonance_id,omitempty"`
}

func (m *Hero_ActivateResonanceRequest) Reset()      { *m = Hero_ActivateResonanceRequest{} }
func (*Hero_ActivateResonanceRequest) ProtoMessage() {}
func (*Hero_ActivateResonanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 18}
}
func (m *Hero_ActivateResonanceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_ActivateResonanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_ActivateResonanceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_ActivateResonanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_ActivateResonanceRequest.Merge(m, src)
}
func (m *Hero_ActivateResonanceRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_ActivateResonanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_ActivateResonanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_ActivateResonanceRequest proto.InternalMessageInfo

func (m *Hero_ActivateResonanceRequest) GetHeroOriginId() int64 {
	if m != nil {
		return m.HeroOriginId
	}
	return 0
}

func (m *Hero_ActivateResonanceRequest) GetResonanceId() int64 {
	if m != nil {
		return m.ResonanceId
	}
	return 0
}

func (*Hero_ActivateResonanceRequest) XXX_MessageName() string {
	return "service.Hero.ActivateResonanceRequest"
}

type Hero_ActivateResonanceResponse struct {
	Hero *models.Hero `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
}

func (m *Hero_ActivateResonanceResponse) Reset()      { *m = Hero_ActivateResonanceResponse{} }
func (*Hero_ActivateResonanceResponse) ProtoMessage() {}
func (*Hero_ActivateResonanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 19}
}
func (m *Hero_ActivateResonanceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_ActivateResonanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_ActivateResonanceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_ActivateResonanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_ActivateResonanceResponse.Merge(m, src)
}
func (m *Hero_ActivateResonanceResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_ActivateResonanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_ActivateResonanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_ActivateResonanceResponse proto.InternalMessageInfo

func (m *Hero_ActivateResonanceResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (*Hero_ActivateResonanceResponse) XXX_MessageName() string {
	return "service.Hero.ActivateResonanceResponse"
}

// 穿戴时装
type Hero_DressFashionRequest struct {
	HeroOriginId int64 `protobuf:"varint,1,opt,name=hero_origin_id,json=heroOriginId,proto3" json:"hero_origin_id,omitempty"`
	FashionId    int64 `protobuf:"varint,2,opt,name=fashion_id,json=fashionId,proto3" json:"fashion_id,omitempty"`
}

func (m *Hero_DressFashionRequest) Reset()      { *m = Hero_DressFashionRequest{} }
func (*Hero_DressFashionRequest) ProtoMessage() {}
func (*Hero_DressFashionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 20}
}
func (m *Hero_DressFashionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_DressFashionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_DressFashionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_DressFashionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_DressFashionRequest.Merge(m, src)
}
func (m *Hero_DressFashionRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_DressFashionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_DressFashionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_DressFashionRequest proto.InternalMessageInfo

func (m *Hero_DressFashionRequest) GetHeroOriginId() int64 {
	if m != nil {
		return m.HeroOriginId
	}
	return 0
}

func (m *Hero_DressFashionRequest) GetFashionId() int64 {
	if m != nil {
		return m.FashionId
	}
	return 0
}

func (*Hero_DressFashionRequest) XXX_MessageName() string {
	return "service.Hero.DressFashionRequest"
}

type Hero_DressFashionResponse struct {
}

func (m *Hero_DressFashionResponse) Reset()      { *m = Hero_DressFashionResponse{} }
func (*Hero_DressFashionResponse) ProtoMessage() {}
func (*Hero_DressFashionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 21}
}
func (m *Hero_DressFashionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_DressFashionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_DressFashionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_DressFashionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_DressFashionResponse.Merge(m, src)
}
func (m *Hero_DressFashionResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_DressFashionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_DressFashionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_DressFashionResponse proto.InternalMessageInfo

func (*Hero_DressFashionResponse) XXX_MessageName() string {
	return "service.Hero.DressFashionResponse"
}

//----------------------cheat-----------------------//
type Hero_CheatAddHeroRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Hero_CheatAddHeroRequest) Reset()      { *m = Hero_CheatAddHeroRequest{} }
func (*Hero_CheatAddHeroRequest) ProtoMessage() {}
func (*Hero_CheatAddHeroRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 22}
}
func (m *Hero_CheatAddHeroRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_CheatAddHeroRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_CheatAddHeroRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_CheatAddHeroRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_CheatAddHeroRequest.Merge(m, src)
}
func (m *Hero_CheatAddHeroRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_CheatAddHeroRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_CheatAddHeroRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_CheatAddHeroRequest proto.InternalMessageInfo

func (m *Hero_CheatAddHeroRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*Hero_CheatAddHeroRequest) XXX_MessageName() string {
	return "service.Hero.CheatAddHeroRequest"
}

type Hero_CheatAddHeroResponse struct {
	Hero *models.Hero `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
}

func (m *Hero_CheatAddHeroResponse) Reset()      { *m = Hero_CheatAddHeroResponse{} }
func (*Hero_CheatAddHeroResponse) ProtoMessage() {}
func (*Hero_CheatAddHeroResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 23}
}
func (m *Hero_CheatAddHeroResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_CheatAddHeroResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_CheatAddHeroResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_CheatAddHeroResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_CheatAddHeroResponse.Merge(m, src)
}
func (m *Hero_CheatAddHeroResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_CheatAddHeroResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_CheatAddHeroResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_CheatAddHeroResponse proto.InternalMessageInfo

func (m *Hero_CheatAddHeroResponse) GetHero() *models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (*Hero_CheatAddHeroResponse) XXX_MessageName() string {
	return "service.Hero.CheatAddHeroResponse"
}

// 解锁装备满强化，满精炼
type Hero_CheatSetSlotMaxRequest struct {
	HeroId []int64 `protobuf:"varint,1,rep,packed,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
}

func (m *Hero_CheatSetSlotMaxRequest) Reset()      { *m = Hero_CheatSetSlotMaxRequest{} }
func (*Hero_CheatSetSlotMaxRequest) ProtoMessage() {}
func (*Hero_CheatSetSlotMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 24}
}
func (m *Hero_CheatSetSlotMaxRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_CheatSetSlotMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_CheatSetSlotMaxRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_CheatSetSlotMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_CheatSetSlotMaxRequest.Merge(m, src)
}
func (m *Hero_CheatSetSlotMaxRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_CheatSetSlotMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_CheatSetSlotMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_CheatSetSlotMaxRequest proto.InternalMessageInfo

func (m *Hero_CheatSetSlotMaxRequest) GetHeroId() []int64 {
	if m != nil {
		return m.HeroId
	}
	return nil
}

func (*Hero_CheatSetSlotMaxRequest) XXX_MessageName() string {
	return "service.Hero.CheatSetSlotMaxRequest"
}

type Hero_CheatSetSlotMaxResponse struct {
}

func (m *Hero_CheatSetSlotMaxResponse) Reset()      { *m = Hero_CheatSetSlotMaxResponse{} }
func (*Hero_CheatSetSlotMaxResponse) ProtoMessage() {}
func (*Hero_CheatSetSlotMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 25}
}
func (m *Hero_CheatSetSlotMaxResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_CheatSetSlotMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_CheatSetSlotMaxResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_CheatSetSlotMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_CheatSetSlotMaxResponse.Merge(m, src)
}
func (m *Hero_CheatSetSlotMaxResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_CheatSetSlotMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_CheatSetSlotMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_CheatSetSlotMaxResponse proto.InternalMessageInfo

func (*Hero_CheatSetSlotMaxResponse) XXX_MessageName() string {
	return "service.Hero.CheatSetSlotMaxResponse"
}

// 魂契养成全满级
type Hero_CheatSetSoulContractMaxRequest struct {
	HeroId []int64 `protobuf:"varint,1,rep,packed,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
}

func (m *Hero_CheatSetSoulContractMaxRequest) Reset()      { *m = Hero_CheatSetSoulContractMaxRequest{} }
func (*Hero_CheatSetSoulContractMaxRequest) ProtoMessage() {}
func (*Hero_CheatSetSoulContractMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 26}
}
func (m *Hero_CheatSetSoulContractMaxRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_CheatSetSoulContractMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_CheatSetSoulContractMaxRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_CheatSetSoulContractMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_CheatSetSoulContractMaxRequest.Merge(m, src)
}
func (m *Hero_CheatSetSoulContractMaxRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_CheatSetSoulContractMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_CheatSetSoulContractMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_CheatSetSoulContractMaxRequest proto.InternalMessageInfo

func (m *Hero_CheatSetSoulContractMaxRequest) GetHeroId() []int64 {
	if m != nil {
		return m.HeroId
	}
	return nil
}

func (*Hero_CheatSetSoulContractMaxRequest) XXX_MessageName() string {
	return "service.Hero.CheatSetSoulContractMaxRequest"
}

type Hero_CheatSetSoulContractMaxResponse struct {
}

func (m *Hero_CheatSetSoulContractMaxResponse) Reset()      { *m = Hero_CheatSetSoulContractMaxResponse{} }
func (*Hero_CheatSetSoulContractMaxResponse) ProtoMessage() {}
func (*Hero_CheatSetSoulContractMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 27}
}
func (m *Hero_CheatSetSoulContractMaxResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_CheatSetSoulContractMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_CheatSetSoulContractMaxResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_CheatSetSoulContractMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_CheatSetSoulContractMaxResponse.Merge(m, src)
}
func (m *Hero_CheatSetSoulContractMaxResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_CheatSetSoulContractMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_CheatSetSoulContractMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_CheatSetSoulContractMaxResponse proto.InternalMessageInfo

func (*Hero_CheatSetSoulContractMaxResponse) XXX_MessageName() string {
	return "service.Hero.CheatSetSoulContractMaxResponse"
}

// 获得英雄
type Hero_GotHeroPush struct {
	Hero []*models.Hero `protobuf:"bytes,1,rep,name=hero,proto3" json:"hero,omitempty"`
}

func (m *Hero_GotHeroPush) Reset()      { *m = Hero_GotHeroPush{} }
func (*Hero_GotHeroPush) ProtoMessage() {}
func (*Hero_GotHeroPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 28}
}
func (m *Hero_GotHeroPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_GotHeroPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_GotHeroPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_GotHeroPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_GotHeroPush.Merge(m, src)
}
func (m *Hero_GotHeroPush) XXX_Size() int {
	return m.Size()
}
func (m *Hero_GotHeroPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_GotHeroPush.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_GotHeroPush proto.InternalMessageInfo

func (m *Hero_GotHeroPush) GetHero() []*models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (*Hero_GotHeroPush) XXX_MessageName() string {
	return "service.Hero.GotHeroPush"
}

// 英雄更新
type Hero_HeroUpdatePush struct {
	Hero []*models.Hero `protobuf:"bytes,1,rep,name=hero,proto3" json:"hero,omitempty"`
}

func (m *Hero_HeroUpdatePush) Reset()      { *m = Hero_HeroUpdatePush{} }
func (*Hero_HeroUpdatePush) ProtoMessage() {}
func (*Hero_HeroUpdatePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 29}
}
func (m *Hero_HeroUpdatePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_HeroUpdatePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_HeroUpdatePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_HeroUpdatePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_HeroUpdatePush.Merge(m, src)
}
func (m *Hero_HeroUpdatePush) XXX_Size() int {
	return m.Size()
}
func (m *Hero_HeroUpdatePush) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_HeroUpdatePush.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_HeroUpdatePush proto.InternalMessageInfo

func (m *Hero_HeroUpdatePush) GetHero() []*models.Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (*Hero_HeroUpdatePush) XXX_MessageName() string {
	return "service.Hero.HeroUpdatePush"
}

// 可领取奖励的传记列表
type Hero_BiographyCanGetRewardPush struct {
	List []int64 `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
}

func (m *Hero_BiographyCanGetRewardPush) Reset()      { *m = Hero_BiographyCanGetRewardPush{} }
func (*Hero_BiographyCanGetRewardPush) ProtoMessage() {}
func (*Hero_BiographyCanGetRewardPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 30}
}
func (m *Hero_BiographyCanGetRewardPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_BiographyCanGetRewardPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_BiographyCanGetRewardPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_BiographyCanGetRewardPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_BiographyCanGetRewardPush.Merge(m, src)
}
func (m *Hero_BiographyCanGetRewardPush) XXX_Size() int {
	return m.Size()
}
func (m *Hero_BiographyCanGetRewardPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_BiographyCanGetRewardPush.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_BiographyCanGetRewardPush proto.InternalMessageInfo

func (m *Hero_BiographyCanGetRewardPush) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Hero_BiographyCanGetRewardPush) XXX_MessageName() string {
	return "service.Hero.BiographyCanGetRewardPush"
}

// 时装过期推送
type Hero_FashionExpiredPush struct {
	HeroOriginId int64 `protobuf:"varint,1,opt,name=hero_origin_id,json=heroOriginId,proto3" json:"hero_origin_id,omitempty"`
	FashionId    int64 `protobuf:"varint,2,opt,name=fashion_id,json=fashionId,proto3" json:"fashion_id,omitempty"`
}

func (m *Hero_FashionExpiredPush) Reset()      { *m = Hero_FashionExpiredPush{} }
func (*Hero_FashionExpiredPush) ProtoMessage() {}
func (*Hero_FashionExpiredPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 31}
}
func (m *Hero_FashionExpiredPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_FashionExpiredPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_FashionExpiredPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_FashionExpiredPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_FashionExpiredPush.Merge(m, src)
}
func (m *Hero_FashionExpiredPush) XXX_Size() int {
	return m.Size()
}
func (m *Hero_FashionExpiredPush) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_FashionExpiredPush.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_FashionExpiredPush proto.InternalMessageInfo

func (m *Hero_FashionExpiredPush) GetHeroOriginId() int64 {
	if m != nil {
		return m.HeroOriginId
	}
	return 0
}

func (m *Hero_FashionExpiredPush) GetFashionId() int64 {
	if m != nil {
		return m.FashionId
	}
	return 0
}

func (*Hero_FashionExpiredPush) XXX_MessageName() string {
	return "service.Hero.FashionExpiredPush"
}

//----------------------fashionserver调用gameserver的协议----------------------//
// 时装过期
type Hero_FashionExpiredRequest struct {
	HeroId    int64 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	FashionId int64 `protobuf:"varint,2,opt,name=fashion_id,json=fashionId,proto3" json:"fashion_id,omitempty"`
}

func (m *Hero_FashionExpiredRequest) Reset()      { *m = Hero_FashionExpiredRequest{} }
func (*Hero_FashionExpiredRequest) ProtoMessage() {}
func (*Hero_FashionExpiredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 32}
}
func (m *Hero_FashionExpiredRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_FashionExpiredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_FashionExpiredRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_FashionExpiredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_FashionExpiredRequest.Merge(m, src)
}
func (m *Hero_FashionExpiredRequest) XXX_Size() int {
	return m.Size()
}
func (m *Hero_FashionExpiredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_FashionExpiredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_FashionExpiredRequest proto.InternalMessageInfo

func (m *Hero_FashionExpiredRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero_FashionExpiredRequest) GetFashionId() int64 {
	if m != nil {
		return m.FashionId
	}
	return 0
}

func (*Hero_FashionExpiredRequest) XXX_MessageName() string {
	return "service.Hero.FashionExpiredRequest"
}

type Hero_FashionExpiredResponse struct {
}

func (m *Hero_FashionExpiredResponse) Reset()      { *m = Hero_FashionExpiredResponse{} }
func (*Hero_FashionExpiredResponse) ProtoMessage() {}
func (*Hero_FashionExpiredResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d101bba0df5bf860, []int{0, 33}
}
func (m *Hero_FashionExpiredResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Hero_FashionExpiredResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Hero_FashionExpiredResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Hero_FashionExpiredResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero_FashionExpiredResponse.Merge(m, src)
}
func (m *Hero_FashionExpiredResponse) XXX_Size() int {
	return m.Size()
}
func (m *Hero_FashionExpiredResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero_FashionExpiredResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hero_FashionExpiredResponse proto.InternalMessageInfo

func (*Hero_FashionExpiredResponse) XXX_MessageName() string {
	return "service.Hero.FashionExpiredResponse"
}
func init() {
	proto.RegisterEnum("service.HeroErrorCode", HeroErrorCode_name, HeroErrorCode_value)
	proto.RegisterType((*Hero)(nil), "service.Hero")
	proto.RegisterType((*Hero_HeroListRequest)(nil), "service.Hero.HeroListRequest")
	proto.RegisterType((*Hero_HeroListResponse)(nil), "service.Hero.HeroListResponse")
	proto.RegisterType((*Hero_UpgradeSlotRequest)(nil), "service.Hero.UpgradeSlotRequest")
	proto.RegisterType((*Hero_UpgradeSlotResponse)(nil), "service.Hero.UpgradeSlotResponse")
	proto.RegisterType((*Hero_WearEquipRequest)(nil), "service.Hero.WearEquipRequest")
	proto.RegisterType((*Hero_WearEquipResponse)(nil), "service.Hero.WearEquipResponse")
	proto.RegisterType((*Hero_TakeDownEquipRequest)(nil), "service.Hero.TakeDownEquipRequest")
	proto.RegisterType((*Hero_TakeDownEquipResponse)(nil), "service.Hero.TakeDownEquipResponse")
	proto.RegisterType((*Hero_MeltEquipRequest)(nil), "service.Hero.MeltEquipRequest")
	proto.RegisterType((*Hero_MeltEquipResponse)(nil), "service.Hero.MeltEquipResponse")
	proto.RegisterType((*Hero_UpgradeSlotMeltStarRequest)(nil), "service.Hero.UpgradeSlotMeltStarRequest")
	proto.RegisterType((*Hero_UpgradeSlotMeltStarResponse)(nil), "service.Hero.UpgradeSlotMeltStarResponse")
	proto.RegisterType((*Hero_BiographyRewardInfoRequest)(nil), "service.Hero.BiographyRewardInfoRequest")
	proto.RegisterType((*Hero_BiographyRewardInfoResponse)(nil), "service.Hero.BiographyRewardInfoResponse")
	proto.RegisterType((*Hero_BiographyGetRewardRequest)(nil), "service.Hero.BiographyGetRewardRequest")
	proto.RegisterType((*Hero_BiographyGetRewardResponse)(nil), "service.Hero.BiographyGetRewardResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Hero.BiographyGetRewardResponse.RewardEntry")
	proto.RegisterType((*Hero_UpgradeSoulContractRequest)(nil), "service.Hero.UpgradeSoulContractRequest")
	proto.RegisterType((*Hero_UpgradeSoulContractResponse)(nil), "service.Hero.UpgradeSoulContractResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "service.Hero.UpgradeSoulContractResponse.RewardEntry")
	proto.RegisterType((*Hero_ActivateResonanceRequest)(nil), "service.Hero.ActivateResonanceRequest")
	proto.RegisterType((*Hero_ActivateResonanceResponse)(nil), "service.Hero.ActivateResonanceResponse")
	proto.RegisterType((*Hero_DressFashionRequest)(nil), "service.Hero.DressFashionRequest")
	proto.RegisterType((*Hero_DressFashionResponse)(nil), "service.Hero.DressFashionResponse")
	proto.RegisterType((*Hero_CheatAddHeroRequest)(nil), "service.Hero.CheatAddHeroRequest")
	proto.RegisterType((*Hero_CheatAddHeroResponse)(nil), "service.Hero.CheatAddHeroResponse")
	proto.RegisterType((*Hero_CheatSetSlotMaxRequest)(nil), "service.Hero.CheatSetSlotMaxRequest")
	proto.RegisterType((*Hero_CheatSetSlotMaxResponse)(nil), "service.Hero.CheatSetSlotMaxResponse")
	proto.RegisterType((*Hero_CheatSetSoulContractMaxRequest)(nil), "service.Hero.CheatSetSoulContractMaxRequest")
	proto.RegisterType((*Hero_CheatSetSoulContractMaxResponse)(nil), "service.Hero.CheatSetSoulContractMaxResponse")
	proto.RegisterType((*Hero_GotHeroPush)(nil), "service.Hero.GotHeroPush")
	proto.RegisterType((*Hero_HeroUpdatePush)(nil), "service.Hero.HeroUpdatePush")
	proto.RegisterType((*Hero_BiographyCanGetRewardPush)(nil), "service.Hero.BiographyCanGetRewardPush")
	proto.RegisterType((*Hero_FashionExpiredPush)(nil), "service.Hero.FashionExpiredPush")
	proto.RegisterType((*Hero_FashionExpiredRequest)(nil), "service.Hero.FashionExpiredRequest")
	proto.RegisterType((*Hero_FashionExpiredResponse)(nil), "service.Hero.FashionExpiredResponse")
}

func init() { proto.RegisterFile("proto/service/hero.proto", fileDescriptor_d101bba0df5bf860) }

var fileDescriptor_d101bba0df5bf860 = []byte{
	// 1622 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x53, 0x14, 0xd9,
	0x15, 0x67, 0x18, 0x04, 0xb9, 0x20, 0x34, 0x97, 0xaf, 0xa1, 0x89, 0x13, 0x48, 0x99, 0x94, 0xa5,
	0x25, 0x44, 0x88, 0x11, 0x93, 0x4a, 0x19, 0x81, 0x41, 0x27, 0x25, 0x98, 0x1a, 0xb4, 0x52, 0xf1,
	0xc5, 0x6a, 0xa7, 0xaf, 0x4c, 0x97, 0x43, 0xdf, 0xb1, 0xbb, 0x41, 0x7c, 0x33, 0x06, 0x14, 0x46,
	0x26, 0x18, 0x63, 0xf0, 0x63, 0xd9, 0x5a, 0x5d, 0xb4, 0x70, 0xa9, 0x42, 0x94, 0x5d, 0x90, 0xe5,
	0x43, 0xab, 0xf6, 0xc9, 0xdd, 0x27, 0x1f, 0x7d, 0xdc, 0x85, 0xe9, 0xf9, 0x78, 0xdb, 0x3f, 0x61,
	0xab, 0xef, 0xbd, 0xfd, 0x31, 0x08, 0xeb, 0xa8, 0xfb, 0xa2, 0x73, 0xef, 0x3d, 0xbf, 0x73, 0x7e,
	0xe7, 0x77, 0xce, 0x3d, 0x7d, 0x01, 0x9e, 0x88, 0x82, 0x35, 0xdc, 0xa8, 0x22, 0xa5, 0x5f, 0x0a,
	0xa2, 0xc6, 0x10, 0x52, 0x70, 0x03, 0xd9, 0x82, 0x05, 0x6c, 0x8f, 0xaf, 0xa6, 0x26, 0xbd, 0x58,
	0x44, 0x61, 0xd5, 0x61, 0xb1, 0xe1, 0xe0, 0xac, 0xa0, 0x22, 0x7a, 0xf0, 0x1b, 0xbd, 0x0c, 0xe4,
	0x1d, 0x43, 0x0a, 0xe6, 0xcb, 0x40, 0xa9, 0xf1, 0xff, 0x71, 0x49, 0xd5, 0x02, 0xe8, 0x42, 0x1f,
	0x52, 0x35, 0x7e, 0x2f, 0xe0, 0xec, 0x2d, 0x35, 0x82, 0x65, 0x15, 0xc1, 0x6a, 0x50, 0x60, 0xb8,
	0x3d, 0x23, 0x89, 0x1e, 0x57, 0x9d, 0x7b, 0xb7, 0x3b, 0x90, 0x6f, 0x2c, 0xfd, 0x22, 0xdf, 0x01,
	0xe0, 0xa9, 0x48, 0x8f, 0x22, 0x88, 0xa8, 0x3b, 0x8c, 0x4d, 0x17, 0x99, 0xe6, 0x2e, 0xdb, 0xdc,
	0x38, 0x50, 0xc3, 0x58, 0x33, 0x0e, 0x72, 0xe9, 0x81, 0xb1, 0xf4, 0x8b, 0xfc, 0x41, 0x50, 0x9e,
	0xe1, 0x87, 0xc5, 0xad, 0x03, 0x79, 0x06, 0x92, 0x78, 0x29, 0x6a, 0x2a, 0x6e, 0xa0, 0x99, 0x34,
	0x18, 0xfc, 0x02, 0xe4, 0x84, 0xef, 0x00, 0xdc, 0x3f, 0x90, 0xa0, 0xf8, 0x2e, 0xf4, 0x49, 0x91,
	0x77, 0x86, 0xaf, 0x01, 0xdb, 0x91, 0x61, 0x48, 0xe3, 0xbb, 0x77, 0x17, 0x06, 0x0a, 0xc8, 0xda,
	0x2f, 0xf2, 0x5d, 0xa0, 0xcc, 0xe1, 0x27, 0xdb, 0xf0, 0x46, 0x28, 0x49, 0x43, 0xbd, 0xa6, 0x43,
	0x77, 0x20, 0xdf, 0x58, 0xfa, 0x45, 0xfe, 0x18, 0xa8, 0x38, 0x29, 0x9c, 0x47, 0xed, 0xf8, 0xa2,
	0x9c, 0x1d, 0xb7, 0x2d, 0xa5, 0x09, 0x80, 0xca, 0x0d, 0x9e, 0x3e, 0x8c, 0x9d, 0xcb, 0xc1, 0xee,
	0x0c, 0xe0, 0x3a, 0x51, 0x58, 0xfb, 0x38, 0x66, 0x19, 0x72, 0xba, 0x33, 0xe5, 0x2c, 0x07, 0x65,
	0x8e, 0x00, 0x94, 0x30, 0xdf, 0x05, 0x78, 0x47, 0x91, 0x8d, 0xf3, 0x6e, 0x4d, 0x50, 0x3e, 0x5c,
	0x99, 0xc3, 0xa0, 0x76, 0x53, 0x7f, 0x59, 0x37, 0xcf, 0xaf, 0x00, 0xdf, 0x2a, 0xe1, 0x1e, 0x45,
	0x88, 0x84, 0x2e, 0x05, 0xd0, 0x45, 0x41, 0x11, 0xfd, 0xf2, 0x39, 0x6c, 0x5e, 0x84, 0xfd, 0xa0,
	0x76, 0xd3, 0x53, 0xe6, 0x1e, 0x82, 0xbc, 0xb0, 0xa4, 0x6a, 0xec, 0x42, 0x90, 0xdf, 0x7c, 0x0b,
	0xa8, 0xb1, 0x20, 0x47, 0x91, 0x46, 0x51, 0x66, 0x82, 0xb5, 0xa0, 0x50, 0x21, 0x1b, 0x76, 0x8a,
	0xdb, 0xe9, 0x86, 0x5f, 0xe4, 0xbf, 0x71, 0x39, 0xb8, 0x38, 0xa0, 0x2c, 0xd8, 0x71, 0x90, 0x4f,
	0x4d, 0x49, 0xb8, 0xa2, 0xa6, 0x3f, 0x34, 0xb0, 0xcb, 0x4f, 0xd2, 0x69, 0xd8, 0x1a, 0xd9, 0x40,
	0x97, 0x3e, 0x59, 0x53, 0x2e, 0x05, 0x98, 0x8f, 0x4c, 0x26, 0xb9, 0x1b, 0x98, 0x1c, 0x02, 0x45,
	0x0e, 0x0c, 0xe4, 0x80, 0xfb, 0x3c, 0xba, 0xc4, 0xf8, 0x1a, 0x3f, 0x61, 0x05, 0xd8, 0xd6, 0x2f,
	0x84, 0xfb, 0x10, 0x43, 0xd2, 0xc5, 0x9f, 0x72, 0x5b, 0x5c, 0x7c, 0xab, 0x5d, 0x60, 0xdc, 0x17,
	0x6e, 0xc3, 0xb2, 0xa6, 0x08, 0x41, 0x6b, 0x2a, 0xec, 0x02, 0x25, 0xa4, 0xc0, 0x58, 0x91, 0x7a,
	0x24, 0xd9, 0x16, 0xa1, 0xd8, 0xd8, 0x3d, 0x41, 0x36, 0xfd, 0x22, 0xff, 0xad, 0xcb, 0xae, 0x6a,
	0x86, 0x93, 0xac, 0xbb, 0xbe, 0xd3, 0xd2, 0x2a, 0x97, 0x68, 0x75, 0x20, 0x53, 0xab, 0x9f, 0x71,
	0xbe, 0x99, 0x58, 0x1f, 0xa3, 0x47, 0x10, 0x78, 0x8e, 0x04, 0x35, 0xa9, 0x5f, 0xd0, 0x50, 0x00,
	0xa9, 0x58, 0x16, 0xe4, 0x20, 0x7a, 0x2f, 0x35, 0x60, 0x3d, 0x28, 0x56, 0x4c, 0xa4, 0x5d, 0xac,
	0x22, 0x6b, 0xcf, 0x2f, 0xf2, 0x7f, 0x01, 0x35, 0x9b, 0x04, 0xc9, 0xfa, 0x0e, 0x9c, 0x06, 0xe5,
	0xed, 0x0a, 0x52, 0xd5, 0x0e, 0x41, 0x0d, 0x49, 0x58, 0x7e, 0x3f, 0x7a, 0x3b, 0x01, 0x38, 0x47,
	0x71, 0x36, 0xb9, 0x42, 0xb6, 0xe3, 0x17, 0xf9, 0x2a, 0x50, 0x91, 0xe9, 0x9b, 0x0d, 0x82, 0xdf,
	0x82, 0xf2, 0xb6, 0x10, 0x12, 0xb4, 0x23, 0xa2, 0x48, 0x98, 0xb0, 0x98, 0x25, 0x20, 0xd7, 0x8a,
	0x93, 0x2b, 0x89, 0x7c, 0x0b, 0xa8, 0xc8, 0x34, 0xcb, 0x3a, 0xa9, 0xfd, 0xa0, 0x8a, 0x20, 0xbb,
	0x91, 0x46, 0x46, 0x83, 0x30, 0xb0, 0xe9, 0x94, 0x71, 0x7e, 0xc9, 0x6a, 0x40, 0xf5, 0x5b, 0x10,
	0x46, 0xf7, 0x10, 0xf0, 0x5a, 0x47, 0x8e, 0xae, 0xc9, 0xc6, 0x6b, 0x3d, 0xf8, 0xf5, 0x96, 0x50,
	0xe6, 0xbd, 0x11, 0x14, 0x1d, 0xc5, 0x9a, 0x41, 0xfe, 0xef, 0x7d, 0x6a, 0xc8, 0x91, 0x9c, 0x7b,
	0x8b, 0xe4, 0x9a, 0x40, 0x89, 0xb1, 0x3a, 0x15, 0x11, 0x05, 0x0d, 0x65, 0x89, 0x69, 0x74, 0x0c,
	0xa6, 0x36, 0x41, 0xb6, 0xc6, 0x04, 0x81, 0x6f, 0x36, 0xc9, 0xfe, 0x09, 0x20, 0xab, 0x9a, 0x6f,
	0x20, 0x22, 0x29, 0x88, 0x5a, 0xfe, 0x22, 0x5d, 0x71, 0x02, 0x54, 0x66, 0xba, 0x7e, 0xe7, 0x17,
	0xe0, 0x1d, 0x0e, 0x3d, 0xa0, 0x6a, 0xa3, 0x43, 0xaa, 0xed, 0x9e, 0xef, 0x8a, 0xc0, 0x0e, 0x43,
	0x05, 0x9f, 0xa2, 0x60, 0xa5, 0x0d, 0x8b, 0x08, 0xee, 0x01, 0xa5, 0x3e, 0x45, 0x31, 0xf6, 0xba,
	0xb0, 0xd6, 0x81, 0xfb, 0x64, 0x91, 0xcb, 0xe1, 0x2b, 0xa3, 0xf3, 0x9e, 0x32, 0x58, 0x9a, 0xba,
	0xfe, 0x2c, 0xfd, 0xc9, 0x60, 0x7c, 0x31, 0xa6, 0xcf, 0xdc, 0xd1, 0x27, 0x1e, 0xc3, 0x66, 0x00,
	0x99, 0xad, 0x5f, 0xee, 0x17, 0xc2, 0x92, 0x68, 0x34, 0x06, 0xe7, 0xe2, 0x6b, 0xa3, 0xf3, 0x9e,
	0x6a, 0x58, 0x99, 0xb8, 0x7d, 0x3f, 0xf1, 0xff, 0xe1, 0xe4, 0xbd, 0xc1, 0xd4, 0xe4, 0x90, 0xfe,
	0xf0, 0x5a, 0x7c, 0x35, 0x96, 0x5c, 0x7d, 0x02, 0x1b, 0x00, 0x67, 0x06, 0x40, 0x48, 0x24, 0x1f,
	0x40, 0x2e, 0x97, 0xf7, 0x44, 0xe7, 0x3d, 0x15, 0x10, 0xa6, 0x66, 0x9f, 0xeb, 0x43, 0xc3, 0xd4,
	0x9e, 0xfe, 0x0b, 0x0f, 0x82, 0x72, 0x66, 0xdf, 0x29, 0x0c, 0x10, 0x73, 0xe3, 0x23, 0xc6, 0xb9,
	0x79, 0x6f, 0x74, 0xde, 0xc3, 0x43, 0x0f, 0x35, 0x4b, 0xdc, 0xf9, 0x2c, 0xb9, 0x34, 0xa5, 0x3f,
	0x9f, 0x4b, 0xbd, 0x78, 0x11, 0x5f, 0x8c, 0xa6, 0xef, 0xde, 0x80, 0x2d, 0xa0, 0xc2, 0xa7, 0xd0,
	0x07, 0x4b, 0x04, 0x89, 0x27, 0xb4, 0x10, 0x22, 0x5e, 0xb8, 0x3c, 0x13, 0x69, 0x58, 0x53, 0x66,
	0x4b, 0xff, 0xd1, 0x87, 0x16, 0xe2, 0xcb, 0xe3, 0x34, 0x41, 0xb8, 0x97, 0x50, 0x24, 0x48, 0x4b,
	0x84, 0x6d, 0x96, 0x08, 0x14, 0x62, 0x89, 0xe0, 0x08, 0xc3, 0x54, 0xeb, 0x14, 0xb4, 0x60, 0x88,
	0xcb, 0xcf, 0x24, 0xa8, 0xdf, 0x1c, 0xb5, 0xe5, 0x1b, 0xfd, 0x3a, 0x3d, 0x14, 0x83, 0x7f, 0x05,
	0x35, 0x3e, 0x45, 0x69, 0x13, 0xe4, 0x2e, 0xac, 0x99, 0x34, 0x4f, 0x86, 0x24, 0x95, 0xa8, 0x58,
	0xc0, 0xd7, 0x47, 0xe7, 0x3d, 0x3b, 0x61, 0x6d, 0x7c, 0x31, 0x96, 0xfa, 0xf7, 0x2a, 0x73, 0x32,
	0xfc, 0x34, 0xf5, 0xf2, 0x6e, 0x7c, 0x71, 0x9a, 0x69, 0x49, 0x0b, 0x60, 0xd8, 0x1f, 0x13, 0x54,
	0xd3, 0x0b, 0xb7, 0xdd, 0x2c, 0x40, 0x6a, 0xf6, 0x11, 0x35, 0x4c, 0xcc, 0x3d, 0x48, 0x4c, 0x8c,
	0x30, 0x41, 0x9b, 0x41, 0xa5, 0x4f, 0x51, 0x02, 0x38, 0x8c, 0x8e, 0xa3, 0x7e, 0x14, 0x36, 0x60,
	0x32, 0xee, 0xeb, 0x09, 0x71, 0x85, 0x56, 0x15, 0xa6, 0x6e, 0xa6, 0x46, 0xe6, 0x92, 0x33, 0x23,
	0xc9, 0xa5, 0x29, 0x23, 0xfc, 0xc2, 0x97, 0xf0, 0x30, 0x01, 0x51, 0xae, 0xd6, 0xc3, 0x25, 0x82,
	0x44, 0x0e, 0xf0, 0xbb, 0xa2, 0xf3, 0x9e, 0x3a, 0xe8, 0xa5, 0x3c, 0x93, 0x57, 0x6f, 0x25, 0xaf,
	0xac, 0x58, 0xca, 0x5a, 0xc5, 0x87, 0xfb, 0x08, 0x55, 0xa3, 0xe4, 0xdd, 0x28, 0x8c, 0x82, 0x8c,
	0x6a, 0x91, 0xa5, 0xea, 0xec, 0xf3, 0xf4, 0xe5, 0x91, 0xc4, 0xf5, 0x2f, 0x98, 0xf9, 0x7e, 0x52,
	0x75, 0x12, 0x69, 0x20, 0x62, 0x53, 0x2c, 0x36, 0x29, 0xd2, 0x38, 0xc9, 0xe5, 0xb1, 0xf4, 0xf4,
	0x28, 0xa3, 0xf8, 0x47, 0xd2, 0xb9, 0x9d, 0xc2, 0x80, 0x81, 0x22, 0xa9, 0x71, 0x3b, 0x4c, 0x11,
	0x69, 0x63, 0xe8, 0xc3, 0x4f, 0x13, 0x13, 0x97, 0xf5, 0x87, 0x53, 0x0c, 0x4d, 0x12, 0x84, 0xbf,
	0x27, 0xa9, 0x59, 0xb7, 0xbf, 0x0b, 0x6b, 0xa7, 0xe4, 0x30, 0x0e, 0x9e, 0xe7, 0x4a, 0x4c, 0x72,
	0xf1, 0x95, 0xfb, 0xa9, 0x27, 0x4f, 0x13, 0x13, 0xd3, 0xa9, 0xa9, 0xc9, 0xf4, 0xad, 0x7f, 0xc1,
	0x76, 0x52, 0x72, 0x07, 0x82, 0xce, 0x0a, 0xae, 0x94, 0xdf, 0x13, 0x9d, 0xf7, 0xfc, 0x0e, 0xee,
	0xd2, 0x57, 0xff, 0xa7, 0x8f, 0xc4, 0x18, 0x8c, 0x68, 0xaf, 0x8f, 0xcd, 0xa6, 0x3f, 0xbf, 0xaa,
	0x8f, 0x8d, 0x27, 0xef, 0x0d, 0xea, 0x8f, 0xc6, 0xf5, 0xe8, 0x33, 0xf8, 0x37, 0x50, 0xe7, 0xf4,
	0xd2, 0x6e, 0xb4, 0x4e, 0x00, 0x45, 0x90, 0xa0, 0x59, 0xd3, 0x87, 0xe3, 0x4c, 0x75, 0x8d, 0x8b,
	0x71, 0xfd, 0x65, 0xfa, 0x5a, 0x4c, 0x7f, 0x18, 0xa3, 0x8e, 0xa8, 0x77, 0xe6, 0xab, 0x71, 0x23,
	0x23, 0xcd, 0x37, 0x20, 0xa9, 0x1a, 0x57, 0x96, 0x99, 0x82, 0xdd, 0xb5, 0x7f, 0x06, 0xd5, 0x46,
	0xe7, 0x64, 0x8e, 0x5c, 0x2a, 0x1a, 0x34, 0x1b, 0x37, 0x3d, 0x73, 0x45, 0x7f, 0xf4, 0x5f, 0x2a,
	0x1d, 0xd3, 0x8d, 0x2a, 0xd6, 0x0a, 0xea, 0x37, 0x80, 0xdb, 0xb0, 0x2c, 0x4a, 0x9a, 0x84, 0x65,
	0xbb, 0x54, 0xe5, 0xd6, 0x18, 0x98, 0x98, 0x66, 0xda, 0x8f, 0xdd, 0xd0, 0x63, 0xd7, 0x12, 0x9f,
	0x3e, 0x88, 0x2f, 0x2f, 0xc0, 0x26, 0x42, 0x80, 0xbd, 0x7f, 0xcf, 0x49, 0x32, 0xb2, 0x75, 0xaf,
	0x30, 0x49, 0x27, 0xe7, 0x5e, 0x24, 0xaf, 0xac, 0xd8, 0xba, 0x37, 0x03, 0x8f, 0x89, 0xf1, 0xc9,
	0xc1, 0x90, 0x20, 0x6b, 0x36, 0xa8, 0xd2, 0x04, 0xa5, 0xef, 0x0e, 0xa6, 0x67, 0x6e, 0xd9, 0xa0,
	0x43, 0xa4, 0xbc, 0xec, 0x32, 0xb3, 0xb7, 0x8d, 0x70, 0x36, 0x8c, 0xb8, 0x2a, 0x33, 0x4f, 0xab,
	0x42, 0xfa, 0xca, 0x92, 0x3e, 0x3a, 0x6e, 0xf7, 0xec, 0x11, 0xb0, 0xd3, 0x86, 0x5a, 0x6f, 0x87,
	0x93, 0xd8, 0x7c, 0x4e, 0x70, 0xd5, 0x6f, 0xb9, 0x48, 0xbc, 0xbc, 0x9c, 0xf8, 0x6a, 0xd9, 0x28,
	0xf2, 0xd0, 0xb3, 0xf4, 0xe2, 0x24, 0x3c, 0x00, 0x78, 0x36, 0xbd, 0xd8, 0x04, 0xee, 0xc2, 0x9a,
	0x09, 0x17, 0x39, 0x8f, 0x49, 0x3a, 0x71, 0x7b, 0x21, 0x35, 0x39, 0x94, 0x98, 0x98, 0xa6, 0x78,
	0x76, 0x47, 0xe9, 0xb4, 0x0b, 0x63, 0x47, 0x9a, 0x35, 0xd6, 0x1d, 0xa5, 0x63, 0xef, 0xfe, 0x98,
	0x95, 0x69, 0x6b, 0xd7, 0x9b, 0x1f, 0xbc, 0x39, 0x8f, 0xd7, 0xbc, 0xae, 0x57, 0x6b, 0x5e, 0xd7,
	0xeb, 0x35, 0xaf, 0xeb, 0xfb, 0x35, 0xaf, 0x2b, 0xb5, 0xe6, 0xcd, 0xf9, 0x71, 0xcd, 0xeb, 0xba,
	0xb1, 0xee, 0xcd, 0x79, 0xb5, 0xee, 0x75, 0xbd, 0x5e, 0xf7, 0xe6, 0xbc, 0x59, 0xf7, 0xe6, 0x9c,
	0xae, 0x0b, 0x62, 0x49, 0xde, 0x67, 0xbc, 0xfc, 0x90, 0xd2, 0x18, 0xc4, 0xbd, 0xbd, 0x58, 0x6e,
	0xcc, 0xf8, 0x53, 0xfa, 0x6c, 0x3e, 0x59, 0x36, 0xff, 0x14, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xbd,
	0xe7, 0x5c, 0x62, 0x0f, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_HeroListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_HeroListResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_UpgradeSlotRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_UpgradeSlotResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_WearEquipRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_WearEquipResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_TakeDownEquipRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_TakeDownEquipResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_MeltEquipRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_MeltEquipResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_UpgradeSlotMeltStarRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_UpgradeSlotMeltStarResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_BiographyRewardInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_BiographyRewardInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_BiographyGetRewardRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_BiographyGetRewardResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_UpgradeSoulContractRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_UpgradeSoulContractResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_ActivateResonanceRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_ActivateResonanceResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_DressFashionRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_DressFashionResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_CheatAddHeroRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_CheatAddHeroResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_CheatSetSlotMaxRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_CheatSetSlotMaxResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_CheatSetSoulContractMaxRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_CheatSetSoulContractMaxResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_GotHeroPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_HeroUpdatePush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_BiographyCanGetRewardPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_FashionExpiredPush.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_FashionExpiredRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolHero_FashionExpiredResponse.Get().(proto.Message)
	})
}

var poolHero = &sync.Pool{New: func() interface{} { return &Hero{} }}

func (m *Hero) ReleasePool() { m.Reset(); poolHero.Put(m); m = nil }

var poolHero_HeroListRequest = &sync.Pool{New: func() interface{} { return &Hero_HeroListRequest{} }}

func (m *Hero_HeroListRequest) ReleasePool() { m.Reset(); poolHero_HeroListRequest.Put(m); m = nil }

var poolHero_HeroListResponse = &sync.Pool{New: func() interface{} { return &Hero_HeroListResponse{} }}

func (m *Hero_HeroListResponse) ReleasePool() { m.Reset(); poolHero_HeroListResponse.Put(m); m = nil }

var poolHero_UpgradeSlotRequest = &sync.Pool{New: func() interface{} { return &Hero_UpgradeSlotRequest{} }}

func (m *Hero_UpgradeSlotRequest) ReleasePool() {
	m.Reset()
	poolHero_UpgradeSlotRequest.Put(m)
	m = nil
}

var poolHero_UpgradeSlotResponse = &sync.Pool{New: func() interface{} { return &Hero_UpgradeSlotResponse{} }}

func (m *Hero_UpgradeSlotResponse) ReleasePool() {
	m.Reset()
	poolHero_UpgradeSlotResponse.Put(m)
	m = nil
}

var poolHero_WearEquipRequest = &sync.Pool{New: func() interface{} { return &Hero_WearEquipRequest{} }}

func (m *Hero_WearEquipRequest) ReleasePool() { m.Reset(); poolHero_WearEquipRequest.Put(m); m = nil }

var poolHero_WearEquipResponse = &sync.Pool{New: func() interface{} { return &Hero_WearEquipResponse{} }}

func (m *Hero_WearEquipResponse) ReleasePool() { m.Reset(); poolHero_WearEquipResponse.Put(m); m = nil }

var poolHero_TakeDownEquipRequest = &sync.Pool{New: func() interface{} { return &Hero_TakeDownEquipRequest{} }}

func (m *Hero_TakeDownEquipRequest) ReleasePool() {
	m.Reset()
	poolHero_TakeDownEquipRequest.Put(m)
	m = nil
}

var poolHero_TakeDownEquipResponse = &sync.Pool{New: func() interface{} { return &Hero_TakeDownEquipResponse{} }}

func (m *Hero_TakeDownEquipResponse) ReleasePool() {
	m.Reset()
	poolHero_TakeDownEquipResponse.Put(m)
	m = nil
}

var poolHero_MeltEquipRequest = &sync.Pool{New: func() interface{} { return &Hero_MeltEquipRequest{} }}

func (m *Hero_MeltEquipRequest) ReleasePool() { m.Reset(); poolHero_MeltEquipRequest.Put(m); m = nil }

var poolHero_MeltEquipResponse = &sync.Pool{New: func() interface{} { return &Hero_MeltEquipResponse{} }}

func (m *Hero_MeltEquipResponse) ReleasePool() { m.Reset(); poolHero_MeltEquipResponse.Put(m); m = nil }

var poolHero_UpgradeSlotMeltStarRequest = &sync.Pool{New: func() interface{} { return &Hero_UpgradeSlotMeltStarRequest{} }}

func (m *Hero_UpgradeSlotMeltStarRequest) ReleasePool() {
	m.Reset()
	poolHero_UpgradeSlotMeltStarRequest.Put(m)
	m = nil
}

var poolHero_UpgradeSlotMeltStarResponse = &sync.Pool{New: func() interface{} { return &Hero_UpgradeSlotMeltStarResponse{} }}

func (m *Hero_UpgradeSlotMeltStarResponse) ReleasePool() {
	m.Reset()
	poolHero_UpgradeSlotMeltStarResponse.Put(m)
	m = nil
}

var poolHero_BiographyRewardInfoRequest = &sync.Pool{New: func() interface{} { return &Hero_BiographyRewardInfoRequest{} }}

func (m *Hero_BiographyRewardInfoRequest) ReleasePool() {
	m.Reset()
	poolHero_BiographyRewardInfoRequest.Put(m)
	m = nil
}

var poolHero_BiographyRewardInfoResponse = &sync.Pool{New: func() interface{} { return &Hero_BiographyRewardInfoResponse{} }}

func (m *Hero_BiographyRewardInfoResponse) ReleasePool() {
	m.Reset()
	poolHero_BiographyRewardInfoResponse.Put(m)
	m = nil
}

var poolHero_BiographyGetRewardRequest = &sync.Pool{New: func() interface{} { return &Hero_BiographyGetRewardRequest{} }}

func (m *Hero_BiographyGetRewardRequest) ReleasePool() {
	m.Reset()
	poolHero_BiographyGetRewardRequest.Put(m)
	m = nil
}

var poolHero_BiographyGetRewardResponse = &sync.Pool{New: func() interface{} { return &Hero_BiographyGetRewardResponse{} }}

func (m *Hero_BiographyGetRewardResponse) ReleasePool() {
	m.Reset()
	poolHero_BiographyGetRewardResponse.Put(m)
	m = nil
}

var poolHero_UpgradeSoulContractRequest = &sync.Pool{New: func() interface{} { return &Hero_UpgradeSoulContractRequest{} }}

func (m *Hero_UpgradeSoulContractRequest) ReleasePool() {
	m.Reset()
	poolHero_UpgradeSoulContractRequest.Put(m)
	m = nil
}

var poolHero_UpgradeSoulContractResponse = &sync.Pool{New: func() interface{} { return &Hero_UpgradeSoulContractResponse{} }}

func (m *Hero_UpgradeSoulContractResponse) ReleasePool() {
	m.Reset()
	poolHero_UpgradeSoulContractResponse.Put(m)
	m = nil
}

var poolHero_ActivateResonanceRequest = &sync.Pool{New: func() interface{} { return &Hero_ActivateResonanceRequest{} }}

func (m *Hero_ActivateResonanceRequest) ReleasePool() {
	m.Reset()
	poolHero_ActivateResonanceRequest.Put(m)
	m = nil
}

var poolHero_ActivateResonanceResponse = &sync.Pool{New: func() interface{} { return &Hero_ActivateResonanceResponse{} }}

func (m *Hero_ActivateResonanceResponse) ReleasePool() {
	m.Reset()
	poolHero_ActivateResonanceResponse.Put(m)
	m = nil
}

var poolHero_DressFashionRequest = &sync.Pool{New: func() interface{} { return &Hero_DressFashionRequest{} }}

func (m *Hero_DressFashionRequest) ReleasePool() {
	m.Reset()
	poolHero_DressFashionRequest.Put(m)
	m = nil
}

var poolHero_DressFashionResponse = &sync.Pool{New: func() interface{} { return &Hero_DressFashionResponse{} }}

func (m *Hero_DressFashionResponse) ReleasePool() {
	m.Reset()
	poolHero_DressFashionResponse.Put(m)
	m = nil
}

var poolHero_CheatAddHeroRequest = &sync.Pool{New: func() interface{} { return &Hero_CheatAddHeroRequest{} }}

func (m *Hero_CheatAddHeroRequest) ReleasePool() {
	m.Reset()
	poolHero_CheatAddHeroRequest.Put(m)
	m = nil
}

var poolHero_CheatAddHeroResponse = &sync.Pool{New: func() interface{} { return &Hero_CheatAddHeroResponse{} }}

func (m *Hero_CheatAddHeroResponse) ReleasePool() {
	m.Reset()
	poolHero_CheatAddHeroResponse.Put(m)
	m = nil
}

var poolHero_CheatSetSlotMaxRequest = &sync.Pool{New: func() interface{} { return &Hero_CheatSetSlotMaxRequest{} }}

func (m *Hero_CheatSetSlotMaxRequest) ReleasePool() {
	m.Reset()
	poolHero_CheatSetSlotMaxRequest.Put(m)
	m = nil
}

var poolHero_CheatSetSlotMaxResponse = &sync.Pool{New: func() interface{} { return &Hero_CheatSetSlotMaxResponse{} }}

func (m *Hero_CheatSetSlotMaxResponse) ReleasePool() {
	m.Reset()
	poolHero_CheatSetSlotMaxResponse.Put(m)
	m = nil
}

var poolHero_CheatSetSoulContractMaxRequest = &sync.Pool{New: func() interface{} { return &Hero_CheatSetSoulContractMaxRequest{} }}

func (m *Hero_CheatSetSoulContractMaxRequest) ReleasePool() {
	m.Reset()
	poolHero_CheatSetSoulContractMaxRequest.Put(m)
	m = nil
}

var poolHero_CheatSetSoulContractMaxResponse = &sync.Pool{New: func() interface{} { return &Hero_CheatSetSoulContractMaxResponse{} }}

func (m *Hero_CheatSetSoulContractMaxResponse) ReleasePool() {
	m.Reset()
	poolHero_CheatSetSoulContractMaxResponse.Put(m)
	m = nil
}

var poolHero_GotHeroPush = &sync.Pool{New: func() interface{} { return &Hero_GotHeroPush{} }}

func (m *Hero_GotHeroPush) ReleasePool() { m.Reset(); poolHero_GotHeroPush.Put(m); m = nil }

var poolHero_HeroUpdatePush = &sync.Pool{New: func() interface{} { return &Hero_HeroUpdatePush{} }}

func (m *Hero_HeroUpdatePush) ReleasePool() { m.Reset(); poolHero_HeroUpdatePush.Put(m); m = nil }

var poolHero_BiographyCanGetRewardPush = &sync.Pool{New: func() interface{} { return &Hero_BiographyCanGetRewardPush{} }}

func (m *Hero_BiographyCanGetRewardPush) ReleasePool() {
	m.Reset()
	poolHero_BiographyCanGetRewardPush.Put(m)
	m = nil
}

var poolHero_FashionExpiredPush = &sync.Pool{New: func() interface{} { return &Hero_FashionExpiredPush{} }}

func (m *Hero_FashionExpiredPush) ReleasePool() {
	m.Reset()
	poolHero_FashionExpiredPush.Put(m)
	m = nil
}

var poolHero_FashionExpiredRequest = &sync.Pool{New: func() interface{} { return &Hero_FashionExpiredRequest{} }}

func (m *Hero_FashionExpiredRequest) ReleasePool() {
	m.Reset()
	poolHero_FashionExpiredRequest.Put(m)
	m = nil
}

var poolHero_FashionExpiredResponse = &sync.Pool{New: func() interface{} { return &Hero_FashionExpiredResponse{} }}

func (m *Hero_FashionExpiredResponse) ReleasePool() {
	m.Reset()
	poolHero_FashionExpiredResponse.Put(m)
	m = nil
}
func (x HeroErrorCode) String() string {
	s, ok := HeroErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Hero) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero)
	if !ok {
		that2, ok := that.(Hero)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_HeroListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_HeroListRequest)
	if !ok {
		that2, ok := that.(Hero_HeroListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_HeroListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_HeroListResponse)
	if !ok {
		that2, ok := that.(Hero_HeroListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.HeroId) != len(that1.HeroId) {
		return false
	}
	for i := range this.HeroId {
		if this.HeroId[i] != that1.HeroId[i] {
			return false
		}
	}
	return true
}
func (this *Hero_UpgradeSlotRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_UpgradeSlotRequest)
	if !ok {
		that2, ok := that.(Hero_UpgradeSlotRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroId != that1.HeroId {
		return false
	}
	if this.SlotId != that1.SlotId {
		return false
	}
	return true
}
func (this *Hero_UpgradeSlotResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_UpgradeSlotResponse)
	if !ok {
		that2, ok := that.(Hero_UpgradeSlotResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	return true
}
func (this *Hero_WearEquipRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_WearEquipRequest)
	if !ok {
		that2, ok := that.(Hero_WearEquipRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroId != that1.HeroId {
		return false
	}
	if len(this.EquipId) != len(that1.EquipId) {
		return false
	}
	for i := range this.EquipId {
		if this.EquipId[i] != that1.EquipId[i] {
			return false
		}
	}
	return true
}
func (this *Hero_WearEquipResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_WearEquipResponse)
	if !ok {
		that2, ok := that.(Hero_WearEquipResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	if len(this.ItemId) != len(that1.ItemId) {
		return false
	}
	for i := range this.ItemId {
		if this.ItemId[i] != that1.ItemId[i] {
			return false
		}
	}
	return true
}
func (this *Hero_TakeDownEquipRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_TakeDownEquipRequest)
	if !ok {
		that2, ok := that.(Hero_TakeDownEquipRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroId != that1.HeroId {
		return false
	}
	if this.SlotId != that1.SlotId {
		return false
	}
	return true
}
func (this *Hero_TakeDownEquipResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_TakeDownEquipResponse)
	if !ok {
		that2, ok := that.(Hero_TakeDownEquipResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	if this.ItemId != that1.ItemId {
		return false
	}
	return true
}
func (this *Hero_MeltEquipRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_MeltEquipRequest)
	if !ok {
		that2, ok := that.(Hero_MeltEquipRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroId != that1.HeroId {
		return false
	}
	if this.SlotId != that1.SlotId {
		return false
	}
	if len(this.EquipId) != len(that1.EquipId) {
		return false
	}
	for i := range this.EquipId {
		if this.EquipId[i] != that1.EquipId[i] {
			return false
		}
	}
	return true
}
func (this *Hero_MeltEquipResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_MeltEquipResponse)
	if !ok {
		that2, ok := that.(Hero_MeltEquipResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_UpgradeSlotMeltStarRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_UpgradeSlotMeltStarRequest)
	if !ok {
		that2, ok := that.(Hero_UpgradeSlotMeltStarRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroId != that1.HeroId {
		return false
	}
	if this.SlotId != that1.SlotId {
		return false
	}
	return true
}
func (this *Hero_UpgradeSlotMeltStarResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_UpgradeSlotMeltStarResponse)
	if !ok {
		that2, ok := that.(Hero_UpgradeSlotMeltStarResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	return true
}
func (this *Hero_BiographyRewardInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_BiographyRewardInfoRequest)
	if !ok {
		that2, ok := that.(Hero_BiographyRewardInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_BiographyRewardInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_BiographyRewardInfoResponse)
	if !ok {
		that2, ok := that.(Hero_BiographyRewardInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if this.List[i] != that1.List[i] {
			return false
		}
	}
	return true
}
func (this *Hero_BiographyGetRewardRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_BiographyGetRewardRequest)
	if !ok {
		that2, ok := that.(Hero_BiographyGetRewardRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RewardId != that1.RewardId {
		return false
	}
	return true
}
func (this *Hero_BiographyGetRewardResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_BiographyGetRewardResponse)
	if !ok {
		that2, ok := that.(Hero_BiographyGetRewardResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Reward) != len(that1.Reward) {
		return false
	}
	for i := range this.Reward {
		if this.Reward[i] != that1.Reward[i] {
			return false
		}
	}
	if this.RewardId != that1.RewardId {
		return false
	}
	return true
}
func (this *Hero_UpgradeSoulContractRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_UpgradeSoulContractRequest)
	if !ok {
		that2, ok := that.(Hero_UpgradeSoulContractRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroOriginId != that1.HeroOriginId {
		return false
	}
	return true
}
func (this *Hero_UpgradeSoulContractResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_UpgradeSoulContractResponse)
	if !ok {
		that2, ok := that.(Hero_UpgradeSoulContractResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	if len(this.Reward) != len(that1.Reward) {
		return false
	}
	for i := range this.Reward {
		if this.Reward[i] != that1.Reward[i] {
			return false
		}
	}
	return true
}
func (this *Hero_ActivateResonanceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_ActivateResonanceRequest)
	if !ok {
		that2, ok := that.(Hero_ActivateResonanceRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroOriginId != that1.HeroOriginId {
		return false
	}
	if this.ResonanceId != that1.ResonanceId {
		return false
	}
	return true
}
func (this *Hero_ActivateResonanceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_ActivateResonanceResponse)
	if !ok {
		that2, ok := that.(Hero_ActivateResonanceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	return true
}
func (this *Hero_DressFashionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_DressFashionRequest)
	if !ok {
		that2, ok := that.(Hero_DressFashionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroOriginId != that1.HeroOriginId {
		return false
	}
	if this.FashionId != that1.FashionId {
		return false
	}
	return true
}
func (this *Hero_DressFashionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_DressFashionResponse)
	if !ok {
		that2, ok := that.(Hero_DressFashionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_CheatAddHeroRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_CheatAddHeroRequest)
	if !ok {
		that2, ok := that.(Hero_CheatAddHeroRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *Hero_CheatAddHeroResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_CheatAddHeroResponse)
	if !ok {
		that2, ok := that.(Hero_CheatAddHeroResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hero.Equal(that1.Hero) {
		return false
	}
	return true
}
func (this *Hero_CheatSetSlotMaxRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_CheatSetSlotMaxRequest)
	if !ok {
		that2, ok := that.(Hero_CheatSetSlotMaxRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.HeroId) != len(that1.HeroId) {
		return false
	}
	for i := range this.HeroId {
		if this.HeroId[i] != that1.HeroId[i] {
			return false
		}
	}
	return true
}
func (this *Hero_CheatSetSlotMaxResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_CheatSetSlotMaxResponse)
	if !ok {
		that2, ok := that.(Hero_CheatSetSlotMaxResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_CheatSetSoulContractMaxRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_CheatSetSoulContractMaxRequest)
	if !ok {
		that2, ok := that.(Hero_CheatSetSoulContractMaxRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.HeroId) != len(that1.HeroId) {
		return false
	}
	for i := range this.HeroId {
		if this.HeroId[i] != that1.HeroId[i] {
			return false
		}
	}
	return true
}
func (this *Hero_CheatSetSoulContractMaxResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_CheatSetSoulContractMaxResponse)
	if !ok {
		that2, ok := that.(Hero_CheatSetSoulContractMaxResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Hero_GotHeroPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_GotHeroPush)
	if !ok {
		that2, ok := that.(Hero_GotHeroPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Hero) != len(that1.Hero) {
		return false
	}
	for i := range this.Hero {
		if !this.Hero[i].Equal(that1.Hero[i]) {
			return false
		}
	}
	return true
}
func (this *Hero_HeroUpdatePush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_HeroUpdatePush)
	if !ok {
		that2, ok := that.(Hero_HeroUpdatePush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Hero) != len(that1.Hero) {
		return false
	}
	for i := range this.Hero {
		if !this.Hero[i].Equal(that1.Hero[i]) {
			return false
		}
	}
	return true
}
func (this *Hero_BiographyCanGetRewardPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_BiographyCanGetRewardPush)
	if !ok {
		that2, ok := that.(Hero_BiographyCanGetRewardPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if this.List[i] != that1.List[i] {
			return false
		}
	}
	return true
}
func (this *Hero_FashionExpiredPush) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_FashionExpiredPush)
	if !ok {
		that2, ok := that.(Hero_FashionExpiredPush)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroOriginId != that1.HeroOriginId {
		return false
	}
	if this.FashionId != that1.FashionId {
		return false
	}
	return true
}
func (this *Hero_FashionExpiredRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_FashionExpiredRequest)
	if !ok {
		that2, ok := that.(Hero_FashionExpiredRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.HeroId != that1.HeroId {
		return false
	}
	if this.FashionId != that1.FashionId {
		return false
	}
	return true
}
func (this *Hero_FashionExpiredResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Hero_FashionExpiredResponse)
	if !ok {
		that2, ok := that.(Hero_FashionExpiredResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Hero) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_HeroListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_HeroListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_HeroListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_HeroListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_HeroListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_HeroListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HeroId) > 0 {
		dAtA2 := make([]byte, len(m.HeroId)*10)
		var j1 int
		for _, num1 := range m.HeroId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintHero(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_UpgradeSlotRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_UpgradeSlotRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_UpgradeSlotRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SlotId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.SlotId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_UpgradeSlotResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_UpgradeSlotResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_UpgradeSlotResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_WearEquipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_WearEquipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_WearEquipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EquipId) > 0 {
		for iNdEx := len(m.EquipId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.EquipId[iNdEx])
			copy(dAtA[i:], m.EquipId[iNdEx])
			i = encodeVarintHero(dAtA, i, uint64(len(m.EquipId[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.HeroId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_WearEquipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_WearEquipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_WearEquipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ItemId) > 0 {
		dAtA5 := make([]byte, len(m.ItemId)*10)
		var j4 int
		for _, num1 := range m.ItemId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA5[j4] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j4++
			}
			dAtA5[j4] = uint8(num)
			j4++
		}
		i -= j4
		copy(dAtA[i:], dAtA5[:j4])
		i = encodeVarintHero(dAtA, i, uint64(j4))
		i--
		dAtA[i] = 0x12
	}
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_TakeDownEquipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_TakeDownEquipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_TakeDownEquipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SlotId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.SlotId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_TakeDownEquipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_TakeDownEquipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_TakeDownEquipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ItemId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x10
	}
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_MeltEquipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_MeltEquipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_MeltEquipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EquipId) > 0 {
		for iNdEx := len(m.EquipId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.EquipId[iNdEx])
			copy(dAtA[i:], m.EquipId[iNdEx])
			i = encodeVarintHero(dAtA, i, uint64(len(m.EquipId[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.SlotId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.SlotId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_MeltEquipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_MeltEquipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_MeltEquipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_UpgradeSlotMeltStarRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_UpgradeSlotMeltStarRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_UpgradeSlotMeltStarRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SlotId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.SlotId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_UpgradeSlotMeltStarResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_UpgradeSlotMeltStarResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_UpgradeSlotMeltStarResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_BiographyRewardInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_BiographyRewardInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_BiographyRewardInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_BiographyRewardInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_BiographyRewardInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_BiographyRewardInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		dAtA10 := make([]byte, len(m.List)*10)
		var j9 int
		for _, num1 := range m.List {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA10[j9] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j9++
			}
			dAtA10[j9] = uint8(num)
			j9++
		}
		i -= j9
		copy(dAtA[i:], dAtA10[:j9])
		i = encodeVarintHero(dAtA, i, uint64(j9))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_BiographyGetRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_BiographyGetRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_BiographyGetRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RewardId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.RewardId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_BiographyGetRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_BiographyGetRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_BiographyGetRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RewardId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.RewardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Reward) > 0 {
		for k := range m.Reward {
			v := m.Reward[k]
			baseI := i
			i = encodeVarintHero(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintHero(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintHero(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Hero_UpgradeSoulContractRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_UpgradeSoulContractRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_UpgradeSoulContractRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HeroOriginId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroOriginId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_UpgradeSoulContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_UpgradeSoulContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_UpgradeSoulContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reward) > 0 {
		for k := range m.Reward {
			v := m.Reward[k]
			baseI := i
			i = encodeVarintHero(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintHero(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintHero(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_ActivateResonanceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_ActivateResonanceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_ActivateResonanceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ResonanceId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.ResonanceId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroOriginId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroOriginId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_ActivateResonanceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_ActivateResonanceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_ActivateResonanceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_DressFashionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_DressFashionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_DressFashionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FashionId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.FashionId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroOriginId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroOriginId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_DressFashionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_DressFashionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_DressFashionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_CheatAddHeroRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_CheatAddHeroRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_CheatAddHeroRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_CheatAddHeroResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_CheatAddHeroResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_CheatAddHeroResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Hero != nil {
		{
			size, err := m.Hero.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHero(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_CheatSetSlotMaxRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_CheatSetSlotMaxRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_CheatSetSlotMaxRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HeroId) > 0 {
		dAtA15 := make([]byte, len(m.HeroId)*10)
		var j14 int
		for _, num1 := range m.HeroId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA15[j14] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j14++
			}
			dAtA15[j14] = uint8(num)
			j14++
		}
		i -= j14
		copy(dAtA[i:], dAtA15[:j14])
		i = encodeVarintHero(dAtA, i, uint64(j14))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_CheatSetSlotMaxResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_CheatSetSlotMaxResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_CheatSetSlotMaxResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_CheatSetSoulContractMaxRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_CheatSetSoulContractMaxRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_CheatSetSoulContractMaxRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HeroId) > 0 {
		dAtA17 := make([]byte, len(m.HeroId)*10)
		var j16 int
		for _, num1 := range m.HeroId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA17[j16] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j16++
			}
			dAtA17[j16] = uint8(num)
			j16++
		}
		i -= j16
		copy(dAtA[i:], dAtA17[:j16])
		i = encodeVarintHero(dAtA, i, uint64(j16))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_CheatSetSoulContractMaxResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_CheatSetSoulContractMaxResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_CheatSetSoulContractMaxResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Hero_GotHeroPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_GotHeroPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_GotHeroPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hero) > 0 {
		for iNdEx := len(m.Hero) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Hero[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHero(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Hero_HeroUpdatePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_HeroUpdatePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_HeroUpdatePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hero) > 0 {
		for iNdEx := len(m.Hero) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Hero[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHero(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Hero_BiographyCanGetRewardPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_BiographyCanGetRewardPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_BiographyCanGetRewardPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		dAtA19 := make([]byte, len(m.List)*10)
		var j18 int
		for _, num1 := range m.List {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA19[j18] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j18++
			}
			dAtA19[j18] = uint8(num)
			j18++
		}
		i -= j18
		copy(dAtA[i:], dAtA19[:j18])
		i = encodeVarintHero(dAtA, i, uint64(j18))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Hero_FashionExpiredPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_FashionExpiredPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_FashionExpiredPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FashionId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.FashionId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroOriginId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroOriginId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_FashionExpiredRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_FashionExpiredRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_FashionExpiredRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FashionId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.FashionId))
		i--
		dAtA[i] = 0x10
	}
	if m.HeroId != 0 {
		i = encodeVarintHero(dAtA, i, uint64(m.HeroId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Hero_FashionExpiredResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Hero_FashionExpiredResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Hero_FashionExpiredResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintHero(dAtA []byte, offset int, v uint64) int {
	offset -= sovHero(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Hero) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_HeroListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_HeroListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.HeroId == nil {
		w.RawString("null")
	} else if len(m.HeroId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.HeroId {
			w.Int64(int64(v))
			if i != len(m.HeroId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_UpgradeSlotRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroId != 0 {
		w.RawByte('"')
		w.RawString("hero_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroId))
		needWriteComma = true
	}
	if m.SlotId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("slot_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SlotId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_UpgradeSlotResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_WearEquipRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroId != 0 {
		w.RawByte('"')
		w.RawString("hero_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("equip_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.EquipId == nil {
		w.RawString("null")
	} else if len(m.EquipId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.EquipId {
			w.String(v)
			if i != len(m.EquipId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_WearEquipResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("item_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.ItemId == nil {
		w.RawString("null")
	} else if len(m.ItemId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.ItemId {
			w.Int64(int64(v))
			if i != len(m.ItemId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_TakeDownEquipRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroId != 0 {
		w.RawByte('"')
		w.RawString("hero_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroId))
		needWriteComma = true
	}
	if m.SlotId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("slot_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SlotId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_TakeDownEquipResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	if m.ItemId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("item_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ItemId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_MeltEquipRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroId != 0 {
		w.RawByte('"')
		w.RawString("hero_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroId))
		needWriteComma = true
	}
	if m.SlotId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("slot_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SlotId))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("equip_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.EquipId == nil {
		w.RawString("null")
	} else if len(m.EquipId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.EquipId {
			w.String(v)
			if i != len(m.EquipId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_MeltEquipResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_UpgradeSlotMeltStarRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroId != 0 {
		w.RawByte('"')
		w.RawString("hero_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroId))
		needWriteComma = true
	}
	if m.SlotId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("slot_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SlotId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_UpgradeSlotMeltStarResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_BiographyRewardInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_BiographyRewardInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			w.Int64(int64(v))
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_BiographyGetRewardRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RewardId != 0 {
		w.RawByte('"')
		w.RawString("reward_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RewardId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_BiographyGetRewardResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("reward")
	w.RawByte('"')
	w.RawByte(':')
	if m.Reward == nil {
		w.RawString("null")
	} else if len(m.Reward) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlReward := len(m.Reward)
		for k, v := range m.Reward {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlReward--
			if mlReward != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.RewardId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("reward_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RewardId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_UpgradeSoulContractRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroOriginId != 0 {
		w.RawByte('"')
		w.RawString("hero_origin_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroOriginId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_UpgradeSoulContractResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("reward")
	w.RawByte('"')
	w.RawByte(':')
	if m.Reward == nil {
		w.RawString("null")
	} else if len(m.Reward) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlReward := len(m.Reward)
		for k, v := range m.Reward {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlReward--
			if mlReward != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_ActivateResonanceRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroOriginId != 0 {
		w.RawByte('"')
		w.RawString("hero_origin_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroOriginId))
		needWriteComma = true
	}
	if m.ResonanceId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("resonance_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ResonanceId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_ActivateResonanceResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_DressFashionRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroOriginId != 0 {
		w.RawByte('"')
		w.RawString("hero_origin_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroOriginId))
		needWriteComma = true
	}
	if m.FashionId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("fashion_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.FashionId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_DressFashionResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_CheatAddHeroRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != 0 {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Id))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_CheatAddHeroResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	m.Hero.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_CheatSetSlotMaxRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.HeroId == nil {
		w.RawString("null")
	} else if len(m.HeroId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.HeroId {
			w.Int64(int64(v))
			if i != len(m.HeroId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_CheatSetSlotMaxResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_CheatSetSoulContractMaxRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero_id")
	w.RawByte('"')
	w.RawByte(':')
	if m.HeroId == nil {
		w.RawString("null")
	} else if len(m.HeroId) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.HeroId {
			w.Int64(int64(v))
			if i != len(m.HeroId)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_CheatSetSoulContractMaxResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero_GotHeroPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	if m.Hero == nil {
		w.RawString("null")
	} else if len(m.Hero) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Hero {
			v.JsonBytes(w)
			if i != len(m.Hero)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_HeroUpdatePush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("hero")
	w.RawByte('"')
	w.RawByte(':')
	if m.Hero == nil {
		w.RawString("null")
	} else if len(m.Hero) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Hero {
			v.JsonBytes(w)
			if i != len(m.Hero)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_BiographyCanGetRewardPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			w.Int64(int64(v))
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_FashionExpiredPush) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroOriginId != 0 {
		w.RawByte('"')
		w.RawString("hero_origin_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroOriginId))
		needWriteComma = true
	}
	if m.FashionId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("fashion_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.FashionId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_FashionExpiredRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.HeroId != 0 {
		w.RawByte('"')
		w.RawString("hero_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.HeroId))
		needWriteComma = true
	}
	if m.FashionId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("fashion_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.FashionId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Hero_FashionExpiredResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Hero) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero) GoString() string {
	return m.String()
}

func (m *Hero_HeroListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_HeroListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_HeroListRequest) GoString() string {
	return m.String()
}

func (m *Hero_HeroListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_HeroListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_HeroListResponse) GoString() string {
	return m.String()
}

func (m *Hero_UpgradeSlotRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_UpgradeSlotRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_UpgradeSlotRequest) GoString() string {
	return m.String()
}

func (m *Hero_UpgradeSlotResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_UpgradeSlotResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_UpgradeSlotResponse) GoString() string {
	return m.String()
}

func (m *Hero_WearEquipRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_WearEquipRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_WearEquipRequest) GoString() string {
	return m.String()
}

func (m *Hero_WearEquipResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_WearEquipResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_WearEquipResponse) GoString() string {
	return m.String()
}

func (m *Hero_TakeDownEquipRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_TakeDownEquipRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_TakeDownEquipRequest) GoString() string {
	return m.String()
}

func (m *Hero_TakeDownEquipResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_TakeDownEquipResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_TakeDownEquipResponse) GoString() string {
	return m.String()
}

func (m *Hero_MeltEquipRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_MeltEquipRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_MeltEquipRequest) GoString() string {
	return m.String()
}

func (m *Hero_MeltEquipResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_MeltEquipResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_MeltEquipResponse) GoString() string {
	return m.String()
}

func (m *Hero_UpgradeSlotMeltStarRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_UpgradeSlotMeltStarRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_UpgradeSlotMeltStarRequest) GoString() string {
	return m.String()
}

func (m *Hero_UpgradeSlotMeltStarResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_UpgradeSlotMeltStarResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_UpgradeSlotMeltStarResponse) GoString() string {
	return m.String()
}

func (m *Hero_BiographyRewardInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_BiographyRewardInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_BiographyRewardInfoRequest) GoString() string {
	return m.String()
}

func (m *Hero_BiographyRewardInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_BiographyRewardInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_BiographyRewardInfoResponse) GoString() string {
	return m.String()
}

func (m *Hero_BiographyGetRewardRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_BiographyGetRewardRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_BiographyGetRewardRequest) GoString() string {
	return m.String()
}

func (m *Hero_BiographyGetRewardResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_BiographyGetRewardResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_BiographyGetRewardResponse) GoString() string {
	return m.String()
}

func (m *Hero_UpgradeSoulContractRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_UpgradeSoulContractRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_UpgradeSoulContractRequest) GoString() string {
	return m.String()
}

func (m *Hero_UpgradeSoulContractResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_UpgradeSoulContractResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_UpgradeSoulContractResponse) GoString() string {
	return m.String()
}

func (m *Hero_ActivateResonanceRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_ActivateResonanceRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_ActivateResonanceRequest) GoString() string {
	return m.String()
}

func (m *Hero_ActivateResonanceResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_ActivateResonanceResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_ActivateResonanceResponse) GoString() string {
	return m.String()
}

func (m *Hero_DressFashionRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_DressFashionRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_DressFashionRequest) GoString() string {
	return m.String()
}

func (m *Hero_DressFashionResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_DressFashionResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_DressFashionResponse) GoString() string {
	return m.String()
}

func (m *Hero_CheatAddHeroRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_CheatAddHeroRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_CheatAddHeroRequest) GoString() string {
	return m.String()
}

func (m *Hero_CheatAddHeroResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_CheatAddHeroResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_CheatAddHeroResponse) GoString() string {
	return m.String()
}

func (m *Hero_CheatSetSlotMaxRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_CheatSetSlotMaxRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_CheatSetSlotMaxRequest) GoString() string {
	return m.String()
}

func (m *Hero_CheatSetSlotMaxResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_CheatSetSlotMaxResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_CheatSetSlotMaxResponse) GoString() string {
	return m.String()
}

func (m *Hero_CheatSetSoulContractMaxRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_CheatSetSoulContractMaxRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_CheatSetSoulContractMaxRequest) GoString() string {
	return m.String()
}

func (m *Hero_CheatSetSoulContractMaxResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_CheatSetSoulContractMaxResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_CheatSetSoulContractMaxResponse) GoString() string {
	return m.String()
}

func (m *Hero_GotHeroPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_GotHeroPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_GotHeroPush) GoString() string {
	return m.String()
}

func (m *Hero_HeroUpdatePush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_HeroUpdatePush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_HeroUpdatePush) GoString() string {
	return m.String()
}

func (m *Hero_BiographyCanGetRewardPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_BiographyCanGetRewardPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_BiographyCanGetRewardPush) GoString() string {
	return m.String()
}

func (m *Hero_FashionExpiredPush) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_FashionExpiredPush) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_FashionExpiredPush) GoString() string {
	return m.String()
}

func (m *Hero_FashionExpiredRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_FashionExpiredRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_FashionExpiredRequest) GoString() string {
	return m.String()
}

func (m *Hero_FashionExpiredResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Hero_FashionExpiredResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Hero_FashionExpiredResponse) GoString() string {
	return m.String()
}

func (m *Hero) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_HeroListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_HeroListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.HeroId) > 0 {
		l = 0
		for _, e := range m.HeroId {
			l += sovHero(uint64(e))
		}
		n += 1 + sovHero(uint64(l)) + l
	}
	return n
}

func (m *Hero_UpgradeSlotRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovHero(uint64(m.HeroId))
	}
	if m.SlotId != 0 {
		n += 1 + sovHero(uint64(m.SlotId))
	}
	return n
}

func (m *Hero_UpgradeSlotResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	return n
}

func (m *Hero_WearEquipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovHero(uint64(m.HeroId))
	}
	if len(m.EquipId) > 0 {
		for _, s := range m.EquipId {
			l = len(s)
			n += 1 + l + sovHero(uint64(l))
		}
	}
	return n
}

func (m *Hero_WearEquipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	if len(m.ItemId) > 0 {
		l = 0
		for _, e := range m.ItemId {
			l += sovHero(uint64(e))
		}
		n += 1 + sovHero(uint64(l)) + l
	}
	return n
}

func (m *Hero_TakeDownEquipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovHero(uint64(m.HeroId))
	}
	if m.SlotId != 0 {
		n += 1 + sovHero(uint64(m.SlotId))
	}
	return n
}

func (m *Hero_TakeDownEquipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	if m.ItemId != 0 {
		n += 1 + sovHero(uint64(m.ItemId))
	}
	return n
}

func (m *Hero_MeltEquipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovHero(uint64(m.HeroId))
	}
	if m.SlotId != 0 {
		n += 1 + sovHero(uint64(m.SlotId))
	}
	if len(m.EquipId) > 0 {
		for _, s := range m.EquipId {
			l = len(s)
			n += 1 + l + sovHero(uint64(l))
		}
	}
	return n
}

func (m *Hero_MeltEquipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_UpgradeSlotMeltStarRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovHero(uint64(m.HeroId))
	}
	if m.SlotId != 0 {
		n += 1 + sovHero(uint64(m.SlotId))
	}
	return n
}

func (m *Hero_UpgradeSlotMeltStarResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	return n
}

func (m *Hero_BiographyRewardInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_BiographyRewardInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		l = 0
		for _, e := range m.List {
			l += sovHero(uint64(e))
		}
		n += 1 + sovHero(uint64(l)) + l
	}
	return n
}

func (m *Hero_BiographyGetRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RewardId != 0 {
		n += 1 + sovHero(uint64(m.RewardId))
	}
	return n
}

func (m *Hero_BiographyGetRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Reward) > 0 {
		for k, v := range m.Reward {
			_ = k
			_ = v
			mapEntrySize := 1 + sovHero(uint64(k)) + 1 + sovHero(uint64(v))
			n += mapEntrySize + 1 + sovHero(uint64(mapEntrySize))
		}
	}
	if m.RewardId != 0 {
		n += 1 + sovHero(uint64(m.RewardId))
	}
	return n
}

func (m *Hero_UpgradeSoulContractRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroOriginId != 0 {
		n += 1 + sovHero(uint64(m.HeroOriginId))
	}
	return n
}

func (m *Hero_UpgradeSoulContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	if len(m.Reward) > 0 {
		for k, v := range m.Reward {
			_ = k
			_ = v
			mapEntrySize := 1 + sovHero(uint64(k)) + 1 + sovHero(uint64(v))
			n += mapEntrySize + 1 + sovHero(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Hero_ActivateResonanceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroOriginId != 0 {
		n += 1 + sovHero(uint64(m.HeroOriginId))
	}
	if m.ResonanceId != 0 {
		n += 1 + sovHero(uint64(m.ResonanceId))
	}
	return n
}

func (m *Hero_ActivateResonanceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	return n
}

func (m *Hero_DressFashionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroOriginId != 0 {
		n += 1 + sovHero(uint64(m.HeroOriginId))
	}
	if m.FashionId != 0 {
		n += 1 + sovHero(uint64(m.FashionId))
	}
	return n
}

func (m *Hero_DressFashionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_CheatAddHeroRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovHero(uint64(m.Id))
	}
	return n
}

func (m *Hero_CheatAddHeroResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hero != nil {
		l = m.Hero.Size()
		n += 1 + l + sovHero(uint64(l))
	}
	return n
}

func (m *Hero_CheatSetSlotMaxRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.HeroId) > 0 {
		l = 0
		for _, e := range m.HeroId {
			l += sovHero(uint64(e))
		}
		n += 1 + sovHero(uint64(l)) + l
	}
	return n
}

func (m *Hero_CheatSetSlotMaxResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_CheatSetSoulContractMaxRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.HeroId) > 0 {
		l = 0
		for _, e := range m.HeroId {
			l += sovHero(uint64(e))
		}
		n += 1 + sovHero(uint64(l)) + l
	}
	return n
}

func (m *Hero_CheatSetSoulContractMaxResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Hero_GotHeroPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Hero) > 0 {
		for _, e := range m.Hero {
			l = e.Size()
			n += 1 + l + sovHero(uint64(l))
		}
	}
	return n
}

func (m *Hero_HeroUpdatePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Hero) > 0 {
		for _, e := range m.Hero {
			l = e.Size()
			n += 1 + l + sovHero(uint64(l))
		}
	}
	return n
}

func (m *Hero_BiographyCanGetRewardPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		l = 0
		for _, e := range m.List {
			l += sovHero(uint64(e))
		}
		n += 1 + sovHero(uint64(l)) + l
	}
	return n
}

func (m *Hero_FashionExpiredPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroOriginId != 0 {
		n += 1 + sovHero(uint64(m.HeroOriginId))
	}
	if m.FashionId != 0 {
		n += 1 + sovHero(uint64(m.FashionId))
	}
	return n
}

func (m *Hero_FashionExpiredRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovHero(uint64(m.HeroId))
	}
	if m.FashionId != 0 {
		n += 1 + sovHero(uint64(m.FashionId))
	}
	return n
}

func (m *Hero_FashionExpiredResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovHero(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozHero(x uint64) (n int) {
	return sovHero(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Hero) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Hero: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Hero: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_HeroListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_HeroListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.HeroId = append(m.HeroId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHero
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHero
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.HeroId) == 0 {
					m.HeroId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.HeroId = append(m.HeroId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_UpgradeSlotRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeSlotRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeSlotRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotId", wireType)
			}
			m.SlotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SlotId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_UpgradeSlotResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeSlotResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeSlotResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_WearEquipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WearEquipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WearEquipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EquipId = append(m.EquipId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_WearEquipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WearEquipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WearEquipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ItemId = append(m.ItemId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHero
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHero
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ItemId) == 0 {
					m.ItemId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ItemId = append(m.ItemId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_TakeDownEquipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TakeDownEquipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TakeDownEquipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotId", wireType)
			}
			m.SlotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SlotId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_TakeDownEquipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TakeDownEquipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TakeDownEquipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_MeltEquipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MeltEquipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MeltEquipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotId", wireType)
			}
			m.SlotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SlotId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EquipId = append(m.EquipId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_MeltEquipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MeltEquipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MeltEquipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_UpgradeSlotMeltStarRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeSlotMeltStarRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeSlotMeltStarRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotId", wireType)
			}
			m.SlotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SlotId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_UpgradeSlotMeltStarResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeSlotMeltStarResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeSlotMeltStarResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_BiographyRewardInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiographyRewardInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiographyRewardInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_BiographyRewardInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiographyRewardInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiographyRewardInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.List = append(m.List, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHero
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHero
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.List) == 0 {
					m.List = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.List = append(m.List, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_BiographyGetRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiographyGetRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiographyGetRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardId", wireType)
			}
			m.RewardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RewardId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_BiographyGetRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiographyGetRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiographyGetRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reward == nil {
				m.Reward = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipHero(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthHero
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Reward[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardId", wireType)
			}
			m.RewardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RewardId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_UpgradeSoulContractRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeSoulContractRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeSoulContractRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroOriginId", wireType)
			}
			m.HeroOriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroOriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_UpgradeSoulContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeSoulContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeSoulContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reward == nil {
				m.Reward = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipHero(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthHero
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Reward[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_ActivateResonanceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateResonanceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateResonanceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroOriginId", wireType)
			}
			m.HeroOriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroOriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResonanceId", wireType)
			}
			m.ResonanceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResonanceId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_ActivateResonanceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateResonanceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateResonanceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_DressFashionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DressFashionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DressFashionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroOriginId", wireType)
			}
			m.HeroOriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroOriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FashionId", wireType)
			}
			m.FashionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FashionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_DressFashionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DressFashionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DressFashionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_CheatAddHeroRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatAddHeroRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatAddHeroRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_CheatAddHeroResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatAddHeroResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatAddHeroResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hero == nil {
				m.Hero = &models.Hero{}
			}
			if err := m.Hero.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_CheatSetSlotMaxRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetSlotMaxRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetSlotMaxRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.HeroId = append(m.HeroId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHero
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHero
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.HeroId) == 0 {
					m.HeroId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.HeroId = append(m.HeroId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_CheatSetSlotMaxResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetSlotMaxResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetSlotMaxResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_CheatSetSoulContractMaxRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetSoulContractMaxRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetSoulContractMaxRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.HeroId = append(m.HeroId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHero
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHero
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.HeroId) == 0 {
					m.HeroId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.HeroId = append(m.HeroId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_CheatSetSoulContractMaxResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetSoulContractMaxResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetSoulContractMaxResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_GotHeroPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GotHeroPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GotHeroPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hero = append(m.Hero, &models.Hero{})
			if err := m.Hero[len(m.Hero)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_HeroUpdatePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroUpdatePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroUpdatePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHero
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHero
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hero = append(m.Hero, &models.Hero{})
			if err := m.Hero[len(m.Hero)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_BiographyCanGetRewardPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiographyCanGetRewardPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiographyCanGetRewardPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.List = append(m.List, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHero
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHero
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHero
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.List) == 0 {
					m.List = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHero
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.List = append(m.List, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_FashionExpiredPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FashionExpiredPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FashionExpiredPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroOriginId", wireType)
			}
			m.HeroOriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroOriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FashionId", wireType)
			}
			m.FashionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FashionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_FashionExpiredRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FashionExpiredRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FashionExpiredRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FashionId", wireType)
			}
			m.FashionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHero
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FashionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Hero_FashionExpiredResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHero
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FashionExpiredResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FashionExpiredResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipHero(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHero
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipHero(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowHero
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHero
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHero
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthHero
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupHero
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthHero
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthHero        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowHero          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupHero = fmt.Errorf("proto: unexpected end of group")
)
