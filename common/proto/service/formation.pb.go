// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/formation.proto

package service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FormationErrorCode int32

const (
	FormationErrorCode_ErrFormationNotUnlock        FormationErrorCode = 0
	FormationErrorCode_ErrFormationDiamondNotEnough FormationErrorCode = 1
	FormationErrorCode_ErrFormationMax              FormationErrorCode = 2
	FormationErrorCode_ErrFormationInvalidIndex     FormationErrorCode = 3
	FormationErrorCode_ErrFormationEmpty            FormationErrorCode = 4
	FormationErrorCode_ErrFormationHeroDead         FormationErrorCode = 5
	FormationErrorCode_ErrFormationSetDefaultCD     FormationErrorCode = 6
	FormationErrorCode_ErrFormationSwitchHeroCD     FormationErrorCode = 7
	FormationErrorCode_ErrFormationHeroNotEnough    FormationErrorCode = 8
)

var FormationErrorCode_name = map[int32]string{
	0: "ErrFormationNotUnlock",
	1: "ErrFormationDiamondNotEnough",
	2: "ErrFormationMax",
	3: "ErrFormationInvalidIndex",
	4: "ErrFormationEmpty",
	5: "ErrFormationHeroDead",
	6: "ErrFormationSetDefaultCD",
	7: "ErrFormationSwitchHeroCD",
	8: "ErrFormationHeroNotEnough",
}

var FormationErrorCode_value = map[string]int32{
	"ErrFormationNotUnlock":        0,
	"ErrFormationDiamondNotEnough": 1,
	"ErrFormationMax":              2,
	"ErrFormationInvalidIndex":     3,
	"ErrFormationEmpty":            4,
	"ErrFormationHeroDead":         5,
	"ErrFormationSetDefaultCD":     6,
	"ErrFormationSwitchHeroCD":     7,
	"ErrFormationHeroNotEnough":    8,
}

func (FormationErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0}
}

type Formation struct {
}

func (m *Formation) Reset()      { *m = Formation{} }
func (*Formation) ProtoMessage() {}
func (*Formation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0}
}
func (m *Formation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation.Merge(m, src)
}
func (m *Formation) XXX_Size() int {
	return m.Size()
}
func (m *Formation) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation.DiscardUnknown(m)
}

var xxx_messageInfo_Formation proto.InternalMessageInfo

func (*Formation) XXX_MessageName() string {
	return "service.Formation"
}

type Formation_GetRequest struct {
}

func (m *Formation_GetRequest) Reset()      { *m = Formation_GetRequest{} }
func (*Formation_GetRequest) ProtoMessage() {}
func (*Formation_GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0, 0}
}
func (m *Formation_GetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation_GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation_GetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation_GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation_GetRequest.Merge(m, src)
}
func (m *Formation_GetRequest) XXX_Size() int {
	return m.Size()
}
func (m *Formation_GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Formation_GetRequest proto.InternalMessageInfo

func (*Formation_GetRequest) XXX_MessageName() string {
	return "service.Formation.GetRequest"
}

type Formation_GetResponse struct {
	Assembles    []*models.Assemble `protobuf:"bytes,1,rep,name=assembles,proto3" json:"assembles,omitempty"`
	DefaultIndex int64              `protobuf:"varint,2,opt,name=default_index,json=defaultIndex,proto3" json:"default_index,omitempty"`
}

func (m *Formation_GetResponse) Reset()      { *m = Formation_GetResponse{} }
func (*Formation_GetResponse) ProtoMessage() {}
func (*Formation_GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0, 1}
}
func (m *Formation_GetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation_GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation_GetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation_GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation_GetResponse.Merge(m, src)
}
func (m *Formation_GetResponse) XXX_Size() int {
	return m.Size()
}
func (m *Formation_GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Formation_GetResponse proto.InternalMessageInfo

func (m *Formation_GetResponse) GetAssembles() []*models.Assemble {
	if m != nil {
		return m.Assembles
	}
	return nil
}

func (m *Formation_GetResponse) GetDefaultIndex() int64 {
	if m != nil {
		return m.DefaultIndex
	}
	return 0
}

func (*Formation_GetResponse) XXX_MessageName() string {
	return "service.Formation.GetResponse"
}

type Formation_NewRequest struct {
}

func (m *Formation_NewRequest) Reset()      { *m = Formation_NewRequest{} }
func (*Formation_NewRequest) ProtoMessage() {}
func (*Formation_NewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0, 2}
}
func (m *Formation_NewRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation_NewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation_NewRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation_NewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation_NewRequest.Merge(m, src)
}
func (m *Formation_NewRequest) XXX_Size() int {
	return m.Size()
}
func (m *Formation_NewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation_NewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Formation_NewRequest proto.InternalMessageInfo

func (*Formation_NewRequest) XXX_MessageName() string {
	return "service.Formation.NewRequest"
}

type Formation_NewResponse struct {
	Assembles    []*models.Assemble `protobuf:"bytes,1,rep,name=assembles,proto3" json:"assembles,omitempty"`
	DefaultIndex int64              `protobuf:"varint,2,opt,name=default_index,json=defaultIndex,proto3" json:"default_index,omitempty"`
}

func (m *Formation_NewResponse) Reset()      { *m = Formation_NewResponse{} }
func (*Formation_NewResponse) ProtoMessage() {}
func (*Formation_NewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0, 3}
}
func (m *Formation_NewResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation_NewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation_NewResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation_NewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation_NewResponse.Merge(m, src)
}
func (m *Formation_NewResponse) XXX_Size() int {
	return m.Size()
}
func (m *Formation_NewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation_NewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Formation_NewResponse proto.InternalMessageInfo

func (m *Formation_NewResponse) GetAssembles() []*models.Assemble {
	if m != nil {
		return m.Assembles
	}
	return nil
}

func (m *Formation_NewResponse) GetDefaultIndex() int64 {
	if m != nil {
		return m.DefaultIndex
	}
	return 0
}

func (*Formation_NewResponse) XXX_MessageName() string {
	return "service.Formation.NewResponse"
}

type Formation_SaveRequest struct {
	Assembles    []*models.Assemble `protobuf:"bytes,1,rep,name=assembles,proto3" json:"assembles,omitempty"`
	DefaultIndex int64              `protobuf:"varint,2,opt,name=default_index,json=defaultIndex,proto3" json:"default_index,omitempty"`
}

func (m *Formation_SaveRequest) Reset()      { *m = Formation_SaveRequest{} }
func (*Formation_SaveRequest) ProtoMessage() {}
func (*Formation_SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0, 4}
}
func (m *Formation_SaveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation_SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation_SaveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation_SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation_SaveRequest.Merge(m, src)
}
func (m *Formation_SaveRequest) XXX_Size() int {
	return m.Size()
}
func (m *Formation_SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Formation_SaveRequest proto.InternalMessageInfo

func (m *Formation_SaveRequest) GetAssembles() []*models.Assemble {
	if m != nil {
		return m.Assembles
	}
	return nil
}

func (m *Formation_SaveRequest) GetDefaultIndex() int64 {
	if m != nil {
		return m.DefaultIndex
	}
	return 0
}

func (*Formation_SaveRequest) XXX_MessageName() string {
	return "service.Formation.SaveRequest"
}

type Formation_SaveResponse struct {
}

func (m *Formation_SaveResponse) Reset()      { *m = Formation_SaveResponse{} }
func (*Formation_SaveResponse) ProtoMessage() {}
func (*Formation_SaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed164c831306b50a, []int{0, 5}
}
func (m *Formation_SaveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Formation_SaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Formation_SaveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Formation_SaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation_SaveResponse.Merge(m, src)
}
func (m *Formation_SaveResponse) XXX_Size() int {
	return m.Size()
}
func (m *Formation_SaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation_SaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Formation_SaveResponse proto.InternalMessageInfo

func (*Formation_SaveResponse) XXX_MessageName() string {
	return "service.Formation.SaveResponse"
}
func init() {
	proto.RegisterEnum("service.FormationErrorCode", FormationErrorCode_name, FormationErrorCode_value)
	proto.RegisterType((*Formation)(nil), "service.Formation")
	proto.RegisterType((*Formation_GetRequest)(nil), "service.Formation.GetRequest")
	proto.RegisterType((*Formation_GetResponse)(nil), "service.Formation.GetResponse")
	proto.RegisterType((*Formation_NewRequest)(nil), "service.Formation.NewRequest")
	proto.RegisterType((*Formation_NewResponse)(nil), "service.Formation.NewResponse")
	proto.RegisterType((*Formation_SaveRequest)(nil), "service.Formation.SaveRequest")
	proto.RegisterType((*Formation_SaveResponse)(nil), "service.Formation.SaveResponse")
}

func init() { proto.RegisterFile("proto/service/formation.proto", fileDescriptor_ed164c831306b50a) }

var fileDescriptor_ed164c831306b50a = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcb, 0x4f, 0x33, 0x55,
	0x18, 0xc6, 0x3b, 0x5f, 0xfd, 0xf8, 0xfc, 0x0e, 0x9f, 0x3a, 0x9e, 0x48, 0x18, 0x07, 0x18, 0x51,
	0x36, 0xc4, 0xc4, 0x56, 0x45, 0x4d, 0x34, 0x71, 0x21, 0x6d, 0x05, 0x62, 0x6c, 0x22, 0xc4, 0x98,
	0xb8, 0x31, 0xd3, 0xf6, 0x20, 0x8d, 0xed, 0x1c, 0x9c, 0x99, 0x02, 0x2e, 0xb9, 0x08, 0x65, 0xa4,
	0x52, 0x2f, 0x94, 0x2a, 0x90, 0x82, 0x62, 0x20, 0x46, 0x2a, 0x97, 0x0e, 0x10, 0x7b, 0x61, 0xcb,
	0x92, 0x25, 0x4b, 0x6d, 0x3b, 0xb7, 0x15, 0xfe, 0x09, 0xa6, 0x3d, 0x2d, 0x94, 0xc6, 0x44, 0x37,
	0x2c, 0xe7, 0x3d, 0xef, 0x33, 0xbf, 0xe7, 0x79, 0xdf, 0x93, 0x03, 0xba, 0xc6, 0x45, 0x2c, 0x63,
	0xa7, 0x84, 0xc4, 0x89, 0xa0, 0x1f, 0x39, 0x47, 0xb1, 0x18, 0xe6, 0xe5, 0x20, 0x16, 0x1c, 0xd5,
	0x3a, 0x7c, 0x50, 0x3b, 0x60, 0xdb, 0x49, 0x5f, 0x18, 0x07, 0x50, 0x48, 0x72, 0xfa, 0x78, 0x09,
	0x91, 0x0e, 0xb6, 0xf3, 0xd6, 0x41, 0x93, 0xfe, 0x85, 0xb2, 0x1d, 0x3c, 0x7c, 0xb7, 0x5e, 0x63,
	0x5f, 0x01, 0x60, 0x00, 0xc9, 0xc3, 0xe8, 0xf3, 0x08, 0x92, 0xe4, 0xb7, 0x7a, 0x66, 0x54, 0xe6,
	0x39, 0xd0, 0xe2, 0xe3, 0x65, 0x39, 0x84, 0x60, 0x9b, 0x47, 0x14, 0xaf, 0x3b, 0xbd, 0x58, 0xfe,
	0x50, 0x08, 0x61, 0xff, 0x67, 0xac, 0x0f, 0xb4, 0x56, 0x25, 0xd2, 0x38, 0x16, 0x24, 0x04, 0x1d,
	0xe0, 0x21, 0x2f, 0x49, 0x28, 0xec, 0x0b, 0x21, 0x89, 0xa1, 0xba, 0xed, 0xbd, 0xad, 0xaf, 0xd2,
	0x0e, 0xc2, 0x76, 0xbc, 0x53, 0x3b, 0x18, 0xbe, 0x69, 0x81, 0x3d, 0xe0, 0x89, 0x00, 0x1a, 0xe5,
	0x23, 0x21, 0xf9, 0x93, 0xa0, 0x10, 0x40, 0x53, 0xcc, 0xbd, 0x6e, 0xaa, 0xd7, 0x3e, 0xfc, 0xa8,
	0x56, 0x1c, 0xaa, 0xd4, 0xd8, 0x7e, 0x00, 0xbc, 0x68, 0xb2, 0x6e, 0xeb, 0xb5, 0x19, 0x95, 0x79,
	0xf9, 0x3f, 0x6c, 0xc1, 0xa7, 0x1a, 0xcb, 0xef, 0xf3, 0x53, 0x15, 0x9f, 0xd5, 0x7f, 0xdc, 0xa5,
	0xcf, 0x05, 0x0a, 0xb4, 0x8e, 0xf0, 0x13, 0xa8, 0xe6, 0xf4, 0x4e, 0x20, 0xff, 0x6f, 0x2b, 0x4f,
	0x82, 0x47, 0xc4, 0x08, 0x89, 0xfb, 0x62, 0xfe, 0x3e, 0x80, 0xd7, 0x6d, 0x1e, 0x51, 0xc4, 0xa2,
	0x0b, 0x07, 0x10, 0x7c, 0x03, 0xfc, 0xbb, 0x9e, 0xb6, 0xb1, 0x1d, 0x8a, 0xca, 0xb4, 0xc3, 0x36,
	0x23, 0x97, 0xb0, 0x92, 0x29, 0x4d, 0x49, 0x99, 0xb3, 0x79, 0x7d, 0xfd, 0x57, 0x73, 0xe7, 0x67,
	0xeb, 0xfb, 0x69, 0xe8, 0x02, 0x9d, 0x8d, 0x3a, 0x77, 0x90, 0x0f, 0x63, 0x21, 0xe0, 0xc5, 0xb2,
	0x47, 0xc0, 0x91, 0x4f, 0xc7, 0x68, 0x8a, 0x7d, 0x5e, 0x51, 0x99, 0x2e, 0xd8, 0x61, 0x6c, 0x26,
	0x8c, 0xd4, 0x51, 0xf9, 0x34, 0x66, 0x1e, 0x1f, 0x5d, 0xe5, 0x96, 0xb4, 0xe8, 0x9a, 0x96, 0xfd,
	0x43, 0xdb, 0x3e, 0x30, 0x33, 0xbf, 0xc0, 0x3e, 0xd0, 0xbc, 0x24, 0xfa, 0x1e, 0xcb, 0x29, 0x2a,
	0xc3, 0x42, 0x86, 0x60, 0xf5, 0x95, 0x7d, 0x6b, 0x61, 0x59, 0x3b, 0x39, 0x34, 0x0b, 0x85, 0xf2,
	0xa9, 0x62, 0xfd, 0x10, 0x87, 0x6f, 0x02, 0xa6, 0x51, 0x34, 0x24, 0x4c, 0xf0, 0xa1, 0x60, 0xa0,
	0x3a, 0x19, 0xda, 0x5e, 0x37, 0xad, 0xaf, 0x6e, 0xea, 0x2b, 0x51, 0xe3, 0xc7, 0x39, 0x2b, 0x9b,
	0x34, 0xd3, 0xdb, 0x46, 0x2e, 0xa1, 0x2d, 0x9f, 0xc0, 0xd7, 0xc1, 0xd3, 0x8d, 0x52, 0x4f, 0x78,
	0x5c, 0xfe, 0x82, 0x7e, 0xac, 0x89, 0x78, 0xb8, 0xa5, 0xaf, 0x2f, 0x56, 0x58, 0x49, 0xd5, 0xfc,
	0xea, 0xc0, 0x5a, 0x9b, 0x83, 0x08, 0x3c, 0xd3, 0x28, 0x1b, 0x44, 0x22, 0x76, 0x23, 0x3e, 0x40,
	0xdf, 0x67, 0xdf, 0x53, 0x54, 0x66, 0x00, 0x7a, 0xca, 0x67, 0x1b, 0xda, 0x5e, 0x92, 0x84, 0xba,
	0xca, 0x2d, 0x59, 0xc9, 0x54, 0x39, 0x17, 0x2b, 0x9f, 0xee, 0x99, 0x3b, 0xdf, 0x9a, 0x8b, 0x87,
	0xda, 0x97, 0xbb, 0xd6, 0xec, 0xae, 0xb6, 0x97, 0xd4, 0x33, 0x59, 0x7d, 0x31, 0x66, 0xce, 0xe6,
	0x8d, 0x5c, 0xc2, 0x2c, 0x7c, 0x53, 0x6b, 0x3b, 0xdb, 0xd2, 0xa7, 0x7f, 0xbf, 0xca, 0x4d, 0xc3,
	0xd1, 0xdb, 0xc1, 0x46, 0x90, 0xec, 0x26, 0x5b, 0x77, 0xb9, 0xe9, 0x16, 0x76, 0x50, 0x51, 0x19,
	0x37, 0xec, 0x6f, 0x42, 0x69, 0xf3, 0x27, 0x5a, 0x2c, 0xa3, 0xaf, 0x1e, 0x5b, 0xab, 0x19, 0x2d,
	0xbd, 0xa4, 0x47, 0xe3, 0x84, 0xa0, 0xcd, 0xc7, 0xf4, 0xdf, 0xb6, 0xcc, 0x74, 0xc1, 0xc8, 0xa7,
	0xc9, 0x08, 0x08, 0xad, 0xc2, 0x89, 0x34, 0x71, 0x26, 0x83, 0xb2, 0x7f, 0xac, 0x12, 0xca, 0xe5,
	0xa6, 0x1f, 0xb0, 0x1f, 0x29, 0x2a, 0x33, 0x02, 0x3f, 0x68, 0xe2, 0xd4, 0x92, 0x44, 0x17, 0xf4,
	0xd8, 0x4f, 0x8d, 0x4c, 0x23, 0xfb, 0x9d, 0xbe, 0x91, 0xd2, 0xe2, 0x5f, 0x13, 0xac, 0xbe, 0x96,
	0xd1, 0x13, 0xfb, 0x8d, 0xc0, 0x9b, 0x78, 0x6f, 0x83, 0x67, 0x9b, 0xa7, 0x78, 0x73, 0x5d, 0x1e,
	0xaf, 0x2f, 0x81, 0xdc, 0x0f, 0xb2, 0x0a, 0x32, 0x7e, 0x72, 0x75, 0xfa, 0xbd, 0x97, 0x7f, 0x71,
	0xb6, 0xdd, 0x22, 0x47, 0x9d, 0x17, 0x39, 0xea, 0xa2, 0xc8, 0x51, 0x7f, 0x16, 0x39, 0xca, 0x2c,
	0x72, 0xb6, 0xbf, 0x8b, 0x1c, 0x15, 0x2f, 0x71, 0xb6, 0xf3, 0x12, 0x47, 0x5d, 0x94, 0x38, 0xdb,
	0x65, 0x89, 0xb3, 0x7d, 0xdc, 0xed, 0xc7, 0x41, 0xe1, 0xa5, 0xca, 0xcb, 0x88, 0x44, 0xa7, 0x1f,
	0x87, 0xc3, 0x58, 0x70, 0xde, 0x7a, 0x46, 0x7d, 0x2d, 0xd5, 0xcf, 0xbe, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xbf, 0x89, 0xdd, 0x2e, 0x5e, 0x05, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation_GetRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation_GetResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation_NewRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation_NewResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation_SaveRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolFormation_SaveResponse.Get().(proto.Message)
	})
}

var poolFormation = &sync.Pool{New: func() interface{} { return &Formation{} }}

func (m *Formation) ReleasePool() { m.Reset(); poolFormation.Put(m); m = nil }

var poolFormation_GetRequest = &sync.Pool{New: func() interface{} { return &Formation_GetRequest{} }}

func (m *Formation_GetRequest) ReleasePool() { m.Reset(); poolFormation_GetRequest.Put(m); m = nil }

var poolFormation_GetResponse = &sync.Pool{New: func() interface{} { return &Formation_GetResponse{} }}

func (m *Formation_GetResponse) ReleasePool() { m.Reset(); poolFormation_GetResponse.Put(m); m = nil }

var poolFormation_NewRequest = &sync.Pool{New: func() interface{} { return &Formation_NewRequest{} }}

func (m *Formation_NewRequest) ReleasePool() { m.Reset(); poolFormation_NewRequest.Put(m); m = nil }

var poolFormation_NewResponse = &sync.Pool{New: func() interface{} { return &Formation_NewResponse{} }}

func (m *Formation_NewResponse) ReleasePool() { m.Reset(); poolFormation_NewResponse.Put(m); m = nil }

var poolFormation_SaveRequest = &sync.Pool{New: func() interface{} { return &Formation_SaveRequest{} }}

func (m *Formation_SaveRequest) ReleasePool() { m.Reset(); poolFormation_SaveRequest.Put(m); m = nil }

var poolFormation_SaveResponse = &sync.Pool{New: func() interface{} { return &Formation_SaveResponse{} }}

func (m *Formation_SaveResponse) ReleasePool() { m.Reset(); poolFormation_SaveResponse.Put(m); m = nil }
func (x FormationErrorCode) String() string {
	s, ok := FormationErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Formation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation)
	if !ok {
		that2, ok := that.(Formation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Formation_GetRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation_GetRequest)
	if !ok {
		that2, ok := that.(Formation_GetRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Formation_GetResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation_GetResponse)
	if !ok {
		that2, ok := that.(Formation_GetResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Assembles) != len(that1.Assembles) {
		return false
	}
	for i := range this.Assembles {
		if !this.Assembles[i].Equal(that1.Assembles[i]) {
			return false
		}
	}
	if this.DefaultIndex != that1.DefaultIndex {
		return false
	}
	return true
}
func (this *Formation_NewRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation_NewRequest)
	if !ok {
		that2, ok := that.(Formation_NewRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Formation_NewResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation_NewResponse)
	if !ok {
		that2, ok := that.(Formation_NewResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Assembles) != len(that1.Assembles) {
		return false
	}
	for i := range this.Assembles {
		if !this.Assembles[i].Equal(that1.Assembles[i]) {
			return false
		}
	}
	if this.DefaultIndex != that1.DefaultIndex {
		return false
	}
	return true
}
func (this *Formation_SaveRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation_SaveRequest)
	if !ok {
		that2, ok := that.(Formation_SaveRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Assembles) != len(that1.Assembles) {
		return false
	}
	for i := range this.Assembles {
		if !this.Assembles[i].Equal(that1.Assembles[i]) {
			return false
		}
	}
	if this.DefaultIndex != that1.DefaultIndex {
		return false
	}
	return true
}
func (this *Formation_SaveResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Formation_SaveResponse)
	if !ok {
		that2, ok := that.(Formation_SaveResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Formation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Formation_GetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation_GetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation_GetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Formation_GetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation_GetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation_GetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DefaultIndex != 0 {
		i = encodeVarintFormation(dAtA, i, uint64(m.DefaultIndex))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Assembles) > 0 {
		for iNdEx := len(m.Assembles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Assembles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFormation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Formation_NewRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation_NewRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation_NewRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Formation_NewResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation_NewResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation_NewResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DefaultIndex != 0 {
		i = encodeVarintFormation(dAtA, i, uint64(m.DefaultIndex))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Assembles) > 0 {
		for iNdEx := len(m.Assembles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Assembles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFormation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Formation_SaveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation_SaveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation_SaveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DefaultIndex != 0 {
		i = encodeVarintFormation(dAtA, i, uint64(m.DefaultIndex))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Assembles) > 0 {
		for iNdEx := len(m.Assembles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Assembles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFormation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Formation_SaveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formation_SaveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Formation_SaveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintFormation(dAtA []byte, offset int, v uint64) int {
	offset -= sovFormation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Formation) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Formation_GetRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Formation_GetResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("assembles")
	w.RawByte('"')
	w.RawByte(':')
	if m.Assembles == nil {
		w.RawString("null")
	} else if len(m.Assembles) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Assembles {
			v.JsonBytes(w)
			if i != len(m.Assembles)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.DefaultIndex != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("default_index")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.DefaultIndex))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Formation_NewRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Formation_NewResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("assembles")
	w.RawByte('"')
	w.RawByte(':')
	if m.Assembles == nil {
		w.RawString("null")
	} else if len(m.Assembles) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Assembles {
			v.JsonBytes(w)
			if i != len(m.Assembles)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.DefaultIndex != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("default_index")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.DefaultIndex))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Formation_SaveRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("assembles")
	w.RawByte('"')
	w.RawByte(':')
	if m.Assembles == nil {
		w.RawString("null")
	} else if len(m.Assembles) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Assembles {
			v.JsonBytes(w)
			if i != len(m.Assembles)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.DefaultIndex != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("default_index")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.DefaultIndex))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Formation_SaveResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Formation) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation) GoString() string {
	return m.String()
}

func (m *Formation_GetRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation_GetRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation_GetRequest) GoString() string {
	return m.String()
}

func (m *Formation_GetResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation_GetResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation_GetResponse) GoString() string {
	return m.String()
}

func (m *Formation_NewRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation_NewRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation_NewRequest) GoString() string {
	return m.String()
}

func (m *Formation_NewResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation_NewResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation_NewResponse) GoString() string {
	return m.String()
}

func (m *Formation_SaveRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation_SaveRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation_SaveRequest) GoString() string {
	return m.String()
}

func (m *Formation_SaveResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Formation_SaveResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Formation_SaveResponse) GoString() string {
	return m.String()
}

func (m *Formation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Formation_GetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Formation_GetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Assembles) > 0 {
		for _, e := range m.Assembles {
			l = e.Size()
			n += 1 + l + sovFormation(uint64(l))
		}
	}
	if m.DefaultIndex != 0 {
		n += 1 + sovFormation(uint64(m.DefaultIndex))
	}
	return n
}

func (m *Formation_NewRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Formation_NewResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Assembles) > 0 {
		for _, e := range m.Assembles {
			l = e.Size()
			n += 1 + l + sovFormation(uint64(l))
		}
	}
	if m.DefaultIndex != 0 {
		n += 1 + sovFormation(uint64(m.DefaultIndex))
	}
	return n
}

func (m *Formation_SaveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Assembles) > 0 {
		for _, e := range m.Assembles {
			l = e.Size()
			n += 1 + l + sovFormation(uint64(l))
		}
	}
	if m.DefaultIndex != 0 {
		n += 1 + sovFormation(uint64(m.DefaultIndex))
	}
	return n
}

func (m *Formation_SaveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovFormation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFormation(x uint64) (n int) {
	return sovFormation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Formation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Formation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Formation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formation_GetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formation_GetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assembles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFormation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFormation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assembles = append(m.Assembles, &models.Assemble{})
			if err := m.Assembles[len(m.Assembles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultIndex", wireType)
			}
			m.DefaultIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefaultIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formation_NewRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formation_NewResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assembles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFormation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFormation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assembles = append(m.Assembles, &models.Assemble{})
			if err := m.Assembles[len(m.Assembles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultIndex", wireType)
			}
			m.DefaultIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefaultIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formation_SaveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assembles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFormation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFormation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assembles = append(m.Assembles, &models.Assemble{})
			if err := m.Assembles[len(m.Assembles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultIndex", wireType)
			}
			m.DefaultIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefaultIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formation_SaveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipFormation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFormation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFormation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFormation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFormation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFormation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFormation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFormation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFormation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFormation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFormation = fmt.Errorf("proto: unexpected end of group")
)
