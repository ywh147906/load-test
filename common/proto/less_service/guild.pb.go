// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/less-service/guild.proto

package less_service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GuildErrorCode int32

const (
	GuildErrorCode_ErrGuildNoGuild              GuildErrorCode = 0
	GuildErrorCode_ErrGuildNameExist            GuildErrorCode = 4
	GuildErrorCode_ErrGuildNameTooLong          GuildErrorCode = 1
	GuildErrorCode_ErrGuildIntroTooLong         GuildErrorCode = 2
	GuildErrorCode_ErrGuildNoticeTooLong        GuildErrorCode = 3
	GuildErrorCode_ErrGuildNameSensitive        GuildErrorCode = 5
	GuildErrorCode_ErrGuildIntroSensitive       GuildErrorCode = 6
	GuildErrorCode_ErrGuildNoticeSensitive      GuildErrorCode = 7
	GuildErrorCode_ErrGuildNotExist             GuildErrorCode = 8
	GuildErrorCode_ErrGuildUserLevelNotEnough   GuildErrorCode = 9
	GuildErrorCode_ErrGuildHasJoined            GuildErrorCode = 10
	GuildErrorCode_ErrGuildOnlyLeader           GuildErrorCode = 11
	GuildErrorCode_ErrGuildRemoveMemberFirst    GuildErrorCode = 12
	GuildErrorCode_ErrGuildClearApplyListFirst  GuildErrorCode = 13
	GuildErrorCode_ErrGuildPermissionDenied     GuildErrorCode = 14
	GuildErrorCode_ErrGuildInviteListFull       GuildErrorCode = 15
	GuildErrorCode_ErrGuildInviteNotExist       GuildErrorCode = 16
	GuildErrorCode_ErrGuildMemberFull           GuildErrorCode = 17
	GuildErrorCode_ErrGuildJoinCD               GuildErrorCode = 18
	GuildErrorCode_ErrGuildApplyFull            GuildErrorCode = 19
	GuildErrorCode_ErrGuildApplyListFull        GuildErrorCode = 20
	GuildErrorCode_ErrGuildUserNotInGuild       GuildErrorCode = 21
	GuildErrorCode_ErrGuildMaxPosition          GuildErrorCode = 22
	GuildErrorCode_ErrGuildMinPosition          GuildErrorCode = 23
	GuildErrorCode_ErrGuildPositionFull         GuildErrorCode = 24
	GuildErrorCode_ErrGuildNameEmpty            GuildErrorCode = 25
	GuildErrorCode_ErrGuildInvalidInput         GuildErrorCode = 26
	GuildErrorCode_ErrGuildLeaderNotAllowExit   GuildErrorCode = 27
	GuildErrorCode_ErrGuildNoticeRequired       GuildErrorCode = 28
	GuildErrorCode_ErrGuildInvalidFlag          GuildErrorCode = 29
	GuildErrorCode_ErrGuildInvalidLang          GuildErrorCode = 30
	GuildErrorCode_ErrGuildInvalidPosition      GuildErrorCode = 31
	GuildErrorCode_ErrGuildBuildTimesNotEnough  GuildErrorCode = 32
	GuildErrorCode_ErrGuildPositionNameTooLong  GuildErrorCode = 33
	GuildErrorCode_ErrGuildGreetingTooLong      GuildErrorCode = 34
	GuildErrorCode_ErrGuildInviteTimesNotEnough GuildErrorCode = 35
	GuildErrorCode_ErrGuildInviteExpired        GuildErrorCode = 36
	GuildErrorCode_ErrGuildCombatValueNotEnough GuildErrorCode = 37
	GuildErrorCode_ErrGuildNoAvailableGuild     GuildErrorCode = 38
	GuildErrorCode_ErrGuildInviteMsgTooLong     GuildErrorCode = 39
	GuildErrorCode_ErrGuildBossFighting         GuildErrorCode = 40
	GuildErrorCode_ErrGuildApplyExpired         GuildErrorCode = 41
	GuildErrorCode_ErrGuildJoinedAnotherGuild   GuildErrorCode = 42
	GuildErrorCode_ErrGuildInvalidBless         GuildErrorCode = 43
	GuildErrorCode_ErrGuildDoNotRepeatBless     GuildErrorCode = 44
	GuildErrorCode_ErrGuildBlessNotDone         GuildErrorCode = 45
	GuildErrorCode_ErrGuildMaxBlessStage        GuildErrorCode = 46
)

var GuildErrorCode_name = map[int32]string{
	0:  "ErrGuildNoGuild",
	4:  "ErrGuildNameExist",
	1:  "ErrGuildNameTooLong",
	2:  "ErrGuildIntroTooLong",
	3:  "ErrGuildNoticeTooLong",
	5:  "ErrGuildNameSensitive",
	6:  "ErrGuildIntroSensitive",
	7:  "ErrGuildNoticeSensitive",
	8:  "ErrGuildNotExist",
	9:  "ErrGuildUserLevelNotEnough",
	10: "ErrGuildHasJoined",
	11: "ErrGuildOnlyLeader",
	12: "ErrGuildRemoveMemberFirst",
	13: "ErrGuildClearApplyListFirst",
	14: "ErrGuildPermissionDenied",
	15: "ErrGuildInviteListFull",
	16: "ErrGuildInviteNotExist",
	17: "ErrGuildMemberFull",
	18: "ErrGuildJoinCD",
	19: "ErrGuildApplyFull",
	20: "ErrGuildApplyListFull",
	21: "ErrGuildUserNotInGuild",
	22: "ErrGuildMaxPosition",
	23: "ErrGuildMinPosition",
	24: "ErrGuildPositionFull",
	25: "ErrGuildNameEmpty",
	26: "ErrGuildInvalidInput",
	27: "ErrGuildLeaderNotAllowExit",
	28: "ErrGuildNoticeRequired",
	29: "ErrGuildInvalidFlag",
	30: "ErrGuildInvalidLang",
	31: "ErrGuildInvalidPosition",
	32: "ErrGuildBuildTimesNotEnough",
	33: "ErrGuildPositionNameTooLong",
	34: "ErrGuildGreetingTooLong",
	35: "ErrGuildInviteTimesNotEnough",
	36: "ErrGuildInviteExpired",
	37: "ErrGuildCombatValueNotEnough",
	38: "ErrGuildNoAvailableGuild",
	39: "ErrGuildInviteMsgTooLong",
	40: "ErrGuildBossFighting",
	41: "ErrGuildApplyExpired",
	42: "ErrGuildJoinedAnotherGuild",
	43: "ErrGuildInvalidBless",
	44: "ErrGuildDoNotRepeatBless",
	45: "ErrGuildBlessNotDone",
	46: "ErrGuildMaxBlessStage",
}

var GuildErrorCode_value = map[string]int32{
	"ErrGuildNoGuild":              0,
	"ErrGuildNameExist":            4,
	"ErrGuildNameTooLong":          1,
	"ErrGuildIntroTooLong":         2,
	"ErrGuildNoticeTooLong":        3,
	"ErrGuildNameSensitive":        5,
	"ErrGuildIntroSensitive":       6,
	"ErrGuildNoticeSensitive":      7,
	"ErrGuildNotExist":             8,
	"ErrGuildUserLevelNotEnough":   9,
	"ErrGuildHasJoined":            10,
	"ErrGuildOnlyLeader":           11,
	"ErrGuildRemoveMemberFirst":    12,
	"ErrGuildClearApplyListFirst":  13,
	"ErrGuildPermissionDenied":     14,
	"ErrGuildInviteListFull":       15,
	"ErrGuildInviteNotExist":       16,
	"ErrGuildMemberFull":           17,
	"ErrGuildJoinCD":               18,
	"ErrGuildApplyFull":            19,
	"ErrGuildApplyListFull":        20,
	"ErrGuildUserNotInGuild":       21,
	"ErrGuildMaxPosition":          22,
	"ErrGuildMinPosition":          23,
	"ErrGuildPositionFull":         24,
	"ErrGuildNameEmpty":            25,
	"ErrGuildInvalidInput":         26,
	"ErrGuildLeaderNotAllowExit":   27,
	"ErrGuildNoticeRequired":       28,
	"ErrGuildInvalidFlag":          29,
	"ErrGuildInvalidLang":          30,
	"ErrGuildInvalidPosition":      31,
	"ErrGuildBuildTimesNotEnough":  32,
	"ErrGuildPositionNameTooLong":  33,
	"ErrGuildGreetingTooLong":      34,
	"ErrGuildInviteTimesNotEnough": 35,
	"ErrGuildInviteExpired":        36,
	"ErrGuildCombatValueNotEnough": 37,
	"ErrGuildNoAvailableGuild":     38,
	"ErrGuildInviteMsgTooLong":     39,
	"ErrGuildBossFighting":         40,
	"ErrGuildApplyExpired":         41,
	"ErrGuildJoinedAnotherGuild":   42,
	"ErrGuildInvalidBless":         43,
	"ErrGuildDoNotRepeatBless":     44,
	"ErrGuildBlessNotDone":         45,
	"ErrGuildMaxBlessStage":        46,
}

func (GuildErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0}
}

type Guild struct {
}

func (m *Guild) Reset()      { *m = Guild{} }
func (*Guild) ProtoMessage() {}
func (*Guild) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0}
}
func (m *Guild) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild.Merge(m, src)
}
func (m *Guild) XXX_Size() int {
	return m.Size()
}
func (m *Guild) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild.DiscardUnknown(m)
}

var xxx_messageInfo_Guild proto.InternalMessageInfo

func (*Guild) XXX_MessageName() string {
	return "less_service.Guild"
}

// 查找公会（获取推荐公会也走次协议）
type Guild_GuildFindRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lang        int64  `protobuf:"varint,2,opt,name=lang,proto3" json:"lang,omitempty"`
	NoAudit     bool   `protobuf:"varint,3,opt,name=no_audit,json=noAudit,proto3" json:"no_audit,omitempty"`
	CombatValue int64  `protobuf:"varint,4,opt,name=combat_value,json=combatValue,proto3" json:"combat_value,omitempty"`
}

func (m *Guild_GuildFindRequest) Reset()      { *m = Guild_GuildFindRequest{} }
func (*Guild_GuildFindRequest) ProtoMessage() {}
func (*Guild_GuildFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 0}
}
func (m *Guild_GuildFindRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFindRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFindRequest.Merge(m, src)
}
func (m *Guild_GuildFindRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFindRequest proto.InternalMessageInfo

func (m *Guild_GuildFindRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Guild_GuildFindRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildFindRequest) GetNoAudit() bool {
	if m != nil {
		return m.NoAudit
	}
	return false
}

func (m *Guild_GuildFindRequest) GetCombatValue() int64 {
	if m != nil {
		return m.CombatValue
	}
	return 0
}

func (*Guild_GuildFindRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildFindRequest"
}

type Guild_GuildFindResponse struct {
	List []*models.Guild `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (m *Guild_GuildFindResponse) Reset()      { *m = Guild_GuildFindResponse{} }
func (*Guild_GuildFindResponse) ProtoMessage() {}
func (*Guild_GuildFindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 1}
}
func (m *Guild_GuildFindResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFindResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFindResponse.Merge(m, src)
}
func (m *Guild_GuildFindResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFindResponse proto.InternalMessageInfo

func (m *Guild_GuildFindResponse) GetList() []*models.Guild {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Guild_GuildFindResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildFindResponse"
}

// 一键加入公会
type Guild_GuildJoinNowRequest struct {
	Lang        int64 `protobuf:"varint,1,opt,name=lang,proto3" json:"lang,omitempty"`
	CombatValue int64 `protobuf:"varint,2,opt,name=combat_value,json=combatValue,proto3" json:"combat_value,omitempty"`
}

func (m *Guild_GuildJoinNowRequest) Reset()      { *m = Guild_GuildJoinNowRequest{} }
func (*Guild_GuildJoinNowRequest) ProtoMessage() {}
func (*Guild_GuildJoinNowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 2}
}
func (m *Guild_GuildJoinNowRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildJoinNowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildJoinNowRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildJoinNowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildJoinNowRequest.Merge(m, src)
}
func (m *Guild_GuildJoinNowRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildJoinNowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildJoinNowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildJoinNowRequest proto.InternalMessageInfo

func (m *Guild_GuildJoinNowRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildJoinNowRequest) GetCombatValue() int64 {
	if m != nil {
		return m.CombatValue
	}
	return 0
}

func (*Guild_GuildJoinNowRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildJoinNowRequest"
}

type Guild_GuildJoinNowResponse struct {
	Info    *models.Guild   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rewards map[int64]int64 `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Guild_GuildJoinNowResponse) Reset()      { *m = Guild_GuildJoinNowResponse{} }
func (*Guild_GuildJoinNowResponse) ProtoMessage() {}
func (*Guild_GuildJoinNowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 3}
}
func (m *Guild_GuildJoinNowResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildJoinNowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildJoinNowResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildJoinNowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildJoinNowResponse.Merge(m, src)
}
func (m *Guild_GuildJoinNowResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildJoinNowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildJoinNowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildJoinNowResponse proto.InternalMessageInfo

func (m *Guild_GuildJoinNowResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Guild_GuildJoinNowResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*Guild_GuildJoinNowResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildJoinNowResponse"
}

// 通过公会id获取公会详细信息
type Guild_GuildFindDetailsRequest struct {
	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (m *Guild_GuildFindDetailsRequest) Reset()      { *m = Guild_GuildFindDetailsRequest{} }
func (*Guild_GuildFindDetailsRequest) ProtoMessage() {}
func (*Guild_GuildFindDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 4}
}
func (m *Guild_GuildFindDetailsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFindDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFindDetailsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFindDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFindDetailsRequest.Merge(m, src)
}
func (m *Guild_GuildFindDetailsRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFindDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFindDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFindDetailsRequest proto.InternalMessageInfo

func (m *Guild_GuildFindDetailsRequest) GetId() []string {
	if m != nil {
		return m.Id
	}
	return nil
}

func (*Guild_GuildFindDetailsRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildFindDetailsRequest"
}

type Guild_GuildFindDetailsResponse struct {
	List []*models.Guild `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (m *Guild_GuildFindDetailsResponse) Reset()      { *m = Guild_GuildFindDetailsResponse{} }
func (*Guild_GuildFindDetailsResponse) ProtoMessage() {}
func (*Guild_GuildFindDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 5}
}
func (m *Guild_GuildFindDetailsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFindDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFindDetailsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFindDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFindDetailsResponse.Merge(m, src)
}
func (m *Guild_GuildFindDetailsResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFindDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFindDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFindDetailsResponse proto.InternalMessageInfo

func (m *Guild_GuildFindDetailsResponse) GetList() []*models.Guild {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Guild_GuildFindDetailsResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildFindDetailsResponse"
}

// 获取公会信息（进入公会场景，改接口没有公会的时候不会返回error code）
type Guild_GuildEnterRequest struct {
}

func (m *Guild_GuildEnterRequest) Reset()      { *m = Guild_GuildEnterRequest{} }
func (*Guild_GuildEnterRequest) ProtoMessage() {}
func (*Guild_GuildEnterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 6}
}
func (m *Guild_GuildEnterRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildEnterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildEnterRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildEnterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildEnterRequest.Merge(m, src)
}
func (m *Guild_GuildEnterRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildEnterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildEnterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildEnterRequest proto.InternalMessageInfo

func (*Guild_GuildEnterRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildEnterRequest"
}

type Guild_GuildEnterResponse struct {
	Info         *models.Guild   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rewards      map[int64]int64 `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LastPosition int64           `protobuf:"varint,3,opt,name=last_position,json=lastPosition,proto3" json:"last_position,omitempty"`
	CurPosition  int64           `protobuf:"varint,4,opt,name=cur_position,json=curPosition,proto3" json:"cur_position,omitempty"`
}

func (m *Guild_GuildEnterResponse) Reset()      { *m = Guild_GuildEnterResponse{} }
func (*Guild_GuildEnterResponse) ProtoMessage() {}
func (*Guild_GuildEnterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 7}
}
func (m *Guild_GuildEnterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildEnterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildEnterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildEnterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildEnterResponse.Merge(m, src)
}
func (m *Guild_GuildEnterResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildEnterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildEnterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildEnterResponse proto.InternalMessageInfo

func (m *Guild_GuildEnterResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Guild_GuildEnterResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Guild_GuildEnterResponse) GetLastPosition() int64 {
	if m != nil {
		return m.LastPosition
	}
	return 0
}

func (m *Guild_GuildEnterResponse) GetCurPosition() int64 {
	if m != nil {
		return m.CurPosition
	}
	return 0
}

func (*Guild_GuildEnterResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildEnterResponse"
}

// 创建公会
type Guild_GuildCreateRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Flag     int64  `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Lang     int64  `protobuf:"varint,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Intro    string `protobuf:"bytes,4,opt,name=intro,proto3" json:"intro,omitempty"`
	Notice   string `protobuf:"bytes,5,opt,name=notice,proto3" json:"notice,omitempty"`
	AutoJoin bool   `protobuf:"varint,6,opt,name=auto_join,json=autoJoin,proto3" json:"auto_join,omitempty"`
}

func (m *Guild_GuildCreateRequest) Reset()      { *m = Guild_GuildCreateRequest{} }
func (*Guild_GuildCreateRequest) ProtoMessage() {}
func (*Guild_GuildCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 8}
}
func (m *Guild_GuildCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildCreateRequest.Merge(m, src)
}
func (m *Guild_GuildCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildCreateRequest proto.InternalMessageInfo

func (m *Guild_GuildCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Guild_GuildCreateRequest) GetFlag() int64 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *Guild_GuildCreateRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildCreateRequest) GetIntro() string {
	if m != nil {
		return m.Intro
	}
	return ""
}

func (m *Guild_GuildCreateRequest) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

func (m *Guild_GuildCreateRequest) GetAutoJoin() bool {
	if m != nil {
		return m.AutoJoin
	}
	return false
}

func (*Guild_GuildCreateRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildCreateRequest"
}

type Guild_GuildCreateResponse struct {
	Info    *models.Guild   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rewards map[int64]int64 `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Guild_GuildCreateResponse) Reset()      { *m = Guild_GuildCreateResponse{} }
func (*Guild_GuildCreateResponse) ProtoMessage() {}
func (*Guild_GuildCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 9}
}
func (m *Guild_GuildCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildCreateResponse.Merge(m, src)
}
func (m *Guild_GuildCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildCreateResponse proto.InternalMessageInfo

func (m *Guild_GuildCreateResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Guild_GuildCreateResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*Guild_GuildCreateResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildCreateResponse"
}

// 解散公会
type Guild_GuildDissolveRequest struct {
}

func (m *Guild_GuildDissolveRequest) Reset()      { *m = Guild_GuildDissolveRequest{} }
func (*Guild_GuildDissolveRequest) ProtoMessage() {}
func (*Guild_GuildDissolveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 10}
}
func (m *Guild_GuildDissolveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildDissolveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildDissolveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildDissolveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildDissolveRequest.Merge(m, src)
}
func (m *Guild_GuildDissolveRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildDissolveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildDissolveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildDissolveRequest proto.InternalMessageInfo

func (*Guild_GuildDissolveRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildDissolveRequest"
}

type Guild_GuildDissolveResponse struct {
}

func (m *Guild_GuildDissolveResponse) Reset()      { *m = Guild_GuildDissolveResponse{} }
func (*Guild_GuildDissolveResponse) ProtoMessage() {}
func (*Guild_GuildDissolveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 11}
}
func (m *Guild_GuildDissolveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildDissolveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildDissolveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildDissolveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildDissolveResponse.Merge(m, src)
}
func (m *Guild_GuildDissolveResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildDissolveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildDissolveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildDissolveResponse proto.InternalMessageInfo

func (*Guild_GuildDissolveResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildDissolveResponse"
}

// 修改公会信息
type Guild_GuildModifyRequest struct {
	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Flag             int64  `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Lang             int64  `protobuf:"varint,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Intro            string `protobuf:"bytes,4,opt,name=intro,proto3" json:"intro,omitempty"`
	Notice           string `protobuf:"bytes,5,opt,name=notice,proto3" json:"notice,omitempty"`
	AutoJoin         int64  `protobuf:"varint,6,opt,name=auto_join,json=autoJoin,proto3" json:"auto_join,omitempty"`
	Greeting         string `protobuf:"bytes,8,opt,name=greeting,proto3" json:"greeting,omitempty"`
	CombatValueLimit int64  `protobuf:"varint,9,opt,name=combat_value_limit,json=combatValueLimit,proto3" json:"combat_value_limit,omitempty"`
}

func (m *Guild_GuildModifyRequest) Reset()      { *m = Guild_GuildModifyRequest{} }
func (*Guild_GuildModifyRequest) ProtoMessage() {}
func (*Guild_GuildModifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 12}
}
func (m *Guild_GuildModifyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildModifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildModifyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildModifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildModifyRequest.Merge(m, src)
}
func (m *Guild_GuildModifyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildModifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildModifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildModifyRequest proto.InternalMessageInfo

func (m *Guild_GuildModifyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Guild_GuildModifyRequest) GetFlag() int64 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *Guild_GuildModifyRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildModifyRequest) GetIntro() string {
	if m != nil {
		return m.Intro
	}
	return ""
}

func (m *Guild_GuildModifyRequest) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

func (m *Guild_GuildModifyRequest) GetAutoJoin() int64 {
	if m != nil {
		return m.AutoJoin
	}
	return 0
}

func (m *Guild_GuildModifyRequest) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func (m *Guild_GuildModifyRequest) GetCombatValueLimit() int64 {
	if m != nil {
		return m.CombatValueLimit
	}
	return 0
}

func (*Guild_GuildModifyRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildModifyRequest"
}

type Guild_GuildModifyResponse struct {
	Info *models.Guild `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *Guild_GuildModifyResponse) Reset()      { *m = Guild_GuildModifyResponse{} }
func (*Guild_GuildModifyResponse) ProtoMessage() {}
func (*Guild_GuildModifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 13}
}
func (m *Guild_GuildModifyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildModifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildModifyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildModifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildModifyResponse.Merge(m, src)
}
func (m *Guild_GuildModifyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildModifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildModifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildModifyResponse proto.InternalMessageInfo

func (m *Guild_GuildModifyResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*Guild_GuildModifyResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildModifyResponse"
}

// 获取公会所有成员
type Guild_GuildMembersRequest struct {
	GuildId string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (m *Guild_GuildMembersRequest) Reset()      { *m = Guild_GuildMembersRequest{} }
func (*Guild_GuildMembersRequest) ProtoMessage() {}
func (*Guild_GuildMembersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 14}
}
func (m *Guild_GuildMembersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildMembersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildMembersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildMembersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildMembersRequest.Merge(m, src)
}
func (m *Guild_GuildMembersRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildMembersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildMembersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildMembersRequest proto.InternalMessageInfo

func (m *Guild_GuildMembersRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (*Guild_GuildMembersRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildMembersRequest"
}

type Guild_GuildMembersResponse struct {
	Members []*models.GuildMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (m *Guild_GuildMembersResponse) Reset()      { *m = Guild_GuildMembersResponse{} }
func (*Guild_GuildMembersResponse) ProtoMessage() {}
func (*Guild_GuildMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 15}
}
func (m *Guild_GuildMembersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildMembersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildMembersResponse.Merge(m, src)
}
func (m *Guild_GuildMembersResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildMembersResponse proto.InternalMessageInfo

func (m *Guild_GuildMembersResponse) GetMembers() []*models.GuildMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (*Guild_GuildMembersResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildMembersResponse"
}

// 获取可邀请的玩家列表
type Guild_GuildInviteListRequest struct {
	Lang             int64 `protobuf:"varint,1,opt,name=lang,proto3" json:"lang,omitempty"`
	CombatValueLimit int64 `protobuf:"varint,2,opt,name=combat_value_limit,json=combatValueLimit,proto3" json:"combat_value_limit,omitempty"`
	Refresh          bool  `protobuf:"varint,3,opt,name=refresh,proto3" json:"refresh,omitempty"`
}

func (m *Guild_GuildInviteListRequest) Reset()      { *m = Guild_GuildInviteListRequest{} }
func (*Guild_GuildInviteListRequest) ProtoMessage() {}
func (*Guild_GuildInviteListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 16}
}
func (m *Guild_GuildInviteListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildInviteListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildInviteListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildInviteListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildInviteListRequest.Merge(m, src)
}
func (m *Guild_GuildInviteListRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildInviteListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildInviteListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildInviteListRequest proto.InternalMessageInfo

func (m *Guild_GuildInviteListRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildInviteListRequest) GetCombatValueLimit() int64 {
	if m != nil {
		return m.CombatValueLimit
	}
	return 0
}

func (m *Guild_GuildInviteListRequest) GetRefresh() bool {
	if m != nil {
		return m.Refresh
	}
	return false
}

func (*Guild_GuildInviteListRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildInviteListRequest"
}

type Guild_GuildInviteListResponse struct {
	List []*models.GuildInvite `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (m *Guild_GuildInviteListResponse) Reset()      { *m = Guild_GuildInviteListResponse{} }
func (*Guild_GuildInviteListResponse) ProtoMessage() {}
func (*Guild_GuildInviteListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 17}
}
func (m *Guild_GuildInviteListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildInviteListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildInviteListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildInviteListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildInviteListResponse.Merge(m, src)
}
func (m *Guild_GuildInviteListResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildInviteListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildInviteListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildInviteListResponse proto.InternalMessageInfo

func (m *Guild_GuildInviteListResponse) GetList() []*models.GuildInvite {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Guild_GuildInviteListResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildInviteListResponse"
}

// 处理邀请
type Guild_GuildHandleInviteRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Agree bool   `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
}

func (m *Guild_GuildHandleInviteRequest) Reset()      { *m = Guild_GuildHandleInviteRequest{} }
func (*Guild_GuildHandleInviteRequest) ProtoMessage() {}
func (*Guild_GuildHandleInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 18}
}
func (m *Guild_GuildHandleInviteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildHandleInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildHandleInviteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildHandleInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildHandleInviteRequest.Merge(m, src)
}
func (m *Guild_GuildHandleInviteRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildHandleInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildHandleInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildHandleInviteRequest proto.InternalMessageInfo

func (m *Guild_GuildHandleInviteRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Guild_GuildHandleInviteRequest) GetAgree() bool {
	if m != nil {
		return m.Agree
	}
	return false
}

func (*Guild_GuildHandleInviteRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildHandleInviteRequest"
}

type Guild_GuildHandleInviteResponse struct {
	Info    *models.Guild   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rewards map[int64]int64 `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Guild_GuildHandleInviteResponse) Reset()      { *m = Guild_GuildHandleInviteResponse{} }
func (*Guild_GuildHandleInviteResponse) ProtoMessage() {}
func (*Guild_GuildHandleInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 19}
}
func (m *Guild_GuildHandleInviteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildHandleInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildHandleInviteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildHandleInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildHandleInviteResponse.Merge(m, src)
}
func (m *Guild_GuildHandleInviteResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildHandleInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildHandleInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildHandleInviteResponse proto.InternalMessageInfo

func (m *Guild_GuildHandleInviteResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Guild_GuildHandleInviteResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*Guild_GuildHandleInviteResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildHandleInviteResponse"
}

// 申请加入公会
type Guild_GuildJoinApplyRequest struct {
	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (m *Guild_GuildJoinApplyRequest) Reset()      { *m = Guild_GuildJoinApplyRequest{} }
func (*Guild_GuildJoinApplyRequest) ProtoMessage() {}
func (*Guild_GuildJoinApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 20}
}
func (m *Guild_GuildJoinApplyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildJoinApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildJoinApplyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildJoinApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildJoinApplyRequest.Merge(m, src)
}
func (m *Guild_GuildJoinApplyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildJoinApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildJoinApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildJoinApplyRequest proto.InternalMessageInfo

func (m *Guild_GuildJoinApplyRequest) GetId() []string {
	if m != nil {
		return m.Id
	}
	return nil
}

func (*Guild_GuildJoinApplyRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildJoinApplyRequest"
}

type Guild_GuildJoinApplyResponse struct {
	Info    *models.Guild   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rewards map[int64]int64 `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *Guild_GuildJoinApplyResponse) Reset()      { *m = Guild_GuildJoinApplyResponse{} }
func (*Guild_GuildJoinApplyResponse) ProtoMessage() {}
func (*Guild_GuildJoinApplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 21}
}
func (m *Guild_GuildJoinApplyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildJoinApplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildJoinApplyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildJoinApplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildJoinApplyResponse.Merge(m, src)
}
func (m *Guild_GuildJoinApplyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildJoinApplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildJoinApplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildJoinApplyResponse proto.InternalMessageInfo

func (m *Guild_GuildJoinApplyResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Guild_GuildJoinApplyResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (*Guild_GuildJoinApplyResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildJoinApplyResponse"
}

// 取消申请
type Guild_GuildCancelApplyRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Guild_GuildCancelApplyRequest) Reset()      { *m = Guild_GuildCancelApplyRequest{} }
func (*Guild_GuildCancelApplyRequest) ProtoMessage() {}
func (*Guild_GuildCancelApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 22}
}
func (m *Guild_GuildCancelApplyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildCancelApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildCancelApplyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildCancelApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildCancelApplyRequest.Merge(m, src)
}
func (m *Guild_GuildCancelApplyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildCancelApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildCancelApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildCancelApplyRequest proto.InternalMessageInfo

func (m *Guild_GuildCancelApplyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (*Guild_GuildCancelApplyRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildCancelApplyRequest"
}

type Guild_GuildCancelApplyResponse struct {
}

func (m *Guild_GuildCancelApplyResponse) Reset()      { *m = Guild_GuildCancelApplyResponse{} }
func (*Guild_GuildCancelApplyResponse) ProtoMessage() {}
func (*Guild_GuildCancelApplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 23}
}
func (m *Guild_GuildCancelApplyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildCancelApplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildCancelApplyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildCancelApplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildCancelApplyResponse.Merge(m, src)
}
func (m *Guild_GuildCancelApplyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildCancelApplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildCancelApplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildCancelApplyResponse proto.InternalMessageInfo

func (*Guild_GuildCancelApplyResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildCancelApplyResponse"
}

// 获取入会申请列表
type Guild_GuildApplyListRequest struct {
}

func (m *Guild_GuildApplyListRequest) Reset()      { *m = Guild_GuildApplyListRequest{} }
func (*Guild_GuildApplyListRequest) ProtoMessage() {}
func (*Guild_GuildApplyListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 24}
}
func (m *Guild_GuildApplyListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildApplyListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildApplyListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildApplyListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildApplyListRequest.Merge(m, src)
}
func (m *Guild_GuildApplyListRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildApplyListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildApplyListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildApplyListRequest proto.InternalMessageInfo

func (*Guild_GuildApplyListRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildApplyListRequest"
}

type Guild_GuildApplyListResponse struct {
	List []*models.GuildApply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (m *Guild_GuildApplyListResponse) Reset()      { *m = Guild_GuildApplyListResponse{} }
func (*Guild_GuildApplyListResponse) ProtoMessage() {}
func (*Guild_GuildApplyListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 25}
}
func (m *Guild_GuildApplyListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildApplyListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildApplyListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildApplyListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildApplyListResponse.Merge(m, src)
}
func (m *Guild_GuildApplyListResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildApplyListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildApplyListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildApplyListResponse proto.InternalMessageInfo

func (m *Guild_GuildApplyListResponse) GetList() []*models.GuildApply {
	if m != nil {
		return m.List
	}
	return nil
}

func (*Guild_GuildApplyListResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildApplyListResponse"
}

// 处理入会申请
type Guild_GuildHandleApplyRequest struct {
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Agree  bool   `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
}

func (m *Guild_GuildHandleApplyRequest) Reset()      { *m = Guild_GuildHandleApplyRequest{} }
func (*Guild_GuildHandleApplyRequest) ProtoMessage() {}
func (*Guild_GuildHandleApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 26}
}
func (m *Guild_GuildHandleApplyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildHandleApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildHandleApplyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildHandleApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildHandleApplyRequest.Merge(m, src)
}
func (m *Guild_GuildHandleApplyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildHandleApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildHandleApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildHandleApplyRequest proto.InternalMessageInfo

func (m *Guild_GuildHandleApplyRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *Guild_GuildHandleApplyRequest) GetAgree() bool {
	if m != nil {
		return m.Agree
	}
	return false
}

func (*Guild_GuildHandleApplyRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildHandleApplyRequest"
}

type Guild_GuildHandleApplyResponse struct {
}

func (m *Guild_GuildHandleApplyResponse) Reset()      { *m = Guild_GuildHandleApplyResponse{} }
func (*Guild_GuildHandleApplyResponse) ProtoMessage() {}
func (*Guild_GuildHandleApplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 27}
}
func (m *Guild_GuildHandleApplyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildHandleApplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildHandleApplyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildHandleApplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildHandleApplyResponse.Merge(m, src)
}
func (m *Guild_GuildHandleApplyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildHandleApplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildHandleApplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildHandleApplyResponse proto.InternalMessageInfo

func (*Guild_GuildHandleApplyResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildHandleApplyResponse"
}

// 拒绝入会申请
type Guild_GuildApplyRejectAllRequest struct {
}

func (m *Guild_GuildApplyRejectAllRequest) Reset()      { *m = Guild_GuildApplyRejectAllRequest{} }
func (*Guild_GuildApplyRejectAllRequest) ProtoMessage() {}
func (*Guild_GuildApplyRejectAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 28}
}
func (m *Guild_GuildApplyRejectAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildApplyRejectAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildApplyRejectAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildApplyRejectAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildApplyRejectAllRequest.Merge(m, src)
}
func (m *Guild_GuildApplyRejectAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildApplyRejectAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildApplyRejectAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildApplyRejectAllRequest proto.InternalMessageInfo

func (*Guild_GuildApplyRejectAllRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildApplyRejectAllRequest"
}

type Guild_GuildApplyRejectAllResponse struct {
}

func (m *Guild_GuildApplyRejectAllResponse) Reset()      { *m = Guild_GuildApplyRejectAllResponse{} }
func (*Guild_GuildApplyRejectAllResponse) ProtoMessage() {}
func (*Guild_GuildApplyRejectAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 29}
}
func (m *Guild_GuildApplyRejectAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildApplyRejectAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildApplyRejectAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildApplyRejectAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildApplyRejectAllResponse.Merge(m, src)
}
func (m *Guild_GuildApplyRejectAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildApplyRejectAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildApplyRejectAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildApplyRejectAllResponse proto.InternalMessageInfo

func (*Guild_GuildApplyRejectAllResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildApplyRejectAllResponse"
}

// 将玩家踢出公会
type Guild_GuildRemoveRequest struct {
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (m *Guild_GuildRemoveRequest) Reset()      { *m = Guild_GuildRemoveRequest{} }
func (*Guild_GuildRemoveRequest) ProtoMessage() {}
func (*Guild_GuildRemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 30}
}
func (m *Guild_GuildRemoveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildRemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildRemoveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildRemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildRemoveRequest.Merge(m, src)
}
func (m *Guild_GuildRemoveRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildRemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildRemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildRemoveRequest proto.InternalMessageInfo

func (m *Guild_GuildRemoveRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (*Guild_GuildRemoveRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildRemoveRequest"
}

type Guild_GuildRemoveResponse struct {
	Info *models.Guild `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *Guild_GuildRemoveResponse) Reset()      { *m = Guild_GuildRemoveResponse{} }
func (*Guild_GuildRemoveResponse) ProtoMessage() {}
func (*Guild_GuildRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 31}
}
func (m *Guild_GuildRemoveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildRemoveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildRemoveResponse.Merge(m, src)
}
func (m *Guild_GuildRemoveResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildRemoveResponse proto.InternalMessageInfo

func (m *Guild_GuildRemoveResponse) GetInfo() *models.Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

func (*Guild_GuildRemoveResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildRemoveResponse"
}

// 退出公会
type Guild_GuildExitRequest struct {
}

func (m *Guild_GuildExitRequest) Reset()      { *m = Guild_GuildExitRequest{} }
func (*Guild_GuildExitRequest) ProtoMessage() {}
func (*Guild_GuildExitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 32}
}
func (m *Guild_GuildExitRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildExitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildExitRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildExitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildExitRequest.Merge(m, src)
}
func (m *Guild_GuildExitRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildExitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildExitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildExitRequest proto.InternalMessageInfo

func (*Guild_GuildExitRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildExitRequest"
}

type Guild_GuildExitResponse struct {
}

func (m *Guild_GuildExitResponse) Reset()      { *m = Guild_GuildExitResponse{} }
func (*Guild_GuildExitResponse) ProtoMessage() {}
func (*Guild_GuildExitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 33}
}
func (m *Guild_GuildExitResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildExitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildExitResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildExitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildExitResponse.Merge(m, src)
}
func (m *Guild_GuildExitResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildExitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildExitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildExitResponse proto.InternalMessageInfo

func (*Guild_GuildExitResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildExitResponse"
}

// 职位变更
type Guild_GuildPositionChangeRequest struct {
	RoleId   string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Position int64  `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (m *Guild_GuildPositionChangeRequest) Reset()      { *m = Guild_GuildPositionChangeRequest{} }
func (*Guild_GuildPositionChangeRequest) ProtoMessage() {}
func (*Guild_GuildPositionChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 34}
}
func (m *Guild_GuildPositionChangeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildPositionChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildPositionChangeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildPositionChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildPositionChangeRequest.Merge(m, src)
}
func (m *Guild_GuildPositionChangeRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildPositionChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildPositionChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildPositionChangeRequest proto.InternalMessageInfo

func (m *Guild_GuildPositionChangeRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *Guild_GuildPositionChangeRequest) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (*Guild_GuildPositionChangeRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildPositionChangeRequest"
}

type Guild_GuildPositionChangeResponse struct {
}

func (m *Guild_GuildPositionChangeResponse) Reset()      { *m = Guild_GuildPositionChangeResponse{} }
func (*Guild_GuildPositionChangeResponse) ProtoMessage() {}
func (*Guild_GuildPositionChangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 35}
}
func (m *Guild_GuildPositionChangeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildPositionChangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildPositionChangeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildPositionChangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildPositionChangeResponse.Merge(m, src)
}
func (m *Guild_GuildPositionChangeResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildPositionChangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildPositionChangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildPositionChangeResponse proto.InternalMessageInfo

func (*Guild_GuildPositionChangeResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildPositionChangeResponse"
}

type Guild_GuildGuildInfoRequest struct {
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (m *Guild_GuildGuildInfoRequest) Reset()      { *m = Guild_GuildGuildInfoRequest{} }
func (*Guild_GuildGuildInfoRequest) ProtoMessage() {}
func (*Guild_GuildGuildInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 36}
}
func (m *Guild_GuildGuildInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildGuildInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildGuildInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildGuildInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildGuildInfoRequest.Merge(m, src)
}
func (m *Guild_GuildGuildInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildGuildInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildGuildInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildGuildInfoRequest proto.InternalMessageInfo

func (m *Guild_GuildGuildInfoRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (*Guild_GuildGuildInfoRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildGuildInfoRequest"
}

type Guild_GuildGuildInfoResponse struct {
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *Guild_GuildGuildInfoResponse) Reset()      { *m = Guild_GuildGuildInfoResponse{} }
func (*Guild_GuildGuildInfoResponse) ProtoMessage() {}
func (*Guild_GuildGuildInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 37}
}
func (m *Guild_GuildGuildInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildGuildInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildGuildInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildGuildInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildGuildInfoResponse.Merge(m, src)
}
func (m *Guild_GuildGuildInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildGuildInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildGuildInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildGuildInfoResponse proto.InternalMessageInfo

func (m *Guild_GuildGuildInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Guild_GuildGuildInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (*Guild_GuildGuildInfoResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildGuildInfoResponse"
}

// 自定义职位名称
type Guild_GuildModifyPositionNameRequest struct {
	Name map[int64]string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Guild_GuildModifyPositionNameRequest) Reset()      { *m = Guild_GuildModifyPositionNameRequest{} }
func (*Guild_GuildModifyPositionNameRequest) ProtoMessage() {}
func (*Guild_GuildModifyPositionNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 38}
}
func (m *Guild_GuildModifyPositionNameRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildModifyPositionNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildModifyPositionNameRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildModifyPositionNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildModifyPositionNameRequest.Merge(m, src)
}
func (m *Guild_GuildModifyPositionNameRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildModifyPositionNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildModifyPositionNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildModifyPositionNameRequest proto.InternalMessageInfo

func (m *Guild_GuildModifyPositionNameRequest) GetName() map[int64]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (*Guild_GuildModifyPositionNameRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildModifyPositionNameRequest"
}

type Guild_GuildModifyPositionNameResponse struct {
}

func (m *Guild_GuildModifyPositionNameResponse) Reset()      { *m = Guild_GuildModifyPositionNameResponse{} }
func (*Guild_GuildModifyPositionNameResponse) ProtoMessage() {}
func (*Guild_GuildModifyPositionNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 39}
}
func (m *Guild_GuildModifyPositionNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildModifyPositionNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildModifyPositionNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildModifyPositionNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildModifyPositionNameResponse.Merge(m, src)
}
func (m *Guild_GuildModifyPositionNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildModifyPositionNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildModifyPositionNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildModifyPositionNameResponse proto.InternalMessageInfo

func (*Guild_GuildModifyPositionNameResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildModifyPositionNameResponse"
}

// 获取玩家公会建设信息
type Guild_GuildBuildInfoRequest struct {
}

func (m *Guild_GuildBuildInfoRequest) Reset()      { *m = Guild_GuildBuildInfoRequest{} }
func (*Guild_GuildBuildInfoRequest) ProtoMessage() {}
func (*Guild_GuildBuildInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 40}
}
func (m *Guild_GuildBuildInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildBuildInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildBuildInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildBuildInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildBuildInfoRequest.Merge(m, src)
}
func (m *Guild_GuildBuildInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildBuildInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildBuildInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildBuildInfoRequest proto.InternalMessageInfo

func (*Guild_GuildBuildInfoRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildBuildInfoRequest"
}

type Guild_GuildBuildInfoResponse struct {
	FreeCount int64           `protobuf:"varint,1,opt,name=free_count,json=freeCount,proto3" json:"free_count,omitempty"`
	PayCount  int64           `protobuf:"varint,2,opt,name=pay_count,json=payCount,proto3" json:"pay_count,omitempty"`
	PayCost   map[int64]int64 `protobuf:"bytes,3,rep,name=pay_cost,json=payCost,proto3" json:"pay_cost,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ResetTime int64           `protobuf:"varint,4,opt,name=reset_time,json=resetTime,proto3" json:"reset_time,omitempty"`
}

func (m *Guild_GuildBuildInfoResponse) Reset()      { *m = Guild_GuildBuildInfoResponse{} }
func (*Guild_GuildBuildInfoResponse) ProtoMessage() {}
func (*Guild_GuildBuildInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 41}
}
func (m *Guild_GuildBuildInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildBuildInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildBuildInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildBuildInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildBuildInfoResponse.Merge(m, src)
}
func (m *Guild_GuildBuildInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildBuildInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildBuildInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildBuildInfoResponse proto.InternalMessageInfo

func (m *Guild_GuildBuildInfoResponse) GetFreeCount() int64 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

func (m *Guild_GuildBuildInfoResponse) GetPayCount() int64 {
	if m != nil {
		return m.PayCount
	}
	return 0
}

func (m *Guild_GuildBuildInfoResponse) GetPayCost() map[int64]int64 {
	if m != nil {
		return m.PayCost
	}
	return nil
}

func (m *Guild_GuildBuildInfoResponse) GetResetTime() int64 {
	if m != nil {
		return m.ResetTime
	}
	return 0
}

func (*Guild_GuildBuildInfoResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildBuildInfoResponse"
}

// 公会建设
type Guild_GuildBuildRequest struct {
	Free bool `protobuf:"varint,1,opt,name=free,proto3" json:"free,omitempty"`
}

func (m *Guild_GuildBuildRequest) Reset()      { *m = Guild_GuildBuildRequest{} }
func (*Guild_GuildBuildRequest) ProtoMessage() {}
func (*Guild_GuildBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 42}
}
func (m *Guild_GuildBuildRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildBuildRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildBuildRequest.Merge(m, src)
}
func (m *Guild_GuildBuildRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildBuildRequest proto.InternalMessageInfo

func (m *Guild_GuildBuildRequest) GetFree() bool {
	if m != nil {
		return m.Free
	}
	return false
}

func (*Guild_GuildBuildRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildBuildRequest"
}

type Guild_GuildBuildResponse struct {
	Level     int64           `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Exp       int64           `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
	Rewards   map[int64]int64 `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Surprised int64           `protobuf:"varint,4,opt,name=surprised,proto3" json:"surprised,omitempty"`
	FreeCount int64           `protobuf:"varint,5,opt,name=free_count,json=freeCount,proto3" json:"free_count,omitempty"`
	PayCount  int64           `protobuf:"varint,6,opt,name=pay_count,json=payCount,proto3" json:"pay_count,omitempty"`
	PayCost   map[int64]int64 `protobuf:"bytes,7,rep,name=pay_cost,json=payCost,proto3" json:"pay_cost,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ResetTime int64           `protobuf:"varint,8,opt,name=reset_time,json=resetTime,proto3" json:"reset_time,omitempty"`
}

func (m *Guild_GuildBuildResponse) Reset()      { *m = Guild_GuildBuildResponse{} }
func (*Guild_GuildBuildResponse) ProtoMessage() {}
func (*Guild_GuildBuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 43}
}
func (m *Guild_GuildBuildResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildBuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildBuildResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildBuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildBuildResponse.Merge(m, src)
}
func (m *Guild_GuildBuildResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildBuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildBuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildBuildResponse proto.InternalMessageInfo

func (m *Guild_GuildBuildResponse) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Guild_GuildBuildResponse) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Guild_GuildBuildResponse) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Guild_GuildBuildResponse) GetSurprised() int64 {
	if m != nil {
		return m.Surprised
	}
	return 0
}

func (m *Guild_GuildBuildResponse) GetFreeCount() int64 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

func (m *Guild_GuildBuildResponse) GetPayCount() int64 {
	if m != nil {
		return m.PayCount
	}
	return 0
}

func (m *Guild_GuildBuildResponse) GetPayCost() map[int64]int64 {
	if m != nil {
		return m.PayCost
	}
	return nil
}

func (m *Guild_GuildBuildResponse) GetResetTime() int64 {
	if m != nil {
		return m.ResetTime
	}
	return 0
}

func (*Guild_GuildBuildResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildBuildResponse"
}

// 世界邀请
type Guild_GuildWorldInviteRequest struct {
	Free bool   `protobuf:"varint,1,opt,name=free,proto3" json:"free,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Save bool   `protobuf:"varint,3,opt,name=save,proto3" json:"save,omitempty"`
}

func (m *Guild_GuildWorldInviteRequest) Reset()      { *m = Guild_GuildWorldInviteRequest{} }
func (*Guild_GuildWorldInviteRequest) ProtoMessage() {}
func (*Guild_GuildWorldInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 44}
}
func (m *Guild_GuildWorldInviteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildWorldInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildWorldInviteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildWorldInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildWorldInviteRequest.Merge(m, src)
}
func (m *Guild_GuildWorldInviteRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildWorldInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildWorldInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildWorldInviteRequest proto.InternalMessageInfo

func (m *Guild_GuildWorldInviteRequest) GetFree() bool {
	if m != nil {
		return m.Free
	}
	return false
}

func (m *Guild_GuildWorldInviteRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Guild_GuildWorldInviteRequest) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (*Guild_GuildWorldInviteRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildWorldInviteRequest"
}

type Guild_GuildWorldInviteResponse struct {
}

func (m *Guild_GuildWorldInviteResponse) Reset()      { *m = Guild_GuildWorldInviteResponse{} }
func (*Guild_GuildWorldInviteResponse) ProtoMessage() {}
func (*Guild_GuildWorldInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 45}
}
func (m *Guild_GuildWorldInviteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildWorldInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildWorldInviteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildWorldInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildWorldInviteResponse.Merge(m, src)
}
func (m *Guild_GuildWorldInviteResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildWorldInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildWorldInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildWorldInviteResponse proto.InternalMessageInfo

func (*Guild_GuildWorldInviteResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildWorldInviteResponse"
}

// 个人邀请
type Guild_GuildPrivateInviteRequest struct {
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Save   bool   `protobuf:"varint,3,opt,name=save,proto3" json:"save,omitempty"`
}

func (m *Guild_GuildPrivateInviteRequest) Reset()      { *m = Guild_GuildPrivateInviteRequest{} }
func (*Guild_GuildPrivateInviteRequest) ProtoMessage() {}
func (*Guild_GuildPrivateInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 46}
}
func (m *Guild_GuildPrivateInviteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildPrivateInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildPrivateInviteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildPrivateInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildPrivateInviteRequest.Merge(m, src)
}
func (m *Guild_GuildPrivateInviteRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildPrivateInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildPrivateInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildPrivateInviteRequest proto.InternalMessageInfo

func (m *Guild_GuildPrivateInviteRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *Guild_GuildPrivateInviteRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Guild_GuildPrivateInviteRequest) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (*Guild_GuildPrivateInviteRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildPrivateInviteRequest"
}

type Guild_GuildPrivateInviteResponse struct {
}

func (m *Guild_GuildPrivateInviteResponse) Reset()      { *m = Guild_GuildPrivateInviteResponse{} }
func (*Guild_GuildPrivateInviteResponse) ProtoMessage() {}
func (*Guild_GuildPrivateInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 47}
}
func (m *Guild_GuildPrivateInviteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildPrivateInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildPrivateInviteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildPrivateInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildPrivateInviteResponse.Merge(m, src)
}
func (m *Guild_GuildPrivateInviteResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildPrivateInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildPrivateInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildPrivateInviteResponse proto.InternalMessageInfo

func (*Guild_GuildPrivateInviteResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildPrivateInviteResponse"
}

type Guild_GuildRankRequest struct {
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *Guild_GuildRankRequest) Reset()      { *m = Guild_GuildRankRequest{} }
func (*Guild_GuildRankRequest) ProtoMessage() {}
func (*Guild_GuildRankRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 48}
}
func (m *Guild_GuildRankRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildRankRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildRankRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildRankRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildRankRequest.Merge(m, src)
}
func (m *Guild_GuildRankRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildRankRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildRankRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildRankRequest proto.InternalMessageInfo

func (m *Guild_GuildRankRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Guild_GuildRankRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (*Guild_GuildRankRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildRankRequest"
}

type Guild_GuildRankResponse struct {
	Self     *models.Guild           `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	SelfRank int64                   `protobuf:"varint,2,opt,name=self_rank,json=selfRank,proto3" json:"self_rank,omitempty"`
	Data     map[int64]*models.Guild `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ending   bool                    `protobuf:"varint,4,opt,name=ending,proto3" json:"ending,omitempty"`
}

func (m *Guild_GuildRankResponse) Reset()      { *m = Guild_GuildRankResponse{} }
func (*Guild_GuildRankResponse) ProtoMessage() {}
func (*Guild_GuildRankResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 49}
}
func (m *Guild_GuildRankResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildRankResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildRankResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildRankResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildRankResponse.Merge(m, src)
}
func (m *Guild_GuildRankResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildRankResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildRankResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildRankResponse proto.InternalMessageInfo

func (m *Guild_GuildRankResponse) GetSelf() *models.Guild {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *Guild_GuildRankResponse) GetSelfRank() int64 {
	if m != nil {
		return m.SelfRank
	}
	return 0
}

func (m *Guild_GuildRankResponse) GetData() map[int64]*models.Guild {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Guild_GuildRankResponse) GetEnding() bool {
	if m != nil {
		return m.Ending
	}
	return false
}

func (*Guild_GuildRankResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildRankResponse"
}

// 公会名是否存在
type Guild_GuildNameExistRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *Guild_GuildNameExistRequest) Reset()      { *m = Guild_GuildNameExistRequest{} }
func (*Guild_GuildNameExistRequest) ProtoMessage() {}
func (*Guild_GuildNameExistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 50}
}
func (m *Guild_GuildNameExistRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildNameExistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildNameExistRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildNameExistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildNameExistRequest.Merge(m, src)
}
func (m *Guild_GuildNameExistRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildNameExistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildNameExistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildNameExistRequest proto.InternalMessageInfo

func (m *Guild_GuildNameExistRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (*Guild_GuildNameExistRequest) XXX_MessageName() string {
	return "less_service.Guild.GuildNameExistRequest"
}

type Guild_GuildNameExistResponse struct {
	Exist bool `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
}

func (m *Guild_GuildNameExistResponse) Reset()      { *m = Guild_GuildNameExistResponse{} }
func (*Guild_GuildNameExistResponse) ProtoMessage() {}
func (*Guild_GuildNameExistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 51}
}
func (m *Guild_GuildNameExistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildNameExistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildNameExistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildNameExistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildNameExistResponse.Merge(m, src)
}
func (m *Guild_GuildNameExistResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildNameExistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildNameExistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildNameExistResponse proto.InternalMessageInfo

func (m *Guild_GuildNameExistResponse) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

func (*Guild_GuildNameExistResponse) XXX_MessageName() string {
	return "less_service.Guild.GuildNameExistResponse"
}

// 获取公会祝福信息
type Guild_BlessingInfoRequest struct {
}

func (m *Guild_BlessingInfoRequest) Reset()      { *m = Guild_BlessingInfoRequest{} }
func (*Guild_BlessingInfoRequest) ProtoMessage() {}
func (*Guild_BlessingInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 52}
}
func (m *Guild_BlessingInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingInfoRequest.Merge(m, src)
}
func (m *Guild_BlessingInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingInfoRequest proto.InternalMessageInfo

func (*Guild_BlessingInfoRequest) XXX_MessageName() string {
	return "less_service.Guild.BlessingInfoRequest"
}

type Guild_BlessingInfoResponse struct {
	Stage     int64                   `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	Queue     []*models.BlessingQueue `protobuf:"bytes,2,rep,name=queue,proto3" json:"queue,omitempty"`
	Activated []int64                 `protobuf:"varint,3,rep,packed,name=activated,proto3" json:"activated,omitempty"`
	Effic     int64                   `protobuf:"varint,4,opt,name=effic,proto3" json:"effic,omitempty"`
}

func (m *Guild_BlessingInfoResponse) Reset()      { *m = Guild_BlessingInfoResponse{} }
func (*Guild_BlessingInfoResponse) ProtoMessage() {}
func (*Guild_BlessingInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 53}
}
func (m *Guild_BlessingInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingInfoResponse.Merge(m, src)
}
func (m *Guild_BlessingInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingInfoResponse proto.InternalMessageInfo

func (m *Guild_BlessingInfoResponse) GetStage() int64 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *Guild_BlessingInfoResponse) GetQueue() []*models.BlessingQueue {
	if m != nil {
		return m.Queue
	}
	return nil
}

func (m *Guild_BlessingInfoResponse) GetActivated() []int64 {
	if m != nil {
		return m.Activated
	}
	return nil
}

func (m *Guild_BlessingInfoResponse) GetEffic() int64 {
	if m != nil {
		return m.Effic
	}
	return 0
}

func (*Guild_BlessingInfoResponse) XXX_MessageName() string {
	return "less_service.Guild.BlessingInfoResponse"
}

// 开始祈祷
type Guild_BlessingStartRequest struct {
	BlessId int64 `protobuf:"varint,1,opt,name=bless_id,json=blessId,proto3" json:"bless_id,omitempty"`
}

func (m *Guild_BlessingStartRequest) Reset()      { *m = Guild_BlessingStartRequest{} }
func (*Guild_BlessingStartRequest) ProtoMessage() {}
func (*Guild_BlessingStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 54}
}
func (m *Guild_BlessingStartRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingStartRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingStartRequest.Merge(m, src)
}
func (m *Guild_BlessingStartRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingStartRequest proto.InternalMessageInfo

func (m *Guild_BlessingStartRequest) GetBlessId() int64 {
	if m != nil {
		return m.BlessId
	}
	return 0
}

func (*Guild_BlessingStartRequest) XXX_MessageName() string {
	return "less_service.Guild.BlessingStartRequest"
}

type Guild_BlessingStartResponse struct {
	Stage     int64                   `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	Queue     []*models.BlessingQueue `protobuf:"bytes,2,rep,name=queue,proto3" json:"queue,omitempty"`
	Activated []int64                 `protobuf:"varint,3,rep,packed,name=activated,proto3" json:"activated,omitempty"`
}

func (m *Guild_BlessingStartResponse) Reset()      { *m = Guild_BlessingStartResponse{} }
func (*Guild_BlessingStartResponse) ProtoMessage() {}
func (*Guild_BlessingStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 55}
}
func (m *Guild_BlessingStartResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingStartResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingStartResponse.Merge(m, src)
}
func (m *Guild_BlessingStartResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingStartResponse proto.InternalMessageInfo

func (m *Guild_BlessingStartResponse) GetStage() int64 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *Guild_BlessingStartResponse) GetQueue() []*models.BlessingQueue {
	if m != nil {
		return m.Queue
	}
	return nil
}

func (m *Guild_BlessingStartResponse) GetActivated() []int64 {
	if m != nil {
		return m.Activated
	}
	return nil
}

func (*Guild_BlessingStartResponse) XXX_MessageName() string {
	return "less_service.Guild.BlessingStartResponse"
}

// 激活祈祷
type Guild_BlessingActivateRequest struct {
	BlessId int64 `protobuf:"varint,1,opt,name=bless_id,json=blessId,proto3" json:"bless_id,omitempty"`
}

func (m *Guild_BlessingActivateRequest) Reset()      { *m = Guild_BlessingActivateRequest{} }
func (*Guild_BlessingActivateRequest) ProtoMessage() {}
func (*Guild_BlessingActivateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 56}
}
func (m *Guild_BlessingActivateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingActivateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingActivateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingActivateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingActivateRequest.Merge(m, src)
}
func (m *Guild_BlessingActivateRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingActivateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingActivateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingActivateRequest proto.InternalMessageInfo

func (m *Guild_BlessingActivateRequest) GetBlessId() int64 {
	if m != nil {
		return m.BlessId
	}
	return 0
}

func (*Guild_BlessingActivateRequest) XXX_MessageName() string {
	return "less_service.Guild.BlessingActivateRequest"
}

type Guild_BlessingActivateResponse struct {
	Stage     int64                   `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	Queue     []*models.BlessingQueue `protobuf:"bytes,2,rep,name=queue,proto3" json:"queue,omitempty"`
	Activated []int64                 `protobuf:"varint,3,rep,packed,name=activated,proto3" json:"activated,omitempty"`
}

func (m *Guild_BlessingActivateResponse) Reset()      { *m = Guild_BlessingActivateResponse{} }
func (*Guild_BlessingActivateResponse) ProtoMessage() {}
func (*Guild_BlessingActivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 57}
}
func (m *Guild_BlessingActivateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingActivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingActivateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingActivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingActivateResponse.Merge(m, src)
}
func (m *Guild_BlessingActivateResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingActivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingActivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingActivateResponse proto.InternalMessageInfo

func (m *Guild_BlessingActivateResponse) GetStage() int64 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *Guild_BlessingActivateResponse) GetQueue() []*models.BlessingQueue {
	if m != nil {
		return m.Queue
	}
	return nil
}

func (m *Guild_BlessingActivateResponse) GetActivated() []int64 {
	if m != nil {
		return m.Activated
	}
	return nil
}

func (*Guild_BlessingActivateResponse) XXX_MessageName() string {
	return "less_service.Guild.BlessingActivateResponse"
}

// 切换到下一阶
type Guild_BlessingNextStageRequest struct {
}

func (m *Guild_BlessingNextStageRequest) Reset()      { *m = Guild_BlessingNextStageRequest{} }
func (*Guild_BlessingNextStageRequest) ProtoMessage() {}
func (*Guild_BlessingNextStageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 58}
}
func (m *Guild_BlessingNextStageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingNextStageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingNextStageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingNextStageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingNextStageRequest.Merge(m, src)
}
func (m *Guild_BlessingNextStageRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingNextStageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingNextStageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingNextStageRequest proto.InternalMessageInfo

func (*Guild_BlessingNextStageRequest) XXX_MessageName() string {
	return "less_service.Guild.BlessingNextStageRequest"
}

type Guild_BlessingNextStageResponse struct {
}

func (m *Guild_BlessingNextStageResponse) Reset()      { *m = Guild_BlessingNextStageResponse{} }
func (*Guild_BlessingNextStageResponse) ProtoMessage() {}
func (*Guild_BlessingNextStageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 59}
}
func (m *Guild_BlessingNextStageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_BlessingNextStageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_BlessingNextStageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_BlessingNextStageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_BlessingNextStageResponse.Merge(m, src)
}
func (m *Guild_BlessingNextStageResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_BlessingNextStageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_BlessingNextStageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_BlessingNextStageResponse proto.InternalMessageInfo

func (*Guild_BlessingNextStageResponse) XXX_MessageName() string {
	return "less_service.Guild.BlessingNextStageResponse"
}

//----------------------push----------------------//
// 公会经验（等级变更）
type Guild_GuildExpChange struct {
	Level int64 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Exp   int64 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (m *Guild_GuildExpChange) Reset()      { *m = Guild_GuildExpChange{} }
func (*Guild_GuildExpChange) ProtoMessage() {}
func (*Guild_GuildExpChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 60}
}
func (m *Guild_GuildExpChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildExpChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildExpChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildExpChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildExpChange.Merge(m, src)
}
func (m *Guild_GuildExpChange) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildExpChange) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildExpChange.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildExpChange proto.InternalMessageInfo

func (m *Guild_GuildExpChange) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Guild_GuildExpChange) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (*Guild_GuildExpChange) XXX_MessageName() string {
	return "less_service.Guild.GuildExpChange"
}

// 玩家公会信息变更
type Guild_UserGuildInfoChange struct {
	GuildId  string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Position int64  `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (m *Guild_UserGuildInfoChange) Reset()      { *m = Guild_UserGuildInfoChange{} }
func (*Guild_UserGuildInfoChange) ProtoMessage() {}
func (*Guild_UserGuildInfoChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 61}
}
func (m *Guild_UserGuildInfoChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_UserGuildInfoChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_UserGuildInfoChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_UserGuildInfoChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_UserGuildInfoChange.Merge(m, src)
}
func (m *Guild_UserGuildInfoChange) XXX_Size() int {
	return m.Size()
}
func (m *Guild_UserGuildInfoChange) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_UserGuildInfoChange.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_UserGuildInfoChange proto.InternalMessageInfo

func (m *Guild_UserGuildInfoChange) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *Guild_UserGuildInfoChange) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (*Guild_UserGuildInfoChange) XXX_MessageName() string {
	return "less_service.Guild.UserGuildInfoChange"
}

//----------------------作弊器----------------------//
// 重置公会建设（免费和付费）
type Guild_CheatGuildResetBuildRequest struct {
}

func (m *Guild_CheatGuildResetBuildRequest) Reset()      { *m = Guild_CheatGuildResetBuildRequest{} }
func (*Guild_CheatGuildResetBuildRequest) ProtoMessage() {}
func (*Guild_CheatGuildResetBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 62}
}
func (m *Guild_CheatGuildResetBuildRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatGuildResetBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatGuildResetBuildRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatGuildResetBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatGuildResetBuildRequest.Merge(m, src)
}
func (m *Guild_CheatGuildResetBuildRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatGuildResetBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatGuildResetBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatGuildResetBuildRequest proto.InternalMessageInfo

func (*Guild_CheatGuildResetBuildRequest) XXX_MessageName() string {
	return "less_service.Guild.CheatGuildResetBuildRequest"
}

type Guild_CheatGuildResetBuildResponse struct {
}

func (m *Guild_CheatGuildResetBuildResponse) Reset()      { *m = Guild_CheatGuildResetBuildResponse{} }
func (*Guild_CheatGuildResetBuildResponse) ProtoMessage() {}
func (*Guild_CheatGuildResetBuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 63}
}
func (m *Guild_CheatGuildResetBuildResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatGuildResetBuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatGuildResetBuildResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatGuildResetBuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatGuildResetBuildResponse.Merge(m, src)
}
func (m *Guild_CheatGuildResetBuildResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatGuildResetBuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatGuildResetBuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatGuildResetBuildResponse proto.InternalMessageInfo

func (*Guild_CheatGuildResetBuildResponse) XXX_MessageName() string {
	return "less_service.Guild.CheatGuildResetBuildResponse"
}

// 修改公会经验
type Guild_CheatGuildAddExpRequest struct {
	Exp int64 `protobuf:"varint,1,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (m *Guild_CheatGuildAddExpRequest) Reset()      { *m = Guild_CheatGuildAddExpRequest{} }
func (*Guild_CheatGuildAddExpRequest) ProtoMessage() {}
func (*Guild_CheatGuildAddExpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 64}
}
func (m *Guild_CheatGuildAddExpRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatGuildAddExpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatGuildAddExpRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatGuildAddExpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatGuildAddExpRequest.Merge(m, src)
}
func (m *Guild_CheatGuildAddExpRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatGuildAddExpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatGuildAddExpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatGuildAddExpRequest proto.InternalMessageInfo

func (m *Guild_CheatGuildAddExpRequest) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (*Guild_CheatGuildAddExpRequest) XXX_MessageName() string {
	return "less_service.Guild.CheatGuildAddExpRequest"
}

type Guild_CheatGuildAddExpResponse struct {
}

func (m *Guild_CheatGuildAddExpResponse) Reset()      { *m = Guild_CheatGuildAddExpResponse{} }
func (*Guild_CheatGuildAddExpResponse) ProtoMessage() {}
func (*Guild_CheatGuildAddExpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 65}
}
func (m *Guild_CheatGuildAddExpResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatGuildAddExpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatGuildAddExpResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatGuildAddExpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatGuildAddExpResponse.Merge(m, src)
}
func (m *Guild_CheatGuildAddExpResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatGuildAddExpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatGuildAddExpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatGuildAddExpResponse proto.InternalMessageInfo

func (*Guild_CheatGuildAddExpResponse) XXX_MessageName() string {
	return "less_service.Guild.CheatGuildAddExpResponse"
}

// 清除退会cd
type Guild_CheatRestExitGuildCDRequest struct {
}

func (m *Guild_CheatRestExitGuildCDRequest) Reset()      { *m = Guild_CheatRestExitGuildCDRequest{} }
func (*Guild_CheatRestExitGuildCDRequest) ProtoMessage() {}
func (*Guild_CheatRestExitGuildCDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 66}
}
func (m *Guild_CheatRestExitGuildCDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatRestExitGuildCDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatRestExitGuildCDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatRestExitGuildCDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatRestExitGuildCDRequest.Merge(m, src)
}
func (m *Guild_CheatRestExitGuildCDRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatRestExitGuildCDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatRestExitGuildCDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatRestExitGuildCDRequest proto.InternalMessageInfo

func (*Guild_CheatRestExitGuildCDRequest) XXX_MessageName() string {
	return "less_service.Guild.CheatRestExitGuildCDRequest"
}

type Guild_CheatRestExitGuildCDResponse struct {
}

func (m *Guild_CheatRestExitGuildCDResponse) Reset()      { *m = Guild_CheatRestExitGuildCDResponse{} }
func (*Guild_CheatRestExitGuildCDResponse) ProtoMessage() {}
func (*Guild_CheatRestExitGuildCDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 67}
}
func (m *Guild_CheatRestExitGuildCDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatRestExitGuildCDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatRestExitGuildCDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatRestExitGuildCDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatRestExitGuildCDResponse.Merge(m, src)
}
func (m *Guild_CheatRestExitGuildCDResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatRestExitGuildCDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatRestExitGuildCDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatRestExitGuildCDResponse proto.InternalMessageInfo

func (*Guild_CheatRestExitGuildCDResponse) XXX_MessageName() string {
	return "less_service.Guild.CheatRestExitGuildCDResponse"
}

// 设置公会祝福
type Guild_CheatSetBlessStageRequest struct {
	Stage int64 `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	Page  int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (m *Guild_CheatSetBlessStageRequest) Reset()      { *m = Guild_CheatSetBlessStageRequest{} }
func (*Guild_CheatSetBlessStageRequest) ProtoMessage() {}
func (*Guild_CheatSetBlessStageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 68}
}
func (m *Guild_CheatSetBlessStageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatSetBlessStageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatSetBlessStageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatSetBlessStageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatSetBlessStageRequest.Merge(m, src)
}
func (m *Guild_CheatSetBlessStageRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatSetBlessStageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatSetBlessStageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatSetBlessStageRequest proto.InternalMessageInfo

func (m *Guild_CheatSetBlessStageRequest) GetStage() int64 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *Guild_CheatSetBlessStageRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (*Guild_CheatSetBlessStageRequest) XXX_MessageName() string {
	return "less_service.Guild.CheatSetBlessStageRequest"
}

type Guild_CheatSetBlessStageResponse struct {
}

func (m *Guild_CheatSetBlessStageResponse) Reset()      { *m = Guild_CheatSetBlessStageResponse{} }
func (*Guild_CheatSetBlessStageResponse) ProtoMessage() {}
func (*Guild_CheatSetBlessStageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 69}
}
func (m *Guild_CheatSetBlessStageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_CheatSetBlessStageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_CheatSetBlessStageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_CheatSetBlessStageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_CheatSetBlessStageResponse.Merge(m, src)
}
func (m *Guild_CheatSetBlessStageResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_CheatSetBlessStageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_CheatSetBlessStageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_CheatSetBlessStageResponse proto.InternalMessageInfo

func (*Guild_CheatSetBlessStageResponse) XXX_MessageName() string {
	return "less_service.Guild.CheatSetBlessStageResponse"
}

//----------------------仅GVGGuildServer调用----------------------//
type Guild_UpdateBlessingEfficRequest struct {
	GuildId   string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Effic     int64  `protobuf:"varint,2,opt,name=effic,proto3" json:"effic,omitempty"`
	ExpiredAt int64  `protobuf:"varint,3,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
}

func (m *Guild_UpdateBlessingEfficRequest) Reset()      { *m = Guild_UpdateBlessingEfficRequest{} }
func (*Guild_UpdateBlessingEfficRequest) ProtoMessage() {}
func (*Guild_UpdateBlessingEfficRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 70}
}
func (m *Guild_UpdateBlessingEfficRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_UpdateBlessingEfficRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_UpdateBlessingEfficRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_UpdateBlessingEfficRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_UpdateBlessingEfficRequest.Merge(m, src)
}
func (m *Guild_UpdateBlessingEfficRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_UpdateBlessingEfficRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_UpdateBlessingEfficRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_UpdateBlessingEfficRequest proto.InternalMessageInfo

func (m *Guild_UpdateBlessingEfficRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *Guild_UpdateBlessingEfficRequest) GetEffic() int64 {
	if m != nil {
		return m.Effic
	}
	return 0
}

func (m *Guild_UpdateBlessingEfficRequest) GetExpiredAt() int64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func (*Guild_UpdateBlessingEfficRequest) XXX_MessageName() string {
	return "less_service.Guild.UpdateBlessingEfficRequest"
}

type Guild_UpdateBlessingEfficResponse struct {
}

func (m *Guild_UpdateBlessingEfficResponse) Reset()      { *m = Guild_UpdateBlessingEfficResponse{} }
func (*Guild_UpdateBlessingEfficResponse) ProtoMessage() {}
func (*Guild_UpdateBlessingEfficResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c165c1e3e44d3a3a, []int{0, 71}
}
func (m *Guild_UpdateBlessingEfficResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_UpdateBlessingEfficResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_UpdateBlessingEfficResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_UpdateBlessingEfficResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_UpdateBlessingEfficResponse.Merge(m, src)
}
func (m *Guild_UpdateBlessingEfficResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_UpdateBlessingEfficResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_UpdateBlessingEfficResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_UpdateBlessingEfficResponse proto.InternalMessageInfo

func (*Guild_UpdateBlessingEfficResponse) XXX_MessageName() string {
	return "less_service.Guild.UpdateBlessingEfficResponse"
}
func init() {
	proto.RegisterEnum("less_service.GuildErrorCode", GuildErrorCode_name, GuildErrorCode_value)
	proto.RegisterType((*Guild)(nil), "less_service.Guild")
	proto.RegisterType((*Guild_GuildFindRequest)(nil), "less_service.Guild.GuildFindRequest")
	proto.RegisterType((*Guild_GuildFindResponse)(nil), "less_service.Guild.GuildFindResponse")
	proto.RegisterType((*Guild_GuildJoinNowRequest)(nil), "less_service.Guild.GuildJoinNowRequest")
	proto.RegisterType((*Guild_GuildJoinNowResponse)(nil), "less_service.Guild.GuildJoinNowResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildJoinNowResponse.RewardsEntry")
	proto.RegisterType((*Guild_GuildFindDetailsRequest)(nil), "less_service.Guild.GuildFindDetailsRequest")
	proto.RegisterType((*Guild_GuildFindDetailsResponse)(nil), "less_service.Guild.GuildFindDetailsResponse")
	proto.RegisterType((*Guild_GuildEnterRequest)(nil), "less_service.Guild.GuildEnterRequest")
	proto.RegisterType((*Guild_GuildEnterResponse)(nil), "less_service.Guild.GuildEnterResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildEnterResponse.RewardsEntry")
	proto.RegisterType((*Guild_GuildCreateRequest)(nil), "less_service.Guild.GuildCreateRequest")
	proto.RegisterType((*Guild_GuildCreateResponse)(nil), "less_service.Guild.GuildCreateResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildCreateResponse.RewardsEntry")
	proto.RegisterType((*Guild_GuildDissolveRequest)(nil), "less_service.Guild.GuildDissolveRequest")
	proto.RegisterType((*Guild_GuildDissolveResponse)(nil), "less_service.Guild.GuildDissolveResponse")
	proto.RegisterType((*Guild_GuildModifyRequest)(nil), "less_service.Guild.GuildModifyRequest")
	proto.RegisterType((*Guild_GuildModifyResponse)(nil), "less_service.Guild.GuildModifyResponse")
	proto.RegisterType((*Guild_GuildMembersRequest)(nil), "less_service.Guild.GuildMembersRequest")
	proto.RegisterType((*Guild_GuildMembersResponse)(nil), "less_service.Guild.GuildMembersResponse")
	proto.RegisterType((*Guild_GuildInviteListRequest)(nil), "less_service.Guild.GuildInviteListRequest")
	proto.RegisterType((*Guild_GuildInviteListResponse)(nil), "less_service.Guild.GuildInviteListResponse")
	proto.RegisterType((*Guild_GuildHandleInviteRequest)(nil), "less_service.Guild.GuildHandleInviteRequest")
	proto.RegisterType((*Guild_GuildHandleInviteResponse)(nil), "less_service.Guild.GuildHandleInviteResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildHandleInviteResponse.RewardsEntry")
	proto.RegisterType((*Guild_GuildJoinApplyRequest)(nil), "less_service.Guild.GuildJoinApplyRequest")
	proto.RegisterType((*Guild_GuildJoinApplyResponse)(nil), "less_service.Guild.GuildJoinApplyResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildJoinApplyResponse.RewardsEntry")
	proto.RegisterType((*Guild_GuildCancelApplyRequest)(nil), "less_service.Guild.GuildCancelApplyRequest")
	proto.RegisterType((*Guild_GuildCancelApplyResponse)(nil), "less_service.Guild.GuildCancelApplyResponse")
	proto.RegisterType((*Guild_GuildApplyListRequest)(nil), "less_service.Guild.GuildApplyListRequest")
	proto.RegisterType((*Guild_GuildApplyListResponse)(nil), "less_service.Guild.GuildApplyListResponse")
	proto.RegisterType((*Guild_GuildHandleApplyRequest)(nil), "less_service.Guild.GuildHandleApplyRequest")
	proto.RegisterType((*Guild_GuildHandleApplyResponse)(nil), "less_service.Guild.GuildHandleApplyResponse")
	proto.RegisterType((*Guild_GuildApplyRejectAllRequest)(nil), "less_service.Guild.GuildApplyRejectAllRequest")
	proto.RegisterType((*Guild_GuildApplyRejectAllResponse)(nil), "less_service.Guild.GuildApplyRejectAllResponse")
	proto.RegisterType((*Guild_GuildRemoveRequest)(nil), "less_service.Guild.GuildRemoveRequest")
	proto.RegisterType((*Guild_GuildRemoveResponse)(nil), "less_service.Guild.GuildRemoveResponse")
	proto.RegisterType((*Guild_GuildExitRequest)(nil), "less_service.Guild.GuildExitRequest")
	proto.RegisterType((*Guild_GuildExitResponse)(nil), "less_service.Guild.GuildExitResponse")
	proto.RegisterType((*Guild_GuildPositionChangeRequest)(nil), "less_service.Guild.GuildPositionChangeRequest")
	proto.RegisterType((*Guild_GuildPositionChangeResponse)(nil), "less_service.Guild.GuildPositionChangeResponse")
	proto.RegisterType((*Guild_GuildGuildInfoRequest)(nil), "less_service.Guild.GuildGuildInfoRequest")
	proto.RegisterType((*Guild_GuildGuildInfoResponse)(nil), "less_service.Guild.GuildGuildInfoResponse")
	proto.RegisterType((*Guild_GuildModifyPositionNameRequest)(nil), "less_service.Guild.GuildModifyPositionNameRequest")
	proto.RegisterMapType((map[int64]string)(nil), "less_service.Guild.GuildModifyPositionNameRequest.NameEntry")
	proto.RegisterType((*Guild_GuildModifyPositionNameResponse)(nil), "less_service.Guild.GuildModifyPositionNameResponse")
	proto.RegisterType((*Guild_GuildBuildInfoRequest)(nil), "less_service.Guild.GuildBuildInfoRequest")
	proto.RegisterType((*Guild_GuildBuildInfoResponse)(nil), "less_service.Guild.GuildBuildInfoResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildBuildInfoResponse.PayCostEntry")
	proto.RegisterType((*Guild_GuildBuildRequest)(nil), "less_service.Guild.GuildBuildRequest")
	proto.RegisterType((*Guild_GuildBuildResponse)(nil), "less_service.Guild.GuildBuildResponse")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildBuildResponse.PayCostEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "less_service.Guild.GuildBuildResponse.RewardsEntry")
	proto.RegisterType((*Guild_GuildWorldInviteRequest)(nil), "less_service.Guild.GuildWorldInviteRequest")
	proto.RegisterType((*Guild_GuildWorldInviteResponse)(nil), "less_service.Guild.GuildWorldInviteResponse")
	proto.RegisterType((*Guild_GuildPrivateInviteRequest)(nil), "less_service.Guild.GuildPrivateInviteRequest")
	proto.RegisterType((*Guild_GuildPrivateInviteResponse)(nil), "less_service.Guild.GuildPrivateInviteResponse")
	proto.RegisterType((*Guild_GuildRankRequest)(nil), "less_service.Guild.GuildRankRequest")
	proto.RegisterType((*Guild_GuildRankResponse)(nil), "less_service.Guild.GuildRankResponse")
	proto.RegisterMapType((map[int64]*models.Guild)(nil), "less_service.Guild.GuildRankResponse.DataEntry")
	proto.RegisterType((*Guild_GuildNameExistRequest)(nil), "less_service.Guild.GuildNameExistRequest")
	proto.RegisterType((*Guild_GuildNameExistResponse)(nil), "less_service.Guild.GuildNameExistResponse")
	proto.RegisterType((*Guild_BlessingInfoRequest)(nil), "less_service.Guild.BlessingInfoRequest")
	proto.RegisterType((*Guild_BlessingInfoResponse)(nil), "less_service.Guild.BlessingInfoResponse")
	proto.RegisterType((*Guild_BlessingStartRequest)(nil), "less_service.Guild.BlessingStartRequest")
	proto.RegisterType((*Guild_BlessingStartResponse)(nil), "less_service.Guild.BlessingStartResponse")
	proto.RegisterType((*Guild_BlessingActivateRequest)(nil), "less_service.Guild.BlessingActivateRequest")
	proto.RegisterType((*Guild_BlessingActivateResponse)(nil), "less_service.Guild.BlessingActivateResponse")
	proto.RegisterType((*Guild_BlessingNextStageRequest)(nil), "less_service.Guild.BlessingNextStageRequest")
	proto.RegisterType((*Guild_BlessingNextStageResponse)(nil), "less_service.Guild.BlessingNextStageResponse")
	proto.RegisterType((*Guild_GuildExpChange)(nil), "less_service.Guild.GuildExpChange")
	proto.RegisterType((*Guild_UserGuildInfoChange)(nil), "less_service.Guild.UserGuildInfoChange")
	proto.RegisterType((*Guild_CheatGuildResetBuildRequest)(nil), "less_service.Guild.CheatGuildResetBuildRequest")
	proto.RegisterType((*Guild_CheatGuildResetBuildResponse)(nil), "less_service.Guild.CheatGuildResetBuildResponse")
	proto.RegisterType((*Guild_CheatGuildAddExpRequest)(nil), "less_service.Guild.CheatGuildAddExpRequest")
	proto.RegisterType((*Guild_CheatGuildAddExpResponse)(nil), "less_service.Guild.CheatGuildAddExpResponse")
	proto.RegisterType((*Guild_CheatRestExitGuildCDRequest)(nil), "less_service.Guild.CheatRestExitGuildCDRequest")
	proto.RegisterType((*Guild_CheatRestExitGuildCDResponse)(nil), "less_service.Guild.CheatRestExitGuildCDResponse")
	proto.RegisterType((*Guild_CheatSetBlessStageRequest)(nil), "less_service.Guild.CheatSetBlessStageRequest")
	proto.RegisterType((*Guild_CheatSetBlessStageResponse)(nil), "less_service.Guild.CheatSetBlessStageResponse")
	proto.RegisterType((*Guild_UpdateBlessingEfficRequest)(nil), "less_service.Guild.UpdateBlessingEfficRequest")
	proto.RegisterType((*Guild_UpdateBlessingEfficResponse)(nil), "less_service.Guild.UpdateBlessingEfficResponse")
}

func init() { proto.RegisterFile("proto/less-service/guild.proto", fileDescriptor_c165c1e3e44d3a3a) }

var fileDescriptor_c165c1e3e44d3a3a = []byte{
	// 2992 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x5b, 0x70, 0x14, 0x55,
	0xde, 0x67, 0x72, 0x21, 0x99, 0x43, 0xc4, 0xe6, 0x24, 0x21, 0x9d, 0x0e, 0x8c, 0x41, 0x54, 0x50,
	0x34, 0x51, 0x44, 0xc0, 0x28, 0xf5, 0x7d, 0xb9, 0xa1, 0xb1, 0x42, 0xc4, 0x89, 0xee, 0x56, 0xf9,
	0xb0, 0xa9, 0x4e, 0xfa, 0x64, 0x68, 0xe9, 0xe9, 0x1e, 0xbb, 0x7b, 0x62, 0x52, 0xfb, 0x12, 0xc4,
	0x14, 0x61, 0x34, 0x82, 0xe5, 0xb2, 0x20, 0x1b, 0x4b, 0xd8, 0x95, 0x05, 0x95, 0x8b, 0x85, 0x15,
	0x93, 0x02, 0x21, 0x2f, 0x5b, 0x5b, 0xd6, 0xd6, 0x3e, 0xf8, 0xb6, 0x3e, 0xee, 0x86, 0x4c, 0xcf,
	0xe4, 0x6d, 0x6b, 0x9f, 0xf6, 0x71, 0xeb, 0xdc, 0xba, 0x4f, 0xcf, 0x05, 0xe2, 0x5a, 0x5a, 0xfb,
	0x44, 0x9f, 0x73, 0xfe, 0xd7, 0xdf, 0xff, 0x76, 0xce, 0x10, 0x10, 0x4b, 0xd9, 0x96, 0x6b, 0xb5,
	0x1b, 0xc8, 0x71, 0x9e, 0x70, 0x90, 0x3d, 0xa6, 0x8f, 0xa0, 0xf6, 0x44, 0x5a, 0x37, 0xb4, 0x36,
	0x72, 0x00, 0xeb, 0xf0, 0xc9, 0x10, 0x3b, 0x51, 0x64, 0x4a, 0x9d, 0xb4, 0x34, 0x64, 0x38, 0x22,
	0x9d, 0xd2, 0x14, 0x3a, 0x19, 0x56, 0x1d, 0x44, 0x0f, 0x1e, 0xfc, 0x5b, 0x3b, 0xa8, 0x7e, 0x01,
	0x13, 0x2a, 0xe3, 0x40, 0x22, 0x1f, 0xfb, 0x75, 0x53, 0x8b, 0xa3, 0x37, 0xd3, 0xc8, 0x71, 0x21,
	0x04, 0x55, 0xa6, 0x9a, 0x44, 0x72, 0xa4, 0x35, 0xb2, 0x3d, 0x1a, 0x27, 0xdf, 0x78, 0xcf, 0x50,
	0xcd, 0x84, 0x5c, 0xd1, 0x1a, 0xd9, 0x5e, 0x19, 0x27, 0xdf, 0xb0, 0x19, 0xd4, 0x9a, 0xd6, 0x90,
	0x9a, 0xd6, 0x74, 0x57, 0xae, 0x6c, 0x8d, 0x6c, 0xaf, 0x8d, 0xd7, 0x98, 0x56, 0x27, 0x5e, 0xc2,
	0x2d, 0xa0, 0x6e, 0xc4, 0x4a, 0x0e, 0xab, 0xee, 0xd0, 0x98, 0x6a, 0xa4, 0x91, 0x5c, 0x45, 0xd8,
	0xd6, 0xd1, 0xbd, 0x5f, 0xe0, 0x2d, 0x65, 0x37, 0xd8, 0x20, 0x68, 0x76, 0x52, 0x96, 0xe9, 0x20,
	0xb8, 0x05, 0x54, 0x19, 0xba, 0xe3, 0xca, 0x91, 0xd6, 0xca, 0xed, 0xeb, 0x76, 0xde, 0xd7, 0x46,
	0x4d, 0x6f, 0x23, 0x84, 0x71, 0x72, 0xa4, 0xf4, 0x83, 0x7a, 0xb2, 0x7c, 0xc9, 0xd2, 0xcd, 0x01,
	0xeb, 0x2d, 0xc1, 0x68, 0x62, 0x60, 0x44, 0x30, 0xb0, 0xd0, 0x8a, 0x8a, 0x62, 0x2b, 0xfe, 0x1c,
	0x01, 0x0d, 0x61, 0x71, 0x81, 0x25, 0xba, 0x39, 0x6a, 0x11, 0x79, 0xc5, 0x96, 0xe0, 0x23, 0xf8,
	0x32, 0xa8, 0xb1, 0xd1, 0x5b, 0xaa, 0xad, 0x39, 0x72, 0x05, 0xb1, 0xf7, 0x99, 0x36, 0x31, 0x30,
	0x94, 0xb6, 0xad, 0x94, 0xf4, 0xb6, 0x38, 0xe5, 0xeb, 0x35, 0x5d, 0x7b, 0x22, 0xce, 0xa5, 0x28,
	0x1d, 0xa0, 0x4e, 0x3c, 0x80, 0x12, 0xa8, 0x3c, 0x8c, 0x26, 0x98, 0x4b, 0xf8, 0x13, 0x36, 0x80,
	0x6a, 0xd1, 0x15, 0xba, 0xe8, 0xa8, 0xd8, 0x1b, 0x51, 0x1e, 0x05, 0x4d, 0x3e, 0x9c, 0x3d, 0xc8,
	0x55, 0x75, 0xc3, 0xe1, 0xd0, 0xac, 0x07, 0x15, 0xba, 0x46, 0x20, 0x8d, 0xc6, 0x2b, 0x74, 0x4d,
	0xd9, 0x07, 0xe4, 0x62, 0xd2, 0xd5, 0x07, 0xa0, 0x95, 0x05, 0xae, 0xd7, 0x74, 0x91, 0xcd, 0x74,
	0x74, 0xac, 0x7b, 0x7b, 0x4e, 0xae, 0x01, 0xd5, 0x24, 0xfb, 0x94, 0x4c, 0x05, 0x80, 0x22, 0xc9,
	0xea, 0x21, 0x3d, 0x50, 0x08, 0xe9, 0xd3, 0x65, 0x21, 0x0d, 0xc9, 0x2e, 0x0d, 0x28, 0xdc, 0x0a,
	0xee, 0x33, 0x54, 0xc7, 0x1d, 0x4a, 0x59, 0x8e, 0xee, 0xea, 0x96, 0x49, 0xd2, 0xb4, 0x32, 0x5e,
	0x87, 0x37, 0x0f, 0xb2, 0x3d, 0x92, 0x25, 0x69, 0x3b, 0xa0, 0xe1, 0xb9, 0x9a, 0xb6, 0x39, 0xc9,
	0x8f, 0x0a, 0xcc, 0xa5, 0x08, 0x03, 0xa3, 0xdb, 0x46, 0xaa, 0x8b, 0xee, 0x51, 0x64, 0xa3, 0x86,
	0xea, 0x17, 0x19, 0xfe, 0xf6, 0xf3, 0xba, 0x52, 0xc8, 0xeb, 0x06, 0x50, 0xad, 0x9b, 0xae, 0x6d,
	0x11, 0x53, 0xa3, 0x71, 0xba, 0x80, 0x1b, 0xc1, 0x5a, 0xd3, 0x72, 0xf5, 0x11, 0x24, 0x57, 0x93,
	0x6d, 0xb6, 0x82, 0x2d, 0x20, 0xaa, 0xa6, 0x5d, 0x6b, 0xe8, 0x0d, 0x4b, 0x37, 0xe5, 0xb5, 0xa4,
	0x4e, 0x6b, 0xf1, 0x06, 0xce, 0xc9, 0x70, 0xdc, 0xfe, 0x14, 0x61, 0xb5, 0xc5, 0x4d, 0x5d, 0x7d,
	0xe0, 0x06, 0x0a, 0x03, 0xb7, 0xab, 0x6c, 0xe0, 0xc2, 0xc2, 0x7f, 0x82, 0x52, 0xd8, 0xca, 0x4a,
	0xba, 0x47, 0x77, 0x1c, 0xcb, 0x18, 0x43, 0x25, 0x73, 0xb4, 0x09, 0x34, 0x16, 0x10, 0x51, 0x7b,
	0x94, 0x7f, 0xf1, 0x78, 0x1d, 0xb0, 0x34, 0x7d, 0x74, 0xe2, 0x7f, 0x20, 0x5e, 0x95, 0x41, 0xbc,
	0xa0, 0x02, 0x6a, 0x13, 0x36, 0x42, 0xae, 0x6e, 0x26, 0xe4, 0x5a, 0xc2, 0xe6, 0xaf, 0xe1, 0xe3,
	0x00, 0x8a, 0xed, 0x6e, 0xc8, 0xd0, 0x93, 0xba, 0x2b, 0x47, 0x89, 0x04, 0x49, 0x68, 0x7a, 0xfd,
	0x78, 0x3f, 0x8c, 0xc6, 0x5e, 0x16, 0x78, 0xee, 0xf3, 0xaa, 0x03, 0xaf, 0xec, 0xe3, 0x9c, 0x28,
	0x39, 0x8c, 0x6c, 0xbf, 0xe7, 0x34, 0x83, 0x5a, 0x22, 0x79, 0x88, 0x74, 0x1e, 0x6c, 0x67, 0x0d,
	0x59, 0xf7, 0x69, 0x61, 0xc5, 0xbd, 0x2c, 0x56, 0x3e, 0x3b, 0xd3, 0xfc, 0x04, 0xa8, 0x49, 0xd2,
	0x2d, 0xd6, 0x8a, 0xea, 0x43, 0xca, 0x29, 0x79, 0x9c, 0xd3, 0x28, 0x47, 0x22, 0x60, 0x23, 0x39,
	0xe8, 0x33, 0xc7, 0x74, 0x17, 0xf5, 0xeb, 0x8e, 0x7b, 0xb7, 0xc1, 0x50, 0x1a, 0xa9, 0x8a, 0xd2,
	0x48, 0x41, 0x19, 0xe7, 0xf6, 0xa8, 0x8d, 0x9c, 0x43, 0x7c, 0xcc, 0xb1, 0x65, 0xd8, 0x95, 0x2e,
	0xd6, 0x81, 0x45, 0x13, 0x98, 0x37, 0xdb, 0x42, 0x5d, 0x35, 0xec, 0x0a, 0x25, 0x67, 0xbd, 0x75,
	0x90, 0xb5, 0xe6, 0x17, 0x55, 0x53, 0x33, 0x10, 0x3b, 0x62, 0x8e, 0x34, 0x80, 0x6a, 0xd7, 0x3a,
	0x8c, 0x4c, 0x86, 0x27, 0x5d, 0xe0, 0x5d, 0x15, 0x67, 0x00, 0xb1, 0xbe, 0x36, 0x4e, 0x17, 0x61,
	0xc3, 0xbe, 0x8b, 0x80, 0xe6, 0x12, 0x52, 0x57, 0x5f, 0xdc, 0xaf, 0x16, 0x16, 0x77, 0x47, 0xd9,
	0xe2, 0x2e, 0xa5, 0xe2, 0x27, 0x28, 0xf1, 0x5d, 0xac, 0x7a, 0x71, 0x4d, 0x74, 0xa6, 0x52, 0xc6,
	0x44, 0x99, 0x59, 0x17, 0x06, 0xe2, 0x2f, 0x3c, 0x4b, 0x04, 0xb6, 0xd5, 0xa3, 0xf0, 0x4a, 0x21,
	0x0a, 0x7b, 0xee, 0x3a, 0xee, 0x43, 0xf2, 0x7f, 0x02, 0x08, 0x76, 0xb3, 0x74, 0xeb, 0x56, 0xcd,
	0x11, 0x64, 0x94, 0x04, 0x21, 0x52, 0x0a, 0x04, 0x85, 0xa5, 0x58, 0x88, 0x8f, 0xf5, 0xbe, 0x87,
	0x18, 0xac, 0x64, 0x57, 0x28, 0xa2, 0xb0, 0x84, 0xff, 0x67, 0x28, 0x0a, 0x54, 0x0c, 0xc5, 0x47,
	0x42, 0x79, 0x0e, 0x43, 0x28, 0x52, 0x4d, 0x34, 0xcd, 0x5f, 0x63, 0xb6, 0xd3, 0x6c, 0x09, 0xd9,
	0xde, 0x04, 0x6a, 0x6c, 0xcb, 0x40, 0x41, 0xdf, 0x58, 0x8b, 0x97, 0x7d, 0xda, 0x6a, 0x12, 0x5d,
	0x09, 0x55, 0x4f, 0xd8, 0xb5, 0x47, 0x81, 0x22, 0x98, 0x81, 0xde, 0x40, 0x23, 0x6e, 0xa7, 0x61,
	0x94, 0xf4, 0x6f, 0x33, 0x68, 0x29, 0x49, 0xca, 0x24, 0x75, 0xb0, 0xf9, 0x10, 0x47, 0x49, 0xcb,
	0x1f, 0x2e, 0x65, 0xed, 0x2e, 0xdd, 0x67, 0x39, 0xef, 0xea, 0xfb, 0xec, 0x03, 0xec, 0xa2, 0xde,
	0x3b, 0xae, 0x97, 0x8e, 0x4a, 0x3d, 0xbf, 0x96, 0x11, 0x02, 0x66, 0xeb, 0xaf, 0x98, 0xd7, 0xfc,
	0x26, 0xd3, 0x7d, 0x48, 0x35, 0x13, 0xf7, 0xb4, 0x19, 0x4f, 0x19, 0xff, 0x3a, 0x44, 0x13, 0xcf,
	0x5f, 0x97, 0x86, 0xaa, 0x50, 0x3e, 0x53, 0xbf, 0x8f, 0xe5, 0x13, 0x6b, 0x74, 0xa3, 0xd6, 0x0f,
	0x43, 0xeb, 0x79, 0x96, 0x68, 0x02, 0x3b, 0x03, 0xac, 0x20, 0xc3, 0xfd, 0xe9, 0x5c, 0x11, 0x4c,
	0x67, 0x65, 0x21, 0x02, 0x62, 0xc2, 0x50, 0xe3, 0x26, 0x0e, 0xa8, 0x49, 0x1f, 0x80, 0x83, 0xfe,
	0x50, 0xc7, 0xf9, 0xfa, 0x7c, 0xd9, 0x7a, 0x2e, 0x2b, 0xa1, 0x0d, 0x7f, 0xd3, 0xa2, 0xa6, 0x4a,
	0xf7, 0x80, 0xa8, 0xbf, 0x75, 0xaf, 0x72, 0x8e, 0x0a, 0xe5, 0x1c, 0x76, 0x7c, 0x0b, 0x78, 0xa0,
	0xac, 0x5e, 0x06, 0x2d, 0xbf, 0xbf, 0x74, 0x15, 0x40, 0xab, 0x1c, 0xad, 0x60, 0xa8, 0x75, 0x15,
	0xa1, 0xb6, 0x19, 0x80, 0x51, 0x1b, 0xa1, 0xa1, 0x11, 0x2b, 0x6d, 0xba, 0xcc, 0xac, 0x28, 0xde,
	0xe9, 0xc6, 0x1b, 0xf8, 0xe2, 0x91, 0x52, 0x27, 0xd8, 0x29, 0x0f, 0xbb, 0x3a, 0x41, 0x0f, 0xe3,
	0xa0, 0x96, 0x1e, 0x3a, 0xf8, 0xb1, 0x77, 0xf7, 0xf6, 0x57, 0xa4, 0xb9, 0xed, 0x20, 0x16, 0xe3,
	0xb8, 0xac, 0xfd, 0xa5, 0xe8, 0x0a, 0xdb, 0x63, 0x23, 0x07, 0xb9, 0x43, 0xae, 0x9e, 0xe4, 0x6f,
	0xc4, 0x28, 0xd9, 0x79, 0x55, 0x4f, 0xe2, 0x42, 0xab, 0x13, 0xf9, 0x7e, 0x50, 0x77, 0xdc, 0xc6,
	0xaa, 0xa1, 0x8b, 0x56, 0x9b, 0x7f, 0x15, 0xc0, 0xde, 0x12, 0x09, 0xb5, 0x71, 0xf2, 0xad, 0xfc,
	0xb5, 0x92, 0x95, 0x33, 0xa3, 0x64, 0x50, 0x35, 0x80, 0x6a, 0x03, 0x8d, 0x21, 0x83, 0x69, 0xa3,
	0x0b, 0x6c, 0x01, 0x1a, 0x4f, 0x31, 0x6d, 0xf8, 0x53, 0x7c, 0xb0, 0x54, 0xde, 0xe3, 0xc1, 0x12,
	0x52, 0x50, 0xe6, 0xc1, 0xb2, 0x09, 0x44, 0x9d, 0xb4, 0x9d, 0xb2, 0x75, 0x07, 0x69, 0x1c, 0x10,
	0x7f, 0xa3, 0x20, 0x7e, 0xd5, 0x77, 0x8d, 0xdf, 0xda, 0x82, 0xf8, 0x0d, 0x08, 0xf1, 0xab, 0xf9,
	0x41, 0x96, 0xae, 0x26, 0x76, 0xb5, 0x25, 0x62, 0xf7, 0x5f, 0x4f, 0xb6, 0x1f, 0x13, 0xf7, 0x41,
	0x36, 0x59, 0x7e, 0x69, 0xd9, 0xfe, 0xd5, 0xaa, 0x7c, 0xf4, 0xb1, 0xe8, 0xa4, 0x93, 0x60, 0xd5,
	0x88, 0x3f, 0x31, 0x95, 0xa3, 0x8e, 0x21, 0x76, 0xd3, 0x23, 0xdf, 0xfe, 0x5c, 0x09, 0x09, 0x65,
	0x75, 0xf8, 0x3a, 0xbb, 0x5b, 0x1d, 0xb4, 0xf5, 0x31, 0xd5, 0x2d, 0xb8, 0xb2, 0x95, 0x6d, 0xb0,
	0xab, 0xd3, 0xbb, 0x89, 0x77, 0xef, 0xb0, 0x6c, 0x7f, 0x0e, 0xd1, 0x89, 0x10, 0x57, 0xcd, 0xc3,
	0xc2, 0x1d, 0xd1, 0x71, 0x55, 0x9b, 0x17, 0x37, 0x5d, 0x90, 0xb4, 0x35, 0x35, 0x3f, 0x6d, 0x4d,
	0x4d, 0xf9, 0x77, 0x84, 0xd5, 0x07, 0x65, 0x0e, 0xc6, 0x90, 0x83, 0x8c, 0xd1, 0x32, 0x63, 0x08,
	0x1f, 0xe1, 0x1c, 0xc3, 0xff, 0x0e, 0xd9, 0xaa, 0x79, 0x98, 0xf7, 0x08, 0xbc, 0x81, 0xe5, 0xc0,
	0x6e, 0x50, 0xa5, 0xa9, 0xae, 0xca, 0x2a, 0xa1, 0xbd, 0x6c, 0x7e, 0x89, 0x4a, 0xdb, 0x7a, 0x54,
	0x57, 0x65, 0x1d, 0x14, 0x33, 0xe3, 0x67, 0x11, 0x32, 0x35, 0xfc, 0xbe, 0xa9, 0x22, 0x50, 0xb0,
	0x95, 0xb2, 0x1f, 0x44, 0x7d, 0xd2, 0x12, 0x29, 0xb1, 0x55, 0x4c, 0x89, 0x22, 0xe3, 0x85, 0x0c,
	0xd9, 0xc1, 0x1a, 0x27, 0x69, 0xd3, 0xe3, 0xe1, 0x87, 0x42, 0xe1, 0x0b, 0x4f, 0x69, 0x63, 0xbd,
	0x54, 0x20, 0x0e, 0x1a, 0x04, 0x1a, 0xa7, 0x77, 0x1d, 0x72, 0x1d, 0x21, 0x0b, 0xa5, 0x11, 0xd4,
	0x77, 0x61, 0xaf, 0x75, 0x33, 0x21, 0xf6, 0xe4, 0x99, 0x08, 0x68, 0x08, 0xef, 0x07, 0x52, 0x1c,
	0x57, 0x4d, 0x20, 0x21, 0x5e, 0x09, 0x04, 0x77, 0x80, 0xea, 0x37, 0xd3, 0x88, 0xf8, 0x82, 0x81,
	0x6c, 0xe4, 0xbe, 0x70, 0x11, 0xaf, 0xe0, 0xc3, 0x38, 0xa5, 0xc1, 0x2d, 0x43, 0x1d, 0x71, 0x49,
	0x82, 0x68, 0x04, 0xf9, 0xca, 0x78, 0xb0, 0x41, 0xcc, 0x1c, 0x1d, 0xd5, 0x47, 0x58, 0x33, 0xa1,
	0x0b, 0xe5, 0xa9, 0xc0, 0x9c, 0x41, 0x9c, 0x21, 0xc2, 0xab, 0x6d, 0x98, 0x04, 0x8d, 0x25, 0x6c,
	0x65, 0xbc, 0x86, 0xac, 0xfb, 0x34, 0x65, 0x1c, 0x34, 0x16, 0xb0, 0xfc, 0x4c, 0x2e, 0x28, 0xbb,
	0x40, 0x13, 0xe7, 0xea, 0x64, 0x9b, 0xab, 0xb0, 0xf7, 0xd7, 0x40, 0x2e, 0xe6, 0xfa, 0xb9, 0x4c,
	0x56, 0x02, 0xe5, 0x03, 0x68, 0xdc, 0x1d, 0xc4, 0xf2, 0x79, 0x2e, 0xb4, 0x80, 0xe6, 0x12, 0x67,
	0xac, 0xa6, 0xf7, 0x82, 0xf5, 0xec, 0x12, 0x97, 0xa2, 0x57, 0xa9, 0xd5, 0x0e, 0x22, 0xa5, 0x1f,
	0xd4, 0xbf, 0xe6, 0x20, 0xdb, 0xbf, 0x2a, 0x31, 0xf6, 0xf2, 0xef, 0xf0, 0xbb, 0x5d, 0xf2, 0xf0,
	0xbd, 0xae, 0xfb, 0x10, 0x52, 0x5d, 0x76, 0x59, 0x75, 0x90, 0x2b, 0x0e, 0x52, 0x25, 0x06, 0x36,
	0x95, 0x3e, 0x66, 0x6e, 0xec, 0x00, 0x4d, 0xc1, 0x79, 0xa7, 0x86, 0xdd, 0xe1, 0x21, 0x63, 0x96,
	0x47, 0x02, 0xcb, 0x15, 0x20, 0x17, 0x13, 0x33, 0x41, 0xdc, 0x8e, 0x38, 0x72, 0x5c, 0x7c, 0xb1,
	0xa5, 0x2f, 0x97, 0x9e, 0x42, 0x3b, 0x8a, 0x8e, 0x19, 0x7b, 0x2f, 0x68, 0x26, 0xe7, 0x83, 0xc8,
	0x25, 0x98, 0x8b, 0x81, 0x28, 0x93, 0x05, 0x10, 0x54, 0xa5, 0xf0, 0x26, 0xfb, 0x4d, 0x07, 0x7f,
	0xe3, 0x3e, 0x5c, 0x4a, 0x0c, 0x53, 0x62, 0x00, 0xe5, 0xb5, 0x94, 0xa6, 0xba, 0x88, 0x87, 0xb5,
	0x17, 0xd7, 0xd8, 0xbd, 0x7f, 0x08, 0x09, 0x6a, 0xb3, 0x42, 0xa8, 0x4d, 0x3c, 0x58, 0xd1, 0x78,
	0x4a, 0xb7, 0x91, 0x36, 0xa4, 0xba, 0xec, 0x67, 0xa4, 0x28, 0xdb, 0xe9, 0x74, 0x31, 0x22, 0x25,
	0xb5, 0x51, 0x63, 0x1e, 0x3b, 0xda, 0xc0, 0x33, 0xc8, 0xb6, 0x2d, 0xbb, 0xdb, 0xd2, 0x10, 0xdc,
	0x06, 0xee, 0xef, 0xb5, 0x69, 0x62, 0x0c, 0x58, 0xe4, 0x1f, 0x69, 0x8d, 0x02, 0x33, 0x73, 0xf2,
	0x7a, 0x58, 0xe7, 0x5d, 0x3f, 0xef, 0xcd, 0x1e, 0xcf, 0x4e, 0x5d, 0x5e, 0xfe, 0xe6, 0x2c, 0xdc,
	0x09, 0x36, 0xf8, 0x84, 0xbc, 0xdf, 0x49, 0x55, 0x4a, 0x4b, 0x66, 0x4e, 0x6e, 0x82, 0x8d, 0x94,
	0x28, 0x7b, 0x72, 0x26, 0x77, 0xf1, 0xcb, 0xec, 0xfc, 0xf5, 0xec, 0x95, 0x33, 0xd9, 0xd9, 0x4b,
	0xf0, 0x29, 0x50, 0x2f, 0xf2, 0xbc, 0x6a, 0x59, 0xfd, 0x96, 0x99, 0x90, 0x22, 0x8a, 0x9c, 0x99,
	0x93, 0x1b, 0x20, 0x14, 0xb9, 0xf2, 0x8b, 0xc7, 0x56, 0x4e, 0x2d, 0xc2, 0x9d, 0xa0, 0x81, 0xb3,
	0xf4, 0x99, 0xae, 0x6d, 0x71, 0x9e, 0x8a, 0x30, 0x4f, 0xee, 0xea, 0xe4, 0xf2, 0xcd, 0x77, 0x19,
	0xcf, 0xd3, 0xa0, 0x31, 0xf0, 0xc1, 0xd5, 0x47, 0x7c, 0x45, 0x95, 0x05, 0x8a, 0xa6, 0x2e, 0x67,
	0x3f, 0xc8, 0x30, 0xa6, 0x67, 0x05, 0x26, 0x35, 0x89, 0x06, 0x91, 0x89, 0xb3, 0x7b, 0x0c, 0x49,
	0xd5, 0x4a, 0x2c, 0x33, 0x27, 0x2b, 0x50, 0x0e, 0xf9, 0x74, 0xf2, 0x0b, 0xef, 0xd4, 0x09, 0xef,
	0x9d, 0x4f, 0xf2, 0xd7, 0x66, 0x60, 0x07, 0xd8, 0x18, 0xb2, 0x31, 0xe0, 0x5d, 0x1b, 0xe6, 0xa5,
	0x56, 0x86, 0x78, 0x9f, 0x03, 0x4d, 0x61, 0x5b, 0x03, 0xe6, 0x9a, 0x02, 0xc5, 0xc4, 0xda, 0x10,
	0xf3, 0x0e, 0x20, 0x09, 0xcc, 0x34, 0x04, 0xb5, 0x4a, 0x63, 0x66, 0x4e, 0xde, 0x00, 0xef, 0xa7,
	0x5c, 0xcb, 0x0b, 0x33, 0x0c, 0xfc, 0xbd, 0x40, 0xe1, 0xc4, 0xb8, 0xf6, 0xfb, 0x71, 0x6b, 0xc0,
	0x5c, 0xa6, 0x95, 0x4e, 0x1c, 0x92, 0xa2, 0x1c, 0x9a, 0xdc, 0xfb, 0x9f, 0x65, 0xaf, 0x7e, 0x9d,
	0xbb, 0x72, 0x3c, 0x77, 0xe3, 0xe2, 0xf2, 0xc2, 0x4c, 0xfe, 0xeb, 0xaf, 0x60, 0x7b, 0x10, 0xea,
	0x17, 0x55, 0xe7, 0x25, 0x4b, 0x37, 0x91, 0x26, 0x01, 0x1f, 0xcb, 0xf9, 0xeb, 0xb9, 0x9b, 0x27,
	0xb2, 0x99, 0x73, 0xd9, 0xa9, 0x0b, 0x2c, 0x37, 0x76, 0x03, 0xc8, 0x19, 0x5e, 0x36, 0x8d, 0x89,
	0x7e, 0xa4, 0x6a, 0xc8, 0x96, 0xd6, 0xf9, 0xfe, 0x9c, 0xf8, 0xdc, 0x9b, 0x3d, 0xbe, 0xfc, 0xcd,
	0xd9, 0x95, 0x53, 0x8b, 0xde, 0xf1, 0x99, 0xfc, 0xd1, 0x5b, 0xde, 0x87, 0x33, 0xcb, 0xb7, 0x66,
	0xe1, 0x3e, 0xd0, 0xcc, 0xf9, 0xe8, 0x9b, 0x97, 0xfe, 0x72, 0xb7, 0x5f, 0xb7, 0x1d, 0x57, 0xaa,
	0xe3, 0xec, 0xf9, 0x6b, 0xf3, 0xd9, 0xa9, 0xe9, 0xdc, 0xc5, 0x9b, 0x2b, 0x1f, 0x7d, 0xea, 0x1d,
	0x9f, 0xf4, 0x66, 0x8f, 0x7b, 0xd3, 0x27, 0xb3, 0x1f, 0x9c, 0x81, 0xff, 0x07, 0x5a, 0x38, 0x7b,
	0xb7, 0x81, 0x54, 0xdb, 0xff, 0xc9, 0x81, 0x0a, 0xb8, 0x2f, 0x2c, 0xc0, 0x5b, 0x98, 0xca, 0x7d,
	0x76, 0x23, 0xf7, 0x9b, 0xaf, 0xf0, 0x72, 0xfa, 0x74, 0xfe, 0xfc, 0x25, 0xf8, 0x24, 0x90, 0xb9,
	0x80, 0x83, 0xc8, 0x4e, 0xea, 0x8e, 0xa3, 0x5b, 0x66, 0x0f, 0x32, 0x75, 0xa4, 0x49, 0xeb, 0xfd,
	0x2a, 0xf8, 0xf8, 0xe8, 0xca, 0x47, 0x27, 0x19, 0x34, 0xbb, 0xc4, 0xd0, 0xf3, 0x5f, 0xf2, 0xf6,
	0xa7, 0x0d, 0x43, 0xba, 0x9f, 0xe3, 0xb3, 0xf2, 0xf6, 0xa4, 0xaf, 0x21, 0x3b, 0x7f, 0xdd, 0xbb,
	0x79, 0x1e, 0x3e, 0x55, 0xc8, 0xe5, 0x47, 0x4f, 0xe2, 0xd1, 0xa3, 0x5c, 0x41, 0xf4, 0x1e, 0x0b,
	0x20, 0x65, 0xa0, 0x60, 0x25, 0x1b, 0xb8, 0x51, 0x2c, 0x45, 0xa8, 0xf8, 0x1d, 0x60, 0x3d, 0xa7,
	0xc5, 0xc1, 0xea, 0xee, 0x91, 0xa0, 0xd2, 0x94, 0x99, 0x93, 0xeb, 0xe1, 0x06, 0x31, 0x4c, 0xdd,
	0x3d, 0xcb, 0x0b, 0x57, 0xe0, 0x73, 0x41, 0x70, 0x09, 0x5e, 0x44, 0x6e, 0xbd, 0xf2, 0x50, 0x66,
	0x4e, 0x6e, 0x85, 0x31, 0x06, 0x0f, 0xa1, 0xf7, 0x4e, 0x7d, 0xb9, 0x72, 0xec, 0x44, 0x76, 0xfe,
	0x7a, 0xfe, 0xf6, 0xed, 0xe5, 0x85, 0xcc, 0xca, 0x47, 0x27, 0xc5, 0x4a, 0x0b, 0xc0, 0xc6, 0x02,
	0x1a, 0xfc, 0x74, 0x12, 0xf0, 0x65, 0xe6, 0xed, 0x09, 0xbc, 0xc7, 0x89, 0x38, 0x60, 0xb9, 0x7d,
	0x26, 0xed, 0x34, 0x8d, 0xbc, 0x7d, 0xd0, 0x24, 0xcc, 0xce, 0x5f, 0xc7, 0x00, 0xcc, 0x5e, 0x62,
	0x69, 0x25, 0xb4, 0x8f, 0x03, 0xea, 0x38, 0x7f, 0xe8, 0x4a, 0x1b, 0x85, 0x4c, 0xcc, 0xdf, 0xbe,
	0xed, 0xcd, 0x4e, 0xae, 0x7c, 0x71, 0x26, 0x7f, 0xe4, 0xbd, 0xe5, 0x5b, 0x33, 0x21, 0x16, 0xdd,
	0xf4, 0x59, 0x9a, 0x8a, 0x58, 0x96, 0x6f, 0xbd, 0xcf, 0x58, 0x1e, 0x0f, 0x3a, 0x0e, 0xa7, 0x27,
	0x2e, 0xc9, 0x1c, 0x6b, 0x4a, 0xc7, 0x9c, 0x79, 0xa6, 0xa0, 0x0d, 0x26, 0x53, 0xee, 0x84, 0xd4,
	0x5c, 0xaa, 0x65, 0xe0, 0x8c, 0x39, 0x7a, 0x6b, 0x79, 0xe1, 0x46, 0xee, 0xb3, 0x1b, 0xb0, 0x5d,
	0x6c, 0x6b, 0x63, 0xaa, 0xa1, 0x6b, 0x7d, 0x66, 0x2a, 0xed, 0x4a, 0x0a, 0x8f, 0xbf, 0x77, 0xfa,
	0x9c, 0x77, 0x6a, 0x3a, 0x77, 0xf6, 0x9d, 0xfc, 0xed, 0x0f, 0xb3, 0x53, 0x17, 0xe0, 0x73, 0x41,
	0xf5, 0xd2, 0x72, 0x1a, 0xb0, 0xdc, 0x4e, 0xc3, 0xb0, 0xde, 0xc2, 0x93, 0x4c, 0x6a, 0xe1, 0xc0,
	0xd1, 0xa2, 0xc2, 0xa8, 0x4d, 0x1d, 0xc9, 0x5f, 0x5d, 0x58, 0x99, 0x9c, 0xc4, 0xc0, 0x09, 0x0d,
	0x8a, 0x36, 0x19, 0x3c, 0x6f, 0xf0, 0x88, 0x90, 0x36, 0x95, 0xea, 0x31, 0x21, 0x4b, 0xdb, 0x02,
	0x04, 0x99, 0xa5, 0xfb, 0x0d, 0x35, 0x21, 0x6d, 0x2e, 0x32, 0xd4, 0x3b, 0x77, 0x2c, 0xbb, 0x78,
	0xba, 0x04, 0x7d, 0xbf, 0x6a, 0x26, 0xa4, 0x58, 0xb1, 0x63, 0xd7, 0xae, 0xe4, 0x2f, 0x4d, 0xc2,
	0x9d, 0x41, 0x03, 0x64, 0xf4, 0x7e, 0x94, 0x1e, 0x28, 0xe6, 0xa1, 0x21, 0x7a, 0x36, 0x28, 0x74,
	0x72, 0x95, 0xc0, 0x8f, 0x48, 0x27, 0xe8, 0x65, 0xad, 0x7e, 0x74, 0x6f, 0xde, 0xc8, 0x5f, 0xbd,
	0xed, 0x5d, 0x3e, 0xef, 0x9d, 0xfa, 0x92, 0x15, 0xac, 0xd0, 0x23, 0xc4, 0x5f, 0x4a, 0xf8, 0x84,
	0xd8, 0x12, 0xc6, 0x83, 0x85, 0x5a, 0x1c, 0x48, 0x7b, 0x03, 0x7b, 0x5f, 0x60, 0xff, 0x97, 0xc2,
	0x99, 0x1f, 0x0c, 0x4f, 0x3f, 0xef, 0xf2, 0xef, 0xf3, 0x8b, 0xef, 0x63, 0x37, 0x29, 0x67, 0x07,
	0xd8, 0x14, 0xae, 0xfa, 0x02, 0xb3, 0xb7, 0x86, 0x3b, 0x46, 0xc8, 0xec, 0x27, 0x83, 0x42, 0xa3,
	0xbc, 0xbd, 0x74, 0xc6, 0x4b, 0x0f, 0x85, 0x1b, 0x06, 0xce, 0xe7, 0xc5, 0x63, 0xde, 0xec, 0x27,
	0x70, 0x4f, 0xa0, 0xad, 0x3b, 0xf8, 0x3f, 0x8a, 0x40, 0xdb, 0xc3, 0x3e, 0xb8, 0xd3, 0x67, 0xbc,
	0xdf, 0x9e, 0xce, 0x66, 0x7e, 0xc7, 0x54, 0x3d, 0x1f, 0x34, 0xc1, 0x01, 0xab, 0x73, 0x4c, 0xd5,
	0x0d, 0x75, 0xd8, 0x40, 0xb4, 0x40, 0x1f, 0xe1, 0xf0, 0x78, 0x67, 0xdf, 0xf6, 0x4e, 0x9f, 0xcb,
	0x9e, 0xb8, 0x46, 0x1b, 0x4a, 0xee, 0xec, 0x3b, 0x7e, 0xeb, 0x97, 0xc3, 0x86, 0x1e, 0x70, 0x7c,
	0x7c, 0xb6, 0x85, 0x1d, 0x5c, 0x5e, 0x3c, 0xef, 0x1d, 0xb9, 0xc6, 0xc0, 0xd9, 0x1d, 0x14, 0x44,
	0x97, 0xe5, 0x38, 0xfb, 0xf5, 0xc4, 0x21, 0x0c, 0xad, 0xb4, 0x5d, 0xd9, 0x94, 0x99, 0x93, 0x65,
	0xb8, 0xd1, 0xbb, 0xf2, 0x07, 0xbf, 0x13, 0x0c, 0x5b, 0x8e, 0x43, 0xcd, 0x16, 0x0b, 0x89, 0x74,
	0x20, 0x8e, 0xcb, 0xa3, 0xdc, 0x3d, 0xd6, 0x80, 0x7c, 0x5c, 0x3a, 0x83, 0x42, 0xa2, 0x93, 0xac,
	0xd3, 0xb4, 0xdc, 0x43, 0xec, 0x2e, 0x2c, 0x3d, 0xa6, 0x6c, 0xc9, 0xcc, 0xc9, 0x9b, 0x61, 0x8b,
	0xdf, 0x81, 0x58, 0xc7, 0x9c, 0xfe, 0x22, 0xf0, 0xb1, 0xb8, 0x78, 0xc9, 0xf5, 0x4a, 0xda, 0x51,
	0x94, 0xaf, 0xb9, 0x0b, 0x1f, 0xe7, 0xfe, 0x78, 0x42, 0x04, 0xa5, 0xc7, 0x1a, 0xb0, 0xdc, 0x38,
	0x4a, 0x21, 0x95, 0xde, 0x0e, 0xa5, 0xc7, 0x39, 0x28, 0xd8, 0xca, 0x77, 0x17, 0x57, 0x8e, 0xcd,
	0x64, 0x3f, 0x9d, 0xc9, 0x5d, 0x98, 0xce, 0x5d, 0x98, 0x17, 0x15, 0x11, 0xe2, 0x01, 0xcb, 0xed,
	0xb1, 0x4c, 0x24, 0x3d, 0xe1, 0x3b, 0x47, 0xe4, 0x7b, 0xb3, 0x9f, 0x67, 0xaf, 0xbe, 0xe7, 0x4d,
	0x87, 0xfa, 0xf1, 0x01, 0x75, 0x3c, 0xb8, 0x7e, 0x4a, 0x6d, 0x45, 0x0d, 0x2f, 0xfb, 0xe9, 0xc5,
	0x95, 0x33, 0x5f, 0x7b, 0x57, 0xe7, 0xba, 0x06, 0xbf, 0xff, 0x47, 0x6c, 0xcd, 0xa5, 0xa5, 0x58,
	0xe4, 0xdb, 0xa5, 0x58, 0xe4, 0xbb, 0xa5, 0x58, 0xe4, 0xef, 0x4b, 0xb1, 0x48, 0x7e, 0x29, 0xb6,
	0xe6, 0x9f, 0x4b, 0xb1, 0xc8, 0xc9, 0x3b, 0xb1, 0x35, 0xdf, 0xde, 0x89, 0x45, 0xbe, 0xbb, 0x13,
	0x5b, 0xf3, 0xfd, 0x9d, 0xd8, 0x9a, 0xd7, 0x1f, 0x1e, 0xb1, 0x74, 0x93, 0xfc, 0xa1, 0x09, 0xb2,
	0xdb, 0x47, 0xac, 0x64, 0xd2, 0x32, 0xdb, 0x83, 0xbf, 0x40, 0xe1, 0x0f, 0xf8, 0xe1, 0xb5, 0x64,
	0xef, 0xe9, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x8a, 0xfa, 0x86, 0x9e, 0x22, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFindRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFindResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildJoinNowRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildJoinNowResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFindDetailsRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFindDetailsResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildEnterRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildEnterResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildCreateRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildCreateResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildDissolveRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildDissolveResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildModifyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildModifyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildMembersRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildMembersResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildInviteListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildInviteListResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildHandleInviteRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildHandleInviteResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildJoinApplyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildJoinApplyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildCancelApplyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildCancelApplyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildApplyListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildApplyListResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildHandleApplyRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildHandleApplyResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildApplyRejectAllRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildApplyRejectAllResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildRemoveRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildRemoveResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildExitRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildExitResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildPositionChangeRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildPositionChangeResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildGuildInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildGuildInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildModifyPositionNameRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildModifyPositionNameResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildBuildInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildBuildInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildBuildRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildBuildResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildWorldInviteRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildWorldInviteResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildPrivateInviteRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildPrivateInviteResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildRankRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildRankResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildNameExistRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildNameExistResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingInfoResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingStartRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingStartResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingActivateRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingActivateResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingNextStageRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_BlessingNextStageResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildExpChange.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_UserGuildInfoChange.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatGuildResetBuildRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatGuildResetBuildResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatGuildAddExpRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatGuildAddExpResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatRestExitGuildCDRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatRestExitGuildCDResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatSetBlessStageRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_CheatSetBlessStageResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_UpdateBlessingEfficRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_UpdateBlessingEfficResponse.Get().(proto.Message)
	})
}

var poolGuild = &sync.Pool{New: func() interface{} { return &Guild{} }}

func (m *Guild) ReleasePool() { m.Reset(); poolGuild.Put(m); m = nil }

var poolGuild_GuildFindRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildFindRequest{} }}

func (m *Guild_GuildFindRequest) ReleasePool() { m.Reset(); poolGuild_GuildFindRequest.Put(m); m = nil }

var poolGuild_GuildFindResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildFindResponse{} }}

func (m *Guild_GuildFindResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildFindResponse.Put(m)
	m = nil
}

var poolGuild_GuildJoinNowRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildJoinNowRequest{} }}

func (m *Guild_GuildJoinNowRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildJoinNowRequest.Put(m)
	m = nil
}

var poolGuild_GuildJoinNowResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildJoinNowResponse{} }}

func (m *Guild_GuildJoinNowResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildJoinNowResponse.Put(m)
	m = nil
}

var poolGuild_GuildFindDetailsRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildFindDetailsRequest{} }}

func (m *Guild_GuildFindDetailsRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildFindDetailsRequest.Put(m)
	m = nil
}

var poolGuild_GuildFindDetailsResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildFindDetailsResponse{} }}

func (m *Guild_GuildFindDetailsResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildFindDetailsResponse.Put(m)
	m = nil
}

var poolGuild_GuildEnterRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildEnterRequest{} }}

func (m *Guild_GuildEnterRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildEnterRequest.Put(m)
	m = nil
}

var poolGuild_GuildEnterResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildEnterResponse{} }}

func (m *Guild_GuildEnterResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildEnterResponse.Put(m)
	m = nil
}

var poolGuild_GuildCreateRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildCreateRequest{} }}

func (m *Guild_GuildCreateRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildCreateRequest.Put(m)
	m = nil
}

var poolGuild_GuildCreateResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildCreateResponse{} }}

func (m *Guild_GuildCreateResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildCreateResponse.Put(m)
	m = nil
}

var poolGuild_GuildDissolveRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildDissolveRequest{} }}

func (m *Guild_GuildDissolveRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildDissolveRequest.Put(m)
	m = nil
}

var poolGuild_GuildDissolveResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildDissolveResponse{} }}

func (m *Guild_GuildDissolveResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildDissolveResponse.Put(m)
	m = nil
}

var poolGuild_GuildModifyRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildModifyRequest{} }}

func (m *Guild_GuildModifyRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildModifyRequest.Put(m)
	m = nil
}

var poolGuild_GuildModifyResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildModifyResponse{} }}

func (m *Guild_GuildModifyResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildModifyResponse.Put(m)
	m = nil
}

var poolGuild_GuildMembersRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildMembersRequest{} }}

func (m *Guild_GuildMembersRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildMembersRequest.Put(m)
	m = nil
}

var poolGuild_GuildMembersResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildMembersResponse{} }}

func (m *Guild_GuildMembersResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildMembersResponse.Put(m)
	m = nil
}

var poolGuild_GuildInviteListRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildInviteListRequest{} }}

func (m *Guild_GuildInviteListRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildInviteListRequest.Put(m)
	m = nil
}

var poolGuild_GuildInviteListResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildInviteListResponse{} }}

func (m *Guild_GuildInviteListResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildInviteListResponse.Put(m)
	m = nil
}

var poolGuild_GuildHandleInviteRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildHandleInviteRequest{} }}

func (m *Guild_GuildHandleInviteRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildHandleInviteRequest.Put(m)
	m = nil
}

var poolGuild_GuildHandleInviteResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildHandleInviteResponse{} }}

func (m *Guild_GuildHandleInviteResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildHandleInviteResponse.Put(m)
	m = nil
}

var poolGuild_GuildJoinApplyRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildJoinApplyRequest{} }}

func (m *Guild_GuildJoinApplyRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildJoinApplyRequest.Put(m)
	m = nil
}

var poolGuild_GuildJoinApplyResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildJoinApplyResponse{} }}

func (m *Guild_GuildJoinApplyResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildJoinApplyResponse.Put(m)
	m = nil
}

var poolGuild_GuildCancelApplyRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildCancelApplyRequest{} }}

func (m *Guild_GuildCancelApplyRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildCancelApplyRequest.Put(m)
	m = nil
}

var poolGuild_GuildCancelApplyResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildCancelApplyResponse{} }}

func (m *Guild_GuildCancelApplyResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildCancelApplyResponse.Put(m)
	m = nil
}

var poolGuild_GuildApplyListRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildApplyListRequest{} }}

func (m *Guild_GuildApplyListRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildApplyListRequest.Put(m)
	m = nil
}

var poolGuild_GuildApplyListResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildApplyListResponse{} }}

func (m *Guild_GuildApplyListResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildApplyListResponse.Put(m)
	m = nil
}

var poolGuild_GuildHandleApplyRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildHandleApplyRequest{} }}

func (m *Guild_GuildHandleApplyRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildHandleApplyRequest.Put(m)
	m = nil
}

var poolGuild_GuildHandleApplyResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildHandleApplyResponse{} }}

func (m *Guild_GuildHandleApplyResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildHandleApplyResponse.Put(m)
	m = nil
}

var poolGuild_GuildApplyRejectAllRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildApplyRejectAllRequest{} }}

func (m *Guild_GuildApplyRejectAllRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildApplyRejectAllRequest.Put(m)
	m = nil
}

var poolGuild_GuildApplyRejectAllResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildApplyRejectAllResponse{} }}

func (m *Guild_GuildApplyRejectAllResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildApplyRejectAllResponse.Put(m)
	m = nil
}

var poolGuild_GuildRemoveRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildRemoveRequest{} }}

func (m *Guild_GuildRemoveRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildRemoveRequest.Put(m)
	m = nil
}

var poolGuild_GuildRemoveResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildRemoveResponse{} }}

func (m *Guild_GuildRemoveResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildRemoveResponse.Put(m)
	m = nil
}

var poolGuild_GuildExitRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildExitRequest{} }}

func (m *Guild_GuildExitRequest) ReleasePool() { m.Reset(); poolGuild_GuildExitRequest.Put(m); m = nil }

var poolGuild_GuildExitResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildExitResponse{} }}

func (m *Guild_GuildExitResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildExitResponse.Put(m)
	m = nil
}

var poolGuild_GuildPositionChangeRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildPositionChangeRequest{} }}

func (m *Guild_GuildPositionChangeRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildPositionChangeRequest.Put(m)
	m = nil
}

var poolGuild_GuildPositionChangeResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildPositionChangeResponse{} }}

func (m *Guild_GuildPositionChangeResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildPositionChangeResponse.Put(m)
	m = nil
}

var poolGuild_GuildGuildInfoRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildGuildInfoRequest{} }}

func (m *Guild_GuildGuildInfoRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildGuildInfoRequest.Put(m)
	m = nil
}

var poolGuild_GuildGuildInfoResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildGuildInfoResponse{} }}

func (m *Guild_GuildGuildInfoResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildGuildInfoResponse.Put(m)
	m = nil
}

var poolGuild_GuildModifyPositionNameRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildModifyPositionNameRequest{} }}

func (m *Guild_GuildModifyPositionNameRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildModifyPositionNameRequest.Put(m)
	m = nil
}

var poolGuild_GuildModifyPositionNameResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildModifyPositionNameResponse{} }}

func (m *Guild_GuildModifyPositionNameResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildModifyPositionNameResponse.Put(m)
	m = nil
}

var poolGuild_GuildBuildInfoRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildBuildInfoRequest{} }}

func (m *Guild_GuildBuildInfoRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildBuildInfoRequest.Put(m)
	m = nil
}

var poolGuild_GuildBuildInfoResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildBuildInfoResponse{} }}

func (m *Guild_GuildBuildInfoResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildBuildInfoResponse.Put(m)
	m = nil
}

var poolGuild_GuildBuildRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildBuildRequest{} }}

func (m *Guild_GuildBuildRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildBuildRequest.Put(m)
	m = nil
}

var poolGuild_GuildBuildResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildBuildResponse{} }}

func (m *Guild_GuildBuildResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildBuildResponse.Put(m)
	m = nil
}

var poolGuild_GuildWorldInviteRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildWorldInviteRequest{} }}

func (m *Guild_GuildWorldInviteRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildWorldInviteRequest.Put(m)
	m = nil
}

var poolGuild_GuildWorldInviteResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildWorldInviteResponse{} }}

func (m *Guild_GuildWorldInviteResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildWorldInviteResponse.Put(m)
	m = nil
}

var poolGuild_GuildPrivateInviteRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildPrivateInviteRequest{} }}

func (m *Guild_GuildPrivateInviteRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildPrivateInviteRequest.Put(m)
	m = nil
}

var poolGuild_GuildPrivateInviteResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildPrivateInviteResponse{} }}

func (m *Guild_GuildPrivateInviteResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildPrivateInviteResponse.Put(m)
	m = nil
}

var poolGuild_GuildRankRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildRankRequest{} }}

func (m *Guild_GuildRankRequest) ReleasePool() { m.Reset(); poolGuild_GuildRankRequest.Put(m); m = nil }

var poolGuild_GuildRankResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildRankResponse{} }}

func (m *Guild_GuildRankResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildRankResponse.Put(m)
	m = nil
}

var poolGuild_GuildNameExistRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildNameExistRequest{} }}

func (m *Guild_GuildNameExistRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildNameExistRequest.Put(m)
	m = nil
}

var poolGuild_GuildNameExistResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildNameExistResponse{} }}

func (m *Guild_GuildNameExistResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildNameExistResponse.Put(m)
	m = nil
}

var poolGuild_BlessingInfoRequest = &sync.Pool{New: func() interface{} { return &Guild_BlessingInfoRequest{} }}

func (m *Guild_BlessingInfoRequest) ReleasePool() {
	m.Reset()
	poolGuild_BlessingInfoRequest.Put(m)
	m = nil
}

var poolGuild_BlessingInfoResponse = &sync.Pool{New: func() interface{} { return &Guild_BlessingInfoResponse{} }}

func (m *Guild_BlessingInfoResponse) ReleasePool() {
	m.Reset()
	poolGuild_BlessingInfoResponse.Put(m)
	m = nil
}

var poolGuild_BlessingStartRequest = &sync.Pool{New: func() interface{} { return &Guild_BlessingStartRequest{} }}

func (m *Guild_BlessingStartRequest) ReleasePool() {
	m.Reset()
	poolGuild_BlessingStartRequest.Put(m)
	m = nil
}

var poolGuild_BlessingStartResponse = &sync.Pool{New: func() interface{} { return &Guild_BlessingStartResponse{} }}

func (m *Guild_BlessingStartResponse) ReleasePool() {
	m.Reset()
	poolGuild_BlessingStartResponse.Put(m)
	m = nil
}

var poolGuild_BlessingActivateRequest = &sync.Pool{New: func() interface{} { return &Guild_BlessingActivateRequest{} }}

func (m *Guild_BlessingActivateRequest) ReleasePool() {
	m.Reset()
	poolGuild_BlessingActivateRequest.Put(m)
	m = nil
}

var poolGuild_BlessingActivateResponse = &sync.Pool{New: func() interface{} { return &Guild_BlessingActivateResponse{} }}

func (m *Guild_BlessingActivateResponse) ReleasePool() {
	m.Reset()
	poolGuild_BlessingActivateResponse.Put(m)
	m = nil
}

var poolGuild_BlessingNextStageRequest = &sync.Pool{New: func() interface{} { return &Guild_BlessingNextStageRequest{} }}

func (m *Guild_BlessingNextStageRequest) ReleasePool() {
	m.Reset()
	poolGuild_BlessingNextStageRequest.Put(m)
	m = nil
}

var poolGuild_BlessingNextStageResponse = &sync.Pool{New: func() interface{} { return &Guild_BlessingNextStageResponse{} }}

func (m *Guild_BlessingNextStageResponse) ReleasePool() {
	m.Reset()
	poolGuild_BlessingNextStageResponse.Put(m)
	m = nil
}

var poolGuild_GuildExpChange = &sync.Pool{New: func() interface{} { return &Guild_GuildExpChange{} }}

func (m *Guild_GuildExpChange) ReleasePool() { m.Reset(); poolGuild_GuildExpChange.Put(m); m = nil }

var poolGuild_UserGuildInfoChange = &sync.Pool{New: func() interface{} { return &Guild_UserGuildInfoChange{} }}

func (m *Guild_UserGuildInfoChange) ReleasePool() {
	m.Reset()
	poolGuild_UserGuildInfoChange.Put(m)
	m = nil
}

var poolGuild_CheatGuildResetBuildRequest = &sync.Pool{New: func() interface{} { return &Guild_CheatGuildResetBuildRequest{} }}

func (m *Guild_CheatGuildResetBuildRequest) ReleasePool() {
	m.Reset()
	poolGuild_CheatGuildResetBuildRequest.Put(m)
	m = nil
}

var poolGuild_CheatGuildResetBuildResponse = &sync.Pool{New: func() interface{} { return &Guild_CheatGuildResetBuildResponse{} }}

func (m *Guild_CheatGuildResetBuildResponse) ReleasePool() {
	m.Reset()
	poolGuild_CheatGuildResetBuildResponse.Put(m)
	m = nil
}

var poolGuild_CheatGuildAddExpRequest = &sync.Pool{New: func() interface{} { return &Guild_CheatGuildAddExpRequest{} }}

func (m *Guild_CheatGuildAddExpRequest) ReleasePool() {
	m.Reset()
	poolGuild_CheatGuildAddExpRequest.Put(m)
	m = nil
}

var poolGuild_CheatGuildAddExpResponse = &sync.Pool{New: func() interface{} { return &Guild_CheatGuildAddExpResponse{} }}

func (m *Guild_CheatGuildAddExpResponse) ReleasePool() {
	m.Reset()
	poolGuild_CheatGuildAddExpResponse.Put(m)
	m = nil
}

var poolGuild_CheatRestExitGuildCDRequest = &sync.Pool{New: func() interface{} { return &Guild_CheatRestExitGuildCDRequest{} }}

func (m *Guild_CheatRestExitGuildCDRequest) ReleasePool() {
	m.Reset()
	poolGuild_CheatRestExitGuildCDRequest.Put(m)
	m = nil
}

var poolGuild_CheatRestExitGuildCDResponse = &sync.Pool{New: func() interface{} { return &Guild_CheatRestExitGuildCDResponse{} }}

func (m *Guild_CheatRestExitGuildCDResponse) ReleasePool() {
	m.Reset()
	poolGuild_CheatRestExitGuildCDResponse.Put(m)
	m = nil
}

var poolGuild_CheatSetBlessStageRequest = &sync.Pool{New: func() interface{} { return &Guild_CheatSetBlessStageRequest{} }}

func (m *Guild_CheatSetBlessStageRequest) ReleasePool() {
	m.Reset()
	poolGuild_CheatSetBlessStageRequest.Put(m)
	m = nil
}

var poolGuild_CheatSetBlessStageResponse = &sync.Pool{New: func() interface{} { return &Guild_CheatSetBlessStageResponse{} }}

func (m *Guild_CheatSetBlessStageResponse) ReleasePool() {
	m.Reset()
	poolGuild_CheatSetBlessStageResponse.Put(m)
	m = nil
}

var poolGuild_UpdateBlessingEfficRequest = &sync.Pool{New: func() interface{} { return &Guild_UpdateBlessingEfficRequest{} }}

func (m *Guild_UpdateBlessingEfficRequest) ReleasePool() {
	m.Reset()
	poolGuild_UpdateBlessingEfficRequest.Put(m)
	m = nil
}

var poolGuild_UpdateBlessingEfficResponse = &sync.Pool{New: func() interface{} { return &Guild_UpdateBlessingEfficResponse{} }}

func (m *Guild_UpdateBlessingEfficResponse) ReleasePool() {
	m.Reset()
	poolGuild_UpdateBlessingEfficResponse.Put(m)
	m = nil
}
func (x GuildErrorCode) String() string {
	s, ok := GuildErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Guild) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild)
	if !ok {
		that2, ok := that.(Guild)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildFindRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFindRequest)
	if !ok {
		that2, ok := that.(Guild_GuildFindRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.NoAudit != that1.NoAudit {
		return false
	}
	if this.CombatValue != that1.CombatValue {
		return false
	}
	return true
}
func (this *Guild_GuildFindResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFindResponse)
	if !ok {
		that2, ok := that.(Guild_GuildFindResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if !this.List[i].Equal(that1.List[i]) {
			return false
		}
	}
	return true
}
func (this *Guild_GuildJoinNowRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildJoinNowRequest)
	if !ok {
		that2, ok := that.(Guild_GuildJoinNowRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.CombatValue != that1.CombatValue {
		return false
	}
	return true
}
func (this *Guild_GuildJoinNowResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildJoinNowResponse)
	if !ok {
		that2, ok := that.(Guild_GuildJoinNowResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildFindDetailsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFindDetailsRequest)
	if !ok {
		that2, ok := that.(Guild_GuildFindDetailsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Id) != len(that1.Id) {
		return false
	}
	for i := range this.Id {
		if this.Id[i] != that1.Id[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildFindDetailsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFindDetailsResponse)
	if !ok {
		that2, ok := that.(Guild_GuildFindDetailsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if !this.List[i].Equal(that1.List[i]) {
			return false
		}
	}
	return true
}
func (this *Guild_GuildEnterRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildEnterRequest)
	if !ok {
		that2, ok := that.(Guild_GuildEnterRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildEnterResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildEnterResponse)
	if !ok {
		that2, ok := that.(Guild_GuildEnterResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	if this.LastPosition != that1.LastPosition {
		return false
	}
	if this.CurPosition != that1.CurPosition {
		return false
	}
	return true
}
func (this *Guild_GuildCreateRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildCreateRequest)
	if !ok {
		that2, ok := that.(Guild_GuildCreateRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Flag != that1.Flag {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.Intro != that1.Intro {
		return false
	}
	if this.Notice != that1.Notice {
		return false
	}
	if this.AutoJoin != that1.AutoJoin {
		return false
	}
	return true
}
func (this *Guild_GuildCreateResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildCreateResponse)
	if !ok {
		that2, ok := that.(Guild_GuildCreateResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildDissolveRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildDissolveRequest)
	if !ok {
		that2, ok := that.(Guild_GuildDissolveRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildDissolveResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildDissolveResponse)
	if !ok {
		that2, ok := that.(Guild_GuildDissolveResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildModifyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildModifyRequest)
	if !ok {
		that2, ok := that.(Guild_GuildModifyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Flag != that1.Flag {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.Intro != that1.Intro {
		return false
	}
	if this.Notice != that1.Notice {
		return false
	}
	if this.AutoJoin != that1.AutoJoin {
		return false
	}
	if this.Greeting != that1.Greeting {
		return false
	}
	if this.CombatValueLimit != that1.CombatValueLimit {
		return false
	}
	return true
}
func (this *Guild_GuildModifyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildModifyResponse)
	if !ok {
		that2, ok := that.(Guild_GuildModifyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *Guild_GuildMembersRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildMembersRequest)
	if !ok {
		that2, ok := that.(Guild_GuildMembersRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GuildId != that1.GuildId {
		return false
	}
	return true
}
func (this *Guild_GuildMembersResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildMembersResponse)
	if !ok {
		that2, ok := that.(Guild_GuildMembersResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Members) != len(that1.Members) {
		return false
	}
	for i := range this.Members {
		if !this.Members[i].Equal(that1.Members[i]) {
			return false
		}
	}
	return true
}
func (this *Guild_GuildInviteListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildInviteListRequest)
	if !ok {
		that2, ok := that.(Guild_GuildInviteListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.CombatValueLimit != that1.CombatValueLimit {
		return false
	}
	if this.Refresh != that1.Refresh {
		return false
	}
	return true
}
func (this *Guild_GuildInviteListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildInviteListResponse)
	if !ok {
		that2, ok := that.(Guild_GuildInviteListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if !this.List[i].Equal(that1.List[i]) {
			return false
		}
	}
	return true
}
func (this *Guild_GuildHandleInviteRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildHandleInviteRequest)
	if !ok {
		that2, ok := that.(Guild_GuildHandleInviteRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Token != that1.Token {
		return false
	}
	if this.Agree != that1.Agree {
		return false
	}
	return true
}
func (this *Guild_GuildHandleInviteResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildHandleInviteResponse)
	if !ok {
		that2, ok := that.(Guild_GuildHandleInviteResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildJoinApplyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildJoinApplyRequest)
	if !ok {
		that2, ok := that.(Guild_GuildJoinApplyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Id) != len(that1.Id) {
		return false
	}
	for i := range this.Id {
		if this.Id[i] != that1.Id[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildJoinApplyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildJoinApplyResponse)
	if !ok {
		that2, ok := that.(Guild_GuildJoinApplyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildCancelApplyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildCancelApplyRequest)
	if !ok {
		that2, ok := that.(Guild_GuildCancelApplyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *Guild_GuildCancelApplyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildCancelApplyResponse)
	if !ok {
		that2, ok := that.(Guild_GuildCancelApplyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildApplyListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildApplyListRequest)
	if !ok {
		that2, ok := that.(Guild_GuildApplyListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildApplyListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildApplyListResponse)
	if !ok {
		that2, ok := that.(Guild_GuildApplyListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.List) != len(that1.List) {
		return false
	}
	for i := range this.List {
		if !this.List[i].Equal(that1.List[i]) {
			return false
		}
	}
	return true
}
func (this *Guild_GuildHandleApplyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildHandleApplyRequest)
	if !ok {
		that2, ok := that.(Guild_GuildHandleApplyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.Agree != that1.Agree {
		return false
	}
	return true
}
func (this *Guild_GuildHandleApplyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildHandleApplyResponse)
	if !ok {
		that2, ok := that.(Guild_GuildHandleApplyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildApplyRejectAllRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildApplyRejectAllRequest)
	if !ok {
		that2, ok := that.(Guild_GuildApplyRejectAllRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildApplyRejectAllResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildApplyRejectAllResponse)
	if !ok {
		that2, ok := that.(Guild_GuildApplyRejectAllResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildRemoveRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildRemoveRequest)
	if !ok {
		that2, ok := that.(Guild_GuildRemoveRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	return true
}
func (this *Guild_GuildRemoveResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildRemoveResponse)
	if !ok {
		that2, ok := that.(Guild_GuildRemoveResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Info.Equal(that1.Info) {
		return false
	}
	return true
}
func (this *Guild_GuildExitRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildExitRequest)
	if !ok {
		that2, ok := that.(Guild_GuildExitRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildExitResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildExitResponse)
	if !ok {
		that2, ok := that.(Guild_GuildExitResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildPositionChangeRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildPositionChangeRequest)
	if !ok {
		that2, ok := that.(Guild_GuildPositionChangeRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.Position != that1.Position {
		return false
	}
	return true
}
func (this *Guild_GuildPositionChangeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildPositionChangeResponse)
	if !ok {
		that2, ok := that.(Guild_GuildPositionChangeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildGuildInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildGuildInfoRequest)
	if !ok {
		that2, ok := that.(Guild_GuildGuildInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	return true
}
func (this *Guild_GuildGuildInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildGuildInfoResponse)
	if !ok {
		that2, ok := that.(Guild_GuildGuildInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *Guild_GuildModifyPositionNameRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildModifyPositionNameRequest)
	if !ok {
		that2, ok := that.(Guild_GuildModifyPositionNameRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Name) != len(that1.Name) {
		return false
	}
	for i := range this.Name {
		if this.Name[i] != that1.Name[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildModifyPositionNameResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildModifyPositionNameResponse)
	if !ok {
		that2, ok := that.(Guild_GuildModifyPositionNameResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildBuildInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildBuildInfoRequest)
	if !ok {
		that2, ok := that.(Guild_GuildBuildInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildBuildInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildBuildInfoResponse)
	if !ok {
		that2, ok := that.(Guild_GuildBuildInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FreeCount != that1.FreeCount {
		return false
	}
	if this.PayCount != that1.PayCount {
		return false
	}
	if len(this.PayCost) != len(that1.PayCost) {
		return false
	}
	for i := range this.PayCost {
		if this.PayCost[i] != that1.PayCost[i] {
			return false
		}
	}
	if this.ResetTime != that1.ResetTime {
		return false
	}
	return true
}
func (this *Guild_GuildBuildRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildBuildRequest)
	if !ok {
		that2, ok := that.(Guild_GuildBuildRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Free != that1.Free {
		return false
	}
	return true
}
func (this *Guild_GuildBuildResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildBuildResponse)
	if !ok {
		that2, ok := that.(Guild_GuildBuildResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Level != that1.Level {
		return false
	}
	if this.Exp != that1.Exp {
		return false
	}
	if len(this.Rewards) != len(that1.Rewards) {
		return false
	}
	for i := range this.Rewards {
		if this.Rewards[i] != that1.Rewards[i] {
			return false
		}
	}
	if this.Surprised != that1.Surprised {
		return false
	}
	if this.FreeCount != that1.FreeCount {
		return false
	}
	if this.PayCount != that1.PayCount {
		return false
	}
	if len(this.PayCost) != len(that1.PayCost) {
		return false
	}
	for i := range this.PayCost {
		if this.PayCost[i] != that1.PayCost[i] {
			return false
		}
	}
	if this.ResetTime != that1.ResetTime {
		return false
	}
	return true
}
func (this *Guild_GuildWorldInviteRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildWorldInviteRequest)
	if !ok {
		that2, ok := that.(Guild_GuildWorldInviteRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Free != that1.Free {
		return false
	}
	if this.Msg != that1.Msg {
		return false
	}
	if this.Save != that1.Save {
		return false
	}
	return true
}
func (this *Guild_GuildWorldInviteResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildWorldInviteResponse)
	if !ok {
		that2, ok := that.(Guild_GuildWorldInviteResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildPrivateInviteRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildPrivateInviteRequest)
	if !ok {
		that2, ok := that.(Guild_GuildPrivateInviteRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.Msg != that1.Msg {
		return false
	}
	if this.Save != that1.Save {
		return false
	}
	return true
}
func (this *Guild_GuildPrivateInviteResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildPrivateInviteResponse)
	if !ok {
		that2, ok := that.(Guild_GuildPrivateInviteResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildRankRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildRankRequest)
	if !ok {
		that2, ok := that.(Guild_GuildRankRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Start != that1.Start {
		return false
	}
	if this.End != that1.End {
		return false
	}
	return true
}
func (this *Guild_GuildRankResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildRankResponse)
	if !ok {
		that2, ok := that.(Guild_GuildRankResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Self.Equal(that1.Self) {
		return false
	}
	if this.SelfRank != that1.SelfRank {
		return false
	}
	if len(this.Data) != len(that1.Data) {
		return false
	}
	for i := range this.Data {
		if !this.Data[i].Equal(that1.Data[i]) {
			return false
		}
	}
	if this.Ending != that1.Ending {
		return false
	}
	return true
}
func (this *Guild_GuildNameExistRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildNameExistRequest)
	if !ok {
		that2, ok := that.(Guild_GuildNameExistRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *Guild_GuildNameExistResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildNameExistResponse)
	if !ok {
		that2, ok := that.(Guild_GuildNameExistResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Exist != that1.Exist {
		return false
	}
	return true
}
func (this *Guild_BlessingInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingInfoRequest)
	if !ok {
		that2, ok := that.(Guild_BlessingInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_BlessingInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingInfoResponse)
	if !ok {
		that2, ok := that.(Guild_BlessingInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Stage != that1.Stage {
		return false
	}
	if len(this.Queue) != len(that1.Queue) {
		return false
	}
	for i := range this.Queue {
		if !this.Queue[i].Equal(that1.Queue[i]) {
			return false
		}
	}
	if len(this.Activated) != len(that1.Activated) {
		return false
	}
	for i := range this.Activated {
		if this.Activated[i] != that1.Activated[i] {
			return false
		}
	}
	if this.Effic != that1.Effic {
		return false
	}
	return true
}
func (this *Guild_BlessingStartRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingStartRequest)
	if !ok {
		that2, ok := that.(Guild_BlessingStartRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BlessId != that1.BlessId {
		return false
	}
	return true
}
func (this *Guild_BlessingStartResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingStartResponse)
	if !ok {
		that2, ok := that.(Guild_BlessingStartResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Stage != that1.Stage {
		return false
	}
	if len(this.Queue) != len(that1.Queue) {
		return false
	}
	for i := range this.Queue {
		if !this.Queue[i].Equal(that1.Queue[i]) {
			return false
		}
	}
	if len(this.Activated) != len(that1.Activated) {
		return false
	}
	for i := range this.Activated {
		if this.Activated[i] != that1.Activated[i] {
			return false
		}
	}
	return true
}
func (this *Guild_BlessingActivateRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingActivateRequest)
	if !ok {
		that2, ok := that.(Guild_BlessingActivateRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BlessId != that1.BlessId {
		return false
	}
	return true
}
func (this *Guild_BlessingActivateResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingActivateResponse)
	if !ok {
		that2, ok := that.(Guild_BlessingActivateResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Stage != that1.Stage {
		return false
	}
	if len(this.Queue) != len(that1.Queue) {
		return false
	}
	for i := range this.Queue {
		if !this.Queue[i].Equal(that1.Queue[i]) {
			return false
		}
	}
	if len(this.Activated) != len(that1.Activated) {
		return false
	}
	for i := range this.Activated {
		if this.Activated[i] != that1.Activated[i] {
			return false
		}
	}
	return true
}
func (this *Guild_BlessingNextStageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingNextStageRequest)
	if !ok {
		that2, ok := that.(Guild_BlessingNextStageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_BlessingNextStageResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_BlessingNextStageResponse)
	if !ok {
		that2, ok := that.(Guild_BlessingNextStageResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildExpChange) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildExpChange)
	if !ok {
		that2, ok := that.(Guild_GuildExpChange)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Level != that1.Level {
		return false
	}
	if this.Exp != that1.Exp {
		return false
	}
	return true
}
func (this *Guild_UserGuildInfoChange) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_UserGuildInfoChange)
	if !ok {
		that2, ok := that.(Guild_UserGuildInfoChange)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GuildId != that1.GuildId {
		return false
	}
	if this.Position != that1.Position {
		return false
	}
	return true
}
func (this *Guild_CheatGuildResetBuildRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatGuildResetBuildRequest)
	if !ok {
		that2, ok := that.(Guild_CheatGuildResetBuildRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_CheatGuildResetBuildResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatGuildResetBuildResponse)
	if !ok {
		that2, ok := that.(Guild_CheatGuildResetBuildResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_CheatGuildAddExpRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatGuildAddExpRequest)
	if !ok {
		that2, ok := that.(Guild_CheatGuildAddExpRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Exp != that1.Exp {
		return false
	}
	return true
}
func (this *Guild_CheatGuildAddExpResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatGuildAddExpResponse)
	if !ok {
		that2, ok := that.(Guild_CheatGuildAddExpResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_CheatRestExitGuildCDRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatRestExitGuildCDRequest)
	if !ok {
		that2, ok := that.(Guild_CheatRestExitGuildCDRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_CheatRestExitGuildCDResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatRestExitGuildCDResponse)
	if !ok {
		that2, ok := that.(Guild_CheatRestExitGuildCDResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_CheatSetBlessStageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatSetBlessStageRequest)
	if !ok {
		that2, ok := that.(Guild_CheatSetBlessStageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Stage != that1.Stage {
		return false
	}
	if this.Page != that1.Page {
		return false
	}
	return true
}
func (this *Guild_CheatSetBlessStageResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_CheatSetBlessStageResponse)
	if !ok {
		that2, ok := that.(Guild_CheatSetBlessStageResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_UpdateBlessingEfficRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_UpdateBlessingEfficRequest)
	if !ok {
		that2, ok := that.(Guild_UpdateBlessingEfficRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GuildId != that1.GuildId {
		return false
	}
	if this.Effic != that1.Effic {
		return false
	}
	if this.ExpiredAt != that1.ExpiredAt {
		return false
	}
	return true
}
func (this *Guild_UpdateBlessingEfficResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_UpdateBlessingEfficResponse)
	if !ok {
		that2, ok := that.(Guild_UpdateBlessingEfficResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Guild) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFindRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFindRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFindRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CombatValue != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValue))
		i--
		dAtA[i] = 0x20
	}
	if m.NoAudit {
		i--
		if m.NoAudit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFindResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFindResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFindResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildJoinNowRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildJoinNowRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildJoinNowRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CombatValue != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValue))
		i--
		dAtA[i] = 0x10
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildJoinNowResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildJoinNowResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildJoinNowResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFindDetailsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFindDetailsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFindDetailsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Id[iNdEx])
			copy(dAtA[i:], m.Id[iNdEx])
			i = encodeVarintGuild(dAtA, i, uint64(len(m.Id[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFindDetailsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFindDetailsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFindDetailsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildEnterRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildEnterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildEnterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildEnterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildEnterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildEnterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CurPosition != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CurPosition))
		i--
		dAtA[i] = 0x20
	}
	if m.LastPosition != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.LastPosition))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AutoJoin {
		i--
		if m.AutoJoin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Notice) > 0 {
		i -= len(m.Notice)
		copy(dAtA[i:], m.Notice)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Notice)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Intro) > 0 {
		i -= len(m.Intro)
		copy(dAtA[i:], m.Intro)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Intro)))
		i--
		dAtA[i] = 0x22
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x18
	}
	if m.Flag != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Flag))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildDissolveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildDissolveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildDissolveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildDissolveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildDissolveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildDissolveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildModifyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildModifyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildModifyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CombatValueLimit != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValueLimit))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Greeting) > 0 {
		i -= len(m.Greeting)
		copy(dAtA[i:], m.Greeting)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Greeting)))
		i--
		dAtA[i] = 0x42
	}
	if m.AutoJoin != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.AutoJoin))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Notice) > 0 {
		i -= len(m.Notice)
		copy(dAtA[i:], m.Notice)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Notice)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Intro) > 0 {
		i -= len(m.Intro)
		copy(dAtA[i:], m.Intro)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Intro)))
		i--
		dAtA[i] = 0x22
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x18
	}
	if m.Flag != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Flag))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildModifyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildModifyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildModifyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildMembersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildMembersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildMembersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildMembersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildMembersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildMembersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Members[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildInviteListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildInviteListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildInviteListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Refresh {
		i--
		if m.Refresh {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.CombatValueLimit != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValueLimit))
		i--
		dAtA[i] = 0x10
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildInviteListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildInviteListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildInviteListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildHandleInviteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildHandleInviteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildHandleInviteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Agree {
		i--
		if m.Agree {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildHandleInviteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildHandleInviteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildHandleInviteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildJoinApplyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildJoinApplyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildJoinApplyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Id[iNdEx])
			copy(dAtA[i:], m.Id[iNdEx])
			i = encodeVarintGuild(dAtA, i, uint64(len(m.Id[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildJoinApplyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildJoinApplyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildJoinApplyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildCancelApplyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildCancelApplyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildCancelApplyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildCancelApplyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildCancelApplyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildCancelApplyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildApplyListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildApplyListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildApplyListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildApplyListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildApplyListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildApplyListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildHandleApplyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildHandleApplyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildHandleApplyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Agree {
		i--
		if m.Agree {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildHandleApplyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildHandleApplyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildHandleApplyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildApplyRejectAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildApplyRejectAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildApplyRejectAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildApplyRejectAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildApplyRejectAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildApplyRejectAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildRemoveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildRemoveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildRemoveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildRemoveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildRemoveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildRemoveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildExitRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildExitRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildExitRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildExitResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildExitResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildExitResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildPositionChangeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildPositionChangeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildPositionChangeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Position != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildPositionChangeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildPositionChangeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildPositionChangeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildGuildInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildGuildInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildGuildInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildGuildInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildGuildInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildGuildInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildModifyPositionNameRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildModifyPositionNameRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildModifyPositionNameRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		for k := range m.Name {
			v := m.Name[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintGuild(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildModifyPositionNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildModifyPositionNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildModifyPositionNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildBuildInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildBuildInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildBuildInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildBuildInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildBuildInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildBuildInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ResetTime != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.ResetTime))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PayCost) > 0 {
		for k := range m.PayCost {
			v := m.PayCost[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.PayCount != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.PayCount))
		i--
		dAtA[i] = 0x10
	}
	if m.FreeCount != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.FreeCount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildBuildRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildBuildRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildBuildRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Free {
		i--
		if m.Free {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildBuildResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildBuildResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildBuildResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ResetTime != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.ResetTime))
		i--
		dAtA[i] = 0x40
	}
	if len(m.PayCost) > 0 {
		for k := range m.PayCost {
			v := m.PayCost[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.PayCount != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.PayCount))
		i--
		dAtA[i] = 0x30
	}
	if m.FreeCount != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.FreeCount))
		i--
		dAtA[i] = 0x28
	}
	if m.Surprised != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Surprised))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Rewards) > 0 {
		for k := range m.Rewards {
			v := m.Rewards[k]
			baseI := i
			i = encodeVarintGuild(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Exp != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x10
	}
	if m.Level != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildWorldInviteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildWorldInviteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildWorldInviteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Save {
		i--
		if m.Save {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Free {
		i--
		if m.Free {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildWorldInviteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildWorldInviteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildWorldInviteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildPrivateInviteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildPrivateInviteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildPrivateInviteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Save {
		i--
		if m.Save {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildPrivateInviteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildPrivateInviteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildPrivateInviteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildRankRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildRankRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildRankRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.End != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.End))
		i--
		dAtA[i] = 0x10
	}
	if m.Start != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Start))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildRankResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildRankResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildRankResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Ending {
		i--
		if m.Ending {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Data) > 0 {
		for k := range m.Data {
			v := m.Data[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintGuild(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintGuild(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintGuild(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.SelfRank != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.SelfRank))
		i--
		dAtA[i] = 0x10
	}
	if m.Self != nil {
		{
			size, err := m.Self.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuild(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildNameExistRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildNameExistRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildNameExistRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildNameExistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildNameExistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildNameExistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Exist {
		i--
		if m.Exist {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Effic != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Effic))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Activated) > 0 {
		dAtA11 := make([]byte, len(m.Activated)*10)
		var j10 int
		for _, num1 := range m.Activated {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA11[j10] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j10++
			}
			dAtA11[j10] = uint8(num)
			j10++
		}
		i -= j10
		copy(dAtA[i:], dAtA11[:j10])
		i = encodeVarintGuild(dAtA, i, uint64(j10))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Queue) > 0 {
		for iNdEx := len(m.Queue) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Queue[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Stage != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingStartRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingStartRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingStartRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BlessId != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.BlessId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingStartResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingStartResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingStartResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Activated) > 0 {
		dAtA13 := make([]byte, len(m.Activated)*10)
		var j12 int
		for _, num1 := range m.Activated {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA13[j12] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j12++
			}
			dAtA13[j12] = uint8(num)
			j12++
		}
		i -= j12
		copy(dAtA[i:], dAtA13[:j12])
		i = encodeVarintGuild(dAtA, i, uint64(j12))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Queue) > 0 {
		for iNdEx := len(m.Queue) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Queue[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Stage != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingActivateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingActivateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingActivateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BlessId != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.BlessId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingActivateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingActivateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingActivateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Activated) > 0 {
		dAtA15 := make([]byte, len(m.Activated)*10)
		var j14 int
		for _, num1 := range m.Activated {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA15[j14] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j14++
			}
			dAtA15[j14] = uint8(num)
			j14++
		}
		i -= j14
		copy(dAtA[i:], dAtA15[:j14])
		i = encodeVarintGuild(dAtA, i, uint64(j14))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Queue) > 0 {
		for iNdEx := len(m.Queue) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Queue[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuild(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Stage != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingNextStageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingNextStageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingNextStageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_BlessingNextStageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_BlessingNextStageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_BlessingNextStageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildExpChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildExpChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildExpChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Exp != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x10
	}
	if m.Level != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_UserGuildInfoChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_UserGuildInfoChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_UserGuildInfoChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Position != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x10
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_CheatGuildResetBuildRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatGuildResetBuildRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatGuildResetBuildRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_CheatGuildResetBuildResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatGuildResetBuildResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatGuildResetBuildResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_CheatGuildAddExpRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatGuildAddExpRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatGuildAddExpRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Exp != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_CheatGuildAddExpResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatGuildAddExpResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatGuildAddExpResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_CheatRestExitGuildCDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatRestExitGuildCDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatRestExitGuildCDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_CheatRestExitGuildCDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatRestExitGuildCDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatRestExitGuildCDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_CheatSetBlessStageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatSetBlessStageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatSetBlessStageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.Stage != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_CheatSetBlessStageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_CheatSetBlessStageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_CheatSetBlessStageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_UpdateBlessingEfficRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_UpdateBlessingEfficRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_UpdateBlessingEfficRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExpiredAt != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.ExpiredAt))
		i--
		dAtA[i] = 0x18
	}
	if m.Effic != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Effic))
		i--
		dAtA[i] = 0x10
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_UpdateBlessingEfficResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_UpdateBlessingEfficResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_UpdateBlessingEfficResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintGuild(dAtA []byte, offset int, v uint64) int {
	offset -= sovGuild(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Guild) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildFindRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Name != "" {
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	if m.Lang != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.NoAudit {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("no_audit")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.NoAudit)
		needWriteComma = true
	}
	if m.CombatValue != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValue))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFindResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			v.JsonBytes(w)
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildJoinNowRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Lang != 0 {
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.CombatValue != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValue))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildJoinNowResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFindDetailsRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("id")
	w.RawByte('"')
	w.RawByte(':')
	if m.Id == nil {
		w.RawString("null")
	} else if len(m.Id) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Id {
			w.String(v)
			if i != len(m.Id)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFindDetailsResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			v.JsonBytes(w)
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildEnterRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildEnterResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.LastPosition != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("last_position")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LastPosition))
		needWriteComma = true
	}
	if m.CurPosition != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("cur_position")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CurPosition))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildCreateRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Name != "" {
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	if m.Flag != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("flag")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Flag))
		needWriteComma = true
	}
	if m.Lang != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.Intro != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("intro")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Intro)
		needWriteComma = true
	}
	if m.Notice != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("notice")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Notice)
		needWriteComma = true
	}
	if m.AutoJoin {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("auto_join")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.AutoJoin)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildCreateResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildDissolveRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildDissolveResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildModifyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Name != "" {
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	if m.Flag != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("flag")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Flag))
		needWriteComma = true
	}
	if m.Lang != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.Intro != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("intro")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Intro)
		needWriteComma = true
	}
	if m.Notice != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("notice")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Notice)
		needWriteComma = true
	}
	if m.AutoJoin != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("auto_join")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.AutoJoin))
		needWriteComma = true
	}
	if m.Greeting != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("greeting")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Greeting)
		needWriteComma = true
	}
	if m.CombatValueLimit != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value_limit")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValueLimit))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildModifyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildMembersRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.GuildId != "" {
		w.RawByte('"')
		w.RawString("guild_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.GuildId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildMembersResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("members")
	w.RawByte('"')
	w.RawByte(':')
	if m.Members == nil {
		w.RawString("null")
	} else if len(m.Members) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Members {
			v.JsonBytes(w)
			if i != len(m.Members)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildInviteListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Lang != 0 {
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.CombatValueLimit != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value_limit")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValueLimit))
		needWriteComma = true
	}
	if m.Refresh {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("refresh")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Refresh)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildInviteListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			v.JsonBytes(w)
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildHandleInviteRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Token != "" {
		w.RawByte('"')
		w.RawString("token")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Token)
		needWriteComma = true
	}
	if m.Agree {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("agree")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Agree)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildHandleInviteResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildJoinApplyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("id")
	w.RawByte('"')
	w.RawByte(':')
	if m.Id == nil {
		w.RawString("null")
	} else if len(m.Id) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Id {
			w.String(v)
			if i != len(m.Id)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildJoinApplyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildCancelApplyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != "" {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Id)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildCancelApplyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildApplyListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildApplyListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("list")
	w.RawByte('"')
	w.RawByte(':')
	if m.List == nil {
		w.RawString("null")
	} else if len(m.List) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.List {
			v.JsonBytes(w)
			if i != len(m.List)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildHandleApplyRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.Agree {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("agree")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Agree)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildHandleApplyResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildApplyRejectAllRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildApplyRejectAllResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildRemoveRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildRemoveResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("info")
	w.RawByte('"')
	w.RawByte(':')
	m.Info.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildExitRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildExitResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildPositionChangeRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.Position != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("position")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Position))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildPositionChangeResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildGuildInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildGuildInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != "" {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Id)
		needWriteComma = true
	}
	if m.Name != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildModifyPositionNameRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("name")
	w.RawByte('"')
	w.RawByte(':')
	if m.Name == nil {
		w.RawString("null")
	} else if len(m.Name) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlName := len(m.Name)
		for k, v := range m.Name {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.String(v)
			mlName--
			if mlName != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildModifyPositionNameResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildBuildInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildBuildInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.FreeCount != 0 {
		w.RawByte('"')
		w.RawString("free_count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.FreeCount))
		needWriteComma = true
	}
	if m.PayCount != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("pay_count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.PayCount))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("pay_cost")
	w.RawByte('"')
	w.RawByte(':')
	if m.PayCost == nil {
		w.RawString("null")
	} else if len(m.PayCost) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlPayCost := len(m.PayCost)
		for k, v := range m.PayCost {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlPayCost--
			if mlPayCost != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.ResetTime != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("reset_time")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ResetTime))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildBuildRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Free {
		w.RawByte('"')
		w.RawString("free")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Free)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildBuildResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Level != 0 {
		w.RawByte('"')
		w.RawString("level")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Level))
		needWriteComma = true
	}
	if m.Exp != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("exp")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Exp))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("rewards")
	w.RawByte('"')
	w.RawByte(':')
	if m.Rewards == nil {
		w.RawString("null")
	} else if len(m.Rewards) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlRewards := len(m.Rewards)
		for k, v := range m.Rewards {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlRewards--
			if mlRewards != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.Surprised != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("surprised")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Surprised))
		needWriteComma = true
	}
	if m.FreeCount != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("free_count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.FreeCount))
		needWriteComma = true
	}
	if m.PayCount != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("pay_count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.PayCount))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("pay_cost")
	w.RawByte('"')
	w.RawByte(':')
	if m.PayCost == nil {
		w.RawString("null")
	} else if len(m.PayCost) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlPayCost := len(m.PayCost)
		for k, v := range m.PayCost {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			w.Int64(int64(v))
			mlPayCost--
			if mlPayCost != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.ResetTime != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("reset_time")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ResetTime))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildWorldInviteRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Free {
		w.RawByte('"')
		w.RawString("free")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Free)
		needWriteComma = true
	}
	if m.Msg != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("msg")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Msg)
		needWriteComma = true
	}
	if m.Save {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("save")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Save)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildWorldInviteResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildPrivateInviteRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.Msg != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("msg")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Msg)
		needWriteComma = true
	}
	if m.Save {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("save")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Save)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildPrivateInviteResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildRankRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Start != 0 {
		w.RawByte('"')
		w.RawString("start")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Start))
		needWriteComma = true
	}
	if m.End != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("end")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.End))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildRankResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("self")
	w.RawByte('"')
	w.RawByte(':')
	m.Self.JsonBytes(w)
	needWriteComma = true
	if m.SelfRank != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("self_rank")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SelfRank))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("data")
	w.RawByte('"')
	w.RawByte(':')
	if m.Data == nil {
		w.RawString("null")
	} else if len(m.Data) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlData := len(m.Data)
		for k, v := range m.Data {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			v.JsonBytes(w)
			mlData--
			if mlData != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.Ending {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("ending")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Ending)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildNameExistRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Name != "" {
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildNameExistResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Exist {
		w.RawByte('"')
		w.RawString("exist")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Exist)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_BlessingInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_BlessingInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Stage != 0 {
		w.RawByte('"')
		w.RawString("stage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Stage))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("queue")
	w.RawByte('"')
	w.RawByte(':')
	if m.Queue == nil {
		w.RawString("null")
	} else if len(m.Queue) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Queue {
			v.JsonBytes(w)
			if i != len(m.Queue)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("activated")
	w.RawByte('"')
	w.RawByte(':')
	if m.Activated == nil {
		w.RawString("null")
	} else if len(m.Activated) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Activated {
			w.Int64(int64(v))
			if i != len(m.Activated)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.Effic != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("effic")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Effic))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_BlessingStartRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.BlessId != 0 {
		w.RawByte('"')
		w.RawString("bless_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BlessId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_BlessingStartResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Stage != 0 {
		w.RawByte('"')
		w.RawString("stage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Stage))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("queue")
	w.RawByte('"')
	w.RawByte(':')
	if m.Queue == nil {
		w.RawString("null")
	} else if len(m.Queue) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Queue {
			v.JsonBytes(w)
			if i != len(m.Queue)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("activated")
	w.RawByte('"')
	w.RawByte(':')
	if m.Activated == nil {
		w.RawString("null")
	} else if len(m.Activated) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Activated {
			w.Int64(int64(v))
			if i != len(m.Activated)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_BlessingActivateRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.BlessId != 0 {
		w.RawByte('"')
		w.RawString("bless_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.BlessId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_BlessingActivateResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Stage != 0 {
		w.RawByte('"')
		w.RawString("stage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Stage))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("queue")
	w.RawByte('"')
	w.RawByte(':')
	if m.Queue == nil {
		w.RawString("null")
	} else if len(m.Queue) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Queue {
			v.JsonBytes(w)
			if i != len(m.Queue)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("activated")
	w.RawByte('"')
	w.RawByte(':')
	if m.Activated == nil {
		w.RawString("null")
	} else if len(m.Activated) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Activated {
			w.Int64(int64(v))
			if i != len(m.Activated)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_BlessingNextStageRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_BlessingNextStageResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildExpChange) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Level != 0 {
		w.RawByte('"')
		w.RawString("level")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Level))
		needWriteComma = true
	}
	if m.Exp != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("exp")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Exp))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_UserGuildInfoChange) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.GuildId != "" {
		w.RawByte('"')
		w.RawString("guild_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.GuildId)
		needWriteComma = true
	}
	if m.Position != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("position")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Position))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_CheatGuildResetBuildRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_CheatGuildResetBuildResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_CheatGuildAddExpRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Exp != 0 {
		w.RawByte('"')
		w.RawString("exp")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Exp))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_CheatGuildAddExpResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_CheatRestExitGuildCDRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_CheatRestExitGuildCDResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_CheatSetBlessStageRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Stage != 0 {
		w.RawByte('"')
		w.RawString("stage")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Stage))
		needWriteComma = true
	}
	if m.Page != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("page")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Page))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_CheatSetBlessStageResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_UpdateBlessingEfficRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.GuildId != "" {
		w.RawByte('"')
		w.RawString("guild_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.GuildId)
		needWriteComma = true
	}
	if m.Effic != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("effic")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Effic))
		needWriteComma = true
	}
	if m.ExpiredAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("expired_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ExpiredAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_UpdateBlessingEfficResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild) GoString() string {
	return m.String()
}

func (m *Guild_GuildFindRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFindRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFindRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildFindResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFindResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFindResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildJoinNowRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildJoinNowRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildJoinNowRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildJoinNowResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildJoinNowResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildJoinNowResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildFindDetailsRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFindDetailsRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFindDetailsRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildFindDetailsResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFindDetailsResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFindDetailsResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildEnterRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildEnterRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildEnterRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildEnterResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildEnterResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildEnterResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildCreateRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildCreateRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildCreateRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildCreateResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildCreateResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildCreateResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildDissolveRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildDissolveRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildDissolveRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildDissolveResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildDissolveResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildDissolveResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildModifyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildModifyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildModifyRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildModifyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildModifyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildModifyResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildMembersRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildMembersRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildMembersRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildMembersResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildMembersResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildMembersResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildInviteListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildInviteListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildInviteListRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildInviteListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildInviteListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildInviteListResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildHandleInviteRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildHandleInviteRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildHandleInviteRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildHandleInviteResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildHandleInviteResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildHandleInviteResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildJoinApplyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildJoinApplyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildJoinApplyRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildJoinApplyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildJoinApplyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildJoinApplyResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildCancelApplyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildCancelApplyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildCancelApplyRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildCancelApplyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildCancelApplyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildCancelApplyResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildApplyListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildApplyListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildApplyListRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildApplyListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildApplyListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildApplyListResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildHandleApplyRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildHandleApplyRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildHandleApplyRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildHandleApplyResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildHandleApplyResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildHandleApplyResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildApplyRejectAllRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildApplyRejectAllRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildApplyRejectAllRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildApplyRejectAllResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildApplyRejectAllResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildApplyRejectAllResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildRemoveRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildRemoveRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildRemoveRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildRemoveResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildRemoveResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildRemoveResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildExitRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildExitRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildExitRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildExitResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildExitResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildExitResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildPositionChangeRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildPositionChangeRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildPositionChangeRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildPositionChangeResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildPositionChangeResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildPositionChangeResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildGuildInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildGuildInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildGuildInfoRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildGuildInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildGuildInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildGuildInfoResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildModifyPositionNameRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildModifyPositionNameRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildModifyPositionNameRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildModifyPositionNameResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildModifyPositionNameResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildModifyPositionNameResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildBuildInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildBuildInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildBuildInfoRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildBuildInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildBuildInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildBuildInfoResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildBuildRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildBuildRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildBuildRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildBuildResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildBuildResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildBuildResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildWorldInviteRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildWorldInviteRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildWorldInviteRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildWorldInviteResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildWorldInviteResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildWorldInviteResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildPrivateInviteRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildPrivateInviteRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildPrivateInviteRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildPrivateInviteResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildPrivateInviteResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildPrivateInviteResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildRankRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildRankRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildRankRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildRankResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildRankResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildRankResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildNameExistRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildNameExistRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildNameExistRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildNameExistResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildNameExistResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildNameExistResponse) GoString() string {
	return m.String()
}

func (m *Guild_BlessingInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingInfoRequest) GoString() string {
	return m.String()
}

func (m *Guild_BlessingInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingInfoResponse) GoString() string {
	return m.String()
}

func (m *Guild_BlessingStartRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingStartRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingStartRequest) GoString() string {
	return m.String()
}

func (m *Guild_BlessingStartResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingStartResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingStartResponse) GoString() string {
	return m.String()
}

func (m *Guild_BlessingActivateRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingActivateRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingActivateRequest) GoString() string {
	return m.String()
}

func (m *Guild_BlessingActivateResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingActivateResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingActivateResponse) GoString() string {
	return m.String()
}

func (m *Guild_BlessingNextStageRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingNextStageRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingNextStageRequest) GoString() string {
	return m.String()
}

func (m *Guild_BlessingNextStageResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_BlessingNextStageResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_BlessingNextStageResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildExpChange) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildExpChange) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildExpChange) GoString() string {
	return m.String()
}

func (m *Guild_UserGuildInfoChange) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_UserGuildInfoChange) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_UserGuildInfoChange) GoString() string {
	return m.String()
}

func (m *Guild_CheatGuildResetBuildRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatGuildResetBuildRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatGuildResetBuildRequest) GoString() string {
	return m.String()
}

func (m *Guild_CheatGuildResetBuildResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatGuildResetBuildResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatGuildResetBuildResponse) GoString() string {
	return m.String()
}

func (m *Guild_CheatGuildAddExpRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatGuildAddExpRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatGuildAddExpRequest) GoString() string {
	return m.String()
}

func (m *Guild_CheatGuildAddExpResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatGuildAddExpResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatGuildAddExpResponse) GoString() string {
	return m.String()
}

func (m *Guild_CheatRestExitGuildCDRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatRestExitGuildCDRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatRestExitGuildCDRequest) GoString() string {
	return m.String()
}

func (m *Guild_CheatRestExitGuildCDResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatRestExitGuildCDResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatRestExitGuildCDResponse) GoString() string {
	return m.String()
}

func (m *Guild_CheatSetBlessStageRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatSetBlessStageRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatSetBlessStageRequest) GoString() string {
	return m.String()
}

func (m *Guild_CheatSetBlessStageResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_CheatSetBlessStageResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_CheatSetBlessStageResponse) GoString() string {
	return m.String()
}

func (m *Guild_UpdateBlessingEfficRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_UpdateBlessingEfficRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_UpdateBlessingEfficRequest) GoString() string {
	return m.String()
}

func (m *Guild_UpdateBlessingEfficResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_UpdateBlessingEfficResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_UpdateBlessingEfficResponse) GoString() string {
	return m.String()
}

func (m *Guild) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildFindRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	if m.NoAudit {
		n += 2
	}
	if m.CombatValue != 0 {
		n += 1 + sovGuild(uint64(m.CombatValue))
	}
	return n
}

func (m *Guild_GuildFindResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildJoinNowRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	if m.CombatValue != 0 {
		n += 1 + sovGuild(uint64(m.CombatValue))
	}
	return n
}

func (m *Guild_GuildJoinNowResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Guild_GuildFindDetailsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Id) > 0 {
		for _, s := range m.Id {
			l = len(s)
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildFindDetailsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildEnterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildEnterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	if m.LastPosition != 0 {
		n += 1 + sovGuild(uint64(m.LastPosition))
	}
	if m.CurPosition != 0 {
		n += 1 + sovGuild(uint64(m.CurPosition))
	}
	return n
}

func (m *Guild_GuildCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Flag != 0 {
		n += 1 + sovGuild(uint64(m.Flag))
	}
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	l = len(m.Intro)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	l = len(m.Notice)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.AutoJoin {
		n += 2
	}
	return n
}

func (m *Guild_GuildCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Guild_GuildDissolveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildDissolveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildModifyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Flag != 0 {
		n += 1 + sovGuild(uint64(m.Flag))
	}
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	l = len(m.Intro)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	l = len(m.Notice)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.AutoJoin != 0 {
		n += 1 + sovGuild(uint64(m.AutoJoin))
	}
	l = len(m.Greeting)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.CombatValueLimit != 0 {
		n += 1 + sovGuild(uint64(m.CombatValueLimit))
	}
	return n
}

func (m *Guild_GuildModifyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildMembersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildMembersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Members) > 0 {
		for _, e := range m.Members {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildInviteListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	if m.CombatValueLimit != 0 {
		n += 1 + sovGuild(uint64(m.CombatValueLimit))
	}
	if m.Refresh {
		n += 2
	}
	return n
}

func (m *Guild_GuildInviteListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildHandleInviteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Agree {
		n += 2
	}
	return n
}

func (m *Guild_GuildHandleInviteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Guild_GuildJoinApplyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Id) > 0 {
		for _, s := range m.Id {
			l = len(s)
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildJoinApplyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Guild_GuildCancelApplyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildCancelApplyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildApplyListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildApplyListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildHandleApplyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Agree {
		n += 2
	}
	return n
}

func (m *Guild_GuildHandleApplyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildApplyRejectAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildApplyRejectAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildRemoveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildRemoveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildExitRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildExitResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildPositionChangeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovGuild(uint64(m.Position))
	}
	return n
}

func (m *Guild_GuildPositionChangeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildGuildInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildGuildInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildModifyPositionNameRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Name) > 0 {
		for k, v := range m.Name {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + len(v) + sovGuild(uint64(len(v)))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Guild_GuildModifyPositionNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildBuildInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildBuildInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FreeCount != 0 {
		n += 1 + sovGuild(uint64(m.FreeCount))
	}
	if m.PayCount != 0 {
		n += 1 + sovGuild(uint64(m.PayCount))
	}
	if len(m.PayCost) > 0 {
		for k, v := range m.PayCost {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	if m.ResetTime != 0 {
		n += 1 + sovGuild(uint64(m.ResetTime))
	}
	return n
}

func (m *Guild_GuildBuildRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Free {
		n += 2
	}
	return n
}

func (m *Guild_GuildBuildResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Level != 0 {
		n += 1 + sovGuild(uint64(m.Level))
	}
	if m.Exp != 0 {
		n += 1 + sovGuild(uint64(m.Exp))
	}
	if len(m.Rewards) > 0 {
		for k, v := range m.Rewards {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	if m.Surprised != 0 {
		n += 1 + sovGuild(uint64(m.Surprised))
	}
	if m.FreeCount != 0 {
		n += 1 + sovGuild(uint64(m.FreeCount))
	}
	if m.PayCount != 0 {
		n += 1 + sovGuild(uint64(m.PayCount))
	}
	if len(m.PayCost) > 0 {
		for k, v := range m.PayCost {
			_ = k
			_ = v
			mapEntrySize := 1 + sovGuild(uint64(k)) + 1 + sovGuild(uint64(v))
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	if m.ResetTime != 0 {
		n += 1 + sovGuild(uint64(m.ResetTime))
	}
	return n
}

func (m *Guild_GuildWorldInviteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Free {
		n += 2
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Save {
		n += 2
	}
	return n
}

func (m *Guild_GuildWorldInviteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildPrivateInviteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Save {
		n += 2
	}
	return n
}

func (m *Guild_GuildPrivateInviteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildRankRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Start != 0 {
		n += 1 + sovGuild(uint64(m.Start))
	}
	if m.End != 0 {
		n += 1 + sovGuild(uint64(m.End))
	}
	return n
}

func (m *Guild_GuildRankResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Self != nil {
		l = m.Self.Size()
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.SelfRank != 0 {
		n += 1 + sovGuild(uint64(m.SelfRank))
	}
	if len(m.Data) > 0 {
		for k, v := range m.Data {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovGuild(uint64(l))
			}
			mapEntrySize := 1 + sovGuild(uint64(k)) + l
			n += mapEntrySize + 1 + sovGuild(uint64(mapEntrySize))
		}
	}
	if m.Ending {
		n += 2
	}
	return n
}

func (m *Guild_GuildNameExistRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildNameExistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Exist {
		n += 2
	}
	return n
}

func (m *Guild_BlessingInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_BlessingInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Stage != 0 {
		n += 1 + sovGuild(uint64(m.Stage))
	}
	if len(m.Queue) > 0 {
		for _, e := range m.Queue {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	if len(m.Activated) > 0 {
		l = 0
		for _, e := range m.Activated {
			l += sovGuild(uint64(e))
		}
		n += 1 + sovGuild(uint64(l)) + l
	}
	if m.Effic != 0 {
		n += 1 + sovGuild(uint64(m.Effic))
	}
	return n
}

func (m *Guild_BlessingStartRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BlessId != 0 {
		n += 1 + sovGuild(uint64(m.BlessId))
	}
	return n
}

func (m *Guild_BlessingStartResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Stage != 0 {
		n += 1 + sovGuild(uint64(m.Stage))
	}
	if len(m.Queue) > 0 {
		for _, e := range m.Queue {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	if len(m.Activated) > 0 {
		l = 0
		for _, e := range m.Activated {
			l += sovGuild(uint64(e))
		}
		n += 1 + sovGuild(uint64(l)) + l
	}
	return n
}

func (m *Guild_BlessingActivateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BlessId != 0 {
		n += 1 + sovGuild(uint64(m.BlessId))
	}
	return n
}

func (m *Guild_BlessingActivateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Stage != 0 {
		n += 1 + sovGuild(uint64(m.Stage))
	}
	if len(m.Queue) > 0 {
		for _, e := range m.Queue {
			l = e.Size()
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	if len(m.Activated) > 0 {
		l = 0
		for _, e := range m.Activated {
			l += sovGuild(uint64(e))
		}
		n += 1 + sovGuild(uint64(l)) + l
	}
	return n
}

func (m *Guild_BlessingNextStageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_BlessingNextStageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildExpChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Level != 0 {
		n += 1 + sovGuild(uint64(m.Level))
	}
	if m.Exp != 0 {
		n += 1 + sovGuild(uint64(m.Exp))
	}
	return n
}

func (m *Guild_UserGuildInfoChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovGuild(uint64(m.Position))
	}
	return n
}

func (m *Guild_CheatGuildResetBuildRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_CheatGuildResetBuildResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_CheatGuildAddExpRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Exp != 0 {
		n += 1 + sovGuild(uint64(m.Exp))
	}
	return n
}

func (m *Guild_CheatGuildAddExpResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_CheatRestExitGuildCDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_CheatRestExitGuildCDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_CheatSetBlessStageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Stage != 0 {
		n += 1 + sovGuild(uint64(m.Stage))
	}
	if m.Page != 0 {
		n += 1 + sovGuild(uint64(m.Page))
	}
	return n
}

func (m *Guild_CheatSetBlessStageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_UpdateBlessingEfficRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Effic != 0 {
		n += 1 + sovGuild(uint64(m.Effic))
	}
	if m.ExpiredAt != 0 {
		n += 1 + sovGuild(uint64(m.ExpiredAt))
	}
	return n
}

func (m *Guild_UpdateBlessingEfficResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovGuild(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGuild(x uint64) (n int) {
	return sovGuild(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Guild) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Guild: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Guild: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFindRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFindRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFindRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoAudit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoAudit = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValue", wireType)
			}
			m.CombatValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFindResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFindResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFindResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &models.Guild{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildJoinNowRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildJoinNowRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildJoinNowRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValue", wireType)
			}
			m.CombatValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildJoinNowResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildJoinNowResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildJoinNowResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFindDetailsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFindDetailsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFindDetailsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFindDetailsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFindDetailsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFindDetailsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &models.Guild{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildEnterRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildEnterRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildEnterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildEnterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildEnterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildEnterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPosition", wireType)
			}
			m.LastPosition = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPosition |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurPosition", wireType)
			}
			m.CurPosition = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurPosition |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			m.Flag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flag |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Intro", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Intro = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoJoin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoJoin = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildDissolveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildDissolveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildDissolveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildDissolveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildDissolveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildDissolveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildModifyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildModifyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildModifyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			m.Flag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flag |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Intro", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Intro = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoJoin", wireType)
			}
			m.AutoJoin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AutoJoin |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Greeting", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Greeting = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValueLimit", wireType)
			}
			m.CombatValueLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValueLimit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildModifyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildModifyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildModifyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildMembersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildMembersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildMembersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildMembersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildMembersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildMembersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, &models.GuildMember{})
			if err := m.Members[len(m.Members)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildInviteListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildInviteListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildInviteListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValueLimit", wireType)
			}
			m.CombatValueLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValueLimit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Refresh", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Refresh = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildInviteListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildInviteListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildInviteListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &models.GuildInvite{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildHandleInviteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildHandleInviteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildHandleInviteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Agree", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Agree = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildHandleInviteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildHandleInviteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildHandleInviteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildJoinApplyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildJoinApplyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildJoinApplyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildJoinApplyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildJoinApplyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildJoinApplyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildCancelApplyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildCancelApplyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildCancelApplyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildCancelApplyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildCancelApplyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildCancelApplyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildApplyListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildApplyListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildApplyListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildApplyListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildApplyListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildApplyListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &models.GuildApply{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildHandleApplyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildHandleApplyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildHandleApplyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Agree", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Agree = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildHandleApplyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildHandleApplyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildHandleApplyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildApplyRejectAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildApplyRejectAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildApplyRejectAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildApplyRejectAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildApplyRejectAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildApplyRejectAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildRemoveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildRemoveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildRemoveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildRemoveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildRemoveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildRemoveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &models.Guild{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildExitRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildExitRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildExitRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildExitResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildExitResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildExitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildPositionChangeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildPositionChangeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildPositionChangeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildPositionChangeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildPositionChangeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildPositionChangeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildGuildInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildGuildInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildGuildInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildGuildInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildGuildInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildGuildInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildModifyPositionNameRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildModifyPositionNameRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildModifyPositionNameRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Name == nil {
				m.Name = make(map[int64]string)
			}
			var mapkey int64
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthGuild
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthGuild
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Name[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildModifyPositionNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildModifyPositionNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildModifyPositionNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildBuildInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildBuildInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildBuildInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildBuildInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildBuildInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildBuildInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FreeCount", wireType)
			}
			m.FreeCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FreeCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayCount", wireType)
			}
			m.PayCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PayCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PayCost == nil {
				m.PayCost = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.PayCost[mapkey] = mapvalue
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetTime", wireType)
			}
			m.ResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResetTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildBuildRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildBuildRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildBuildRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Free", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Free = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildBuildResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildBuildResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildBuildResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rewards == nil {
				m.Rewards = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Rewards[mapkey] = mapvalue
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Surprised", wireType)
			}
			m.Surprised = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Surprised |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FreeCount", wireType)
			}
			m.FreeCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FreeCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayCount", wireType)
			}
			m.PayCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PayCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PayCost == nil {
				m.PayCost = make(map[int64]int64)
			}
			var mapkey int64
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.PayCost[mapkey] = mapvalue
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetTime", wireType)
			}
			m.ResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResetTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildWorldInviteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildWorldInviteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildWorldInviteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Free", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Free = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Save", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Save = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildWorldInviteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildWorldInviteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildWorldInviteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildPrivateInviteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildPrivateInviteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildPrivateInviteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Save", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Save = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildPrivateInviteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildPrivateInviteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildPrivateInviteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildRankRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildRankRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildRankRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			m.End = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.End |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildRankResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildRankResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildRankResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Self", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Self == nil {
				m.Self = &models.Guild{}
			}
			if err := m.Self.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfRank", wireType)
			}
			m.SelfRank = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SelfRank |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = make(map[int64]*models.Guild)
			}
			var mapkey int64
			var mapvalue *models.Guild
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthGuild
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthGuild
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &models.Guild{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGuild(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGuild
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Data[mapkey] = mapvalue
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ending", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Ending = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildNameExistRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildNameExistRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildNameExistRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildNameExistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildNameExistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildNameExistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exist", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Exist = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Queue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Queue = append(m.Queue, &models.BlessingQueue{})
			if err := m.Queue[len(m.Queue)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Activated = append(m.Activated, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthGuild
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthGuild
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Activated) == 0 {
					m.Activated = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Activated = append(m.Activated, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Activated", wireType)
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Effic", wireType)
			}
			m.Effic = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Effic |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingStartRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingStartRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingStartRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlessId", wireType)
			}
			m.BlessId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlessId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingStartResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingStartResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingStartResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Queue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Queue = append(m.Queue, &models.BlessingQueue{})
			if err := m.Queue[len(m.Queue)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Activated = append(m.Activated, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthGuild
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthGuild
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Activated) == 0 {
					m.Activated = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Activated = append(m.Activated, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Activated", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingActivateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingActivateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingActivateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlessId", wireType)
			}
			m.BlessId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlessId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingActivateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingActivateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingActivateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Queue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Queue = append(m.Queue, &models.BlessingQueue{})
			if err := m.Queue[len(m.Queue)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Activated = append(m.Activated, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGuild
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthGuild
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthGuild
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Activated) == 0 {
					m.Activated = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGuild
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Activated = append(m.Activated, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Activated", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingNextStageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingNextStageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingNextStageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_BlessingNextStageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlessingNextStageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlessingNextStageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildExpChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildExpChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildExpChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_UserGuildInfoChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserGuildInfoChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserGuildInfoChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatGuildResetBuildRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatGuildResetBuildRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatGuildResetBuildRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatGuildResetBuildResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatGuildResetBuildResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatGuildResetBuildResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatGuildAddExpRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatGuildAddExpRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatGuildAddExpRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatGuildAddExpResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatGuildAddExpResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatGuildAddExpResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatRestExitGuildCDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatRestExitGuildCDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatRestExitGuildCDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatRestExitGuildCDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatRestExitGuildCDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatRestExitGuildCDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatSetBlessStageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetBlessStageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetBlessStageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_CheatSetBlessStageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheatSetBlessStageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheatSetBlessStageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_UpdateBlessingEfficRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateBlessingEfficRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateBlessingEfficRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Effic", wireType)
			}
			m.Effic = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Effic |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiredAt", wireType)
			}
			m.ExpiredAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiredAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_UpdateBlessingEfficResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateBlessingEfficResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateBlessingEfficResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGuild(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGuild
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGuild
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGuild
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGuild        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGuild          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGuild = fmt.Errorf("proto: unexpected end of group")
)
