// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/guild-filter-server/guild.proto

package guild_filter_service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	_ "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	strconv "strconv"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GuildFilterErrorCode int32

const (
	GuildFilterErrorCode_ErrGuildFilterInvalidInput GuildFilterErrorCode = 0
)

var GuildFilterErrorCode_name = map[int32]string{
	0: "ErrGuildFilterInvalidInput",
}

var GuildFilterErrorCode_value = map[string]int32{
	"ErrGuildFilterInvalidInput": 0,
}

func (GuildFilterErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0}
}

//----------------------以下所有协议仅服务端自己调用----------------------//
type Guild struct {
}

func (m *Guild) Reset()      { *m = Guild{} }
func (*Guild) ProtoMessage() {}
func (*Guild) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0}
}
func (m *Guild) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild.Merge(m, src)
}
func (m *Guild) XXX_Size() int {
	return m.Size()
}
func (m *Guild) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild.DiscardUnknown(m)
}

var xxx_messageInfo_Guild proto.InternalMessageInfo

func (*Guild) XXX_MessageName() string {
	return "guild_filter_service.Guild"
}

// 查找公会
type Guild_GuildFilterFindRequest struct {
	// 以下参数至少一个即可
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lang        int64  `protobuf:"varint,2,opt,name=lang,proto3" json:"lang,omitempty"`
	NoAudit     bool   `protobuf:"varint,3,opt,name=no_audit,json=noAudit,proto3" json:"no_audit,omitempty"`
	CombatValue int64  `protobuf:"varint,4,opt,name=combat_value,json=combatValue,proto3" json:"combat_value,omitempty"`
}

func (m *Guild_GuildFilterFindRequest) Reset()      { *m = Guild_GuildFilterFindRequest{} }
func (*Guild_GuildFilterFindRequest) ProtoMessage() {}
func (*Guild_GuildFilterFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 0}
}
func (m *Guild_GuildFilterFindRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterFindRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterFindRequest.Merge(m, src)
}
func (m *Guild_GuildFilterFindRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterFindRequest proto.InternalMessageInfo

func (m *Guild_GuildFilterFindRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Guild_GuildFilterFindRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildFilterFindRequest) GetNoAudit() bool {
	if m != nil {
		return m.NoAudit
	}
	return false
}

func (m *Guild_GuildFilterFindRequest) GetCombatValue() int64 {
	if m != nil {
		return m.CombatValue
	}
	return 0
}

func (*Guild_GuildFilterFindRequest) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterFindRequest"
}

type Guild_GuildFilterFindResponse struct {
	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (m *Guild_GuildFilterFindResponse) Reset()      { *m = Guild_GuildFilterFindResponse{} }
func (*Guild_GuildFilterFindResponse) ProtoMessage() {}
func (*Guild_GuildFilterFindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 1}
}
func (m *Guild_GuildFilterFindResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterFindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterFindResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterFindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterFindResponse.Merge(m, src)
}
func (m *Guild_GuildFilterFindResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterFindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterFindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterFindResponse proto.InternalMessageInfo

func (m *Guild_GuildFilterFindResponse) GetId() []string {
	if m != nil {
		return m.Id
	}
	return nil
}

func (*Guild_GuildFilterFindResponse) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterFindResponse"
}

// 获取可一键加入的公会
type Guild_GuildFilterCanJoinGuildRequest struct {
	Lang        int64 `protobuf:"varint,1,opt,name=lang,proto3" json:"lang,omitempty"`
	CombatValue int64 `protobuf:"varint,2,opt,name=combat_value,json=combatValue,proto3" json:"combat_value,omitempty"`
}

func (m *Guild_GuildFilterCanJoinGuildRequest) Reset()      { *m = Guild_GuildFilterCanJoinGuildRequest{} }
func (*Guild_GuildFilterCanJoinGuildRequest) ProtoMessage() {}
func (*Guild_GuildFilterCanJoinGuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 2}
}
func (m *Guild_GuildFilterCanJoinGuildRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterCanJoinGuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterCanJoinGuildRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterCanJoinGuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterCanJoinGuildRequest.Merge(m, src)
}
func (m *Guild_GuildFilterCanJoinGuildRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterCanJoinGuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterCanJoinGuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterCanJoinGuildRequest proto.InternalMessageInfo

func (m *Guild_GuildFilterCanJoinGuildRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildFilterCanJoinGuildRequest) GetCombatValue() int64 {
	if m != nil {
		return m.CombatValue
	}
	return 0
}

func (*Guild_GuildFilterCanJoinGuildRequest) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterCanJoinGuildRequest"
}

type Guild_GuildFilterCanJoinGuildResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Guild_GuildFilterCanJoinGuildResponse) Reset()      { *m = Guild_GuildFilterCanJoinGuildResponse{} }
func (*Guild_GuildFilterCanJoinGuildResponse) ProtoMessage() {}
func (*Guild_GuildFilterCanJoinGuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 3}
}
func (m *Guild_GuildFilterCanJoinGuildResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterCanJoinGuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterCanJoinGuildResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterCanJoinGuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterCanJoinGuildResponse.Merge(m, src)
}
func (m *Guild_GuildFilterCanJoinGuildResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterCanJoinGuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterCanJoinGuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterCanJoinGuildResponse proto.InternalMessageInfo

func (m *Guild_GuildFilterCanJoinGuildResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (*Guild_GuildFilterCanJoinGuildResponse) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterCanJoinGuildResponse"
}

// 添加公会
type Guild_GuildFilterUpdateRequest struct {
	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level            int64  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Lang             int64  `protobuf:"varint,4,opt,name=lang,proto3" json:"lang,omitempty"`
	CombatValueLimit int64  `protobuf:"varint,5,opt,name=combat_value_limit,json=combatValueLimit,proto3" json:"combat_value_limit,omitempty"`
	AutoJoin         bool   `protobuf:"varint,6,opt,name=auto_join,json=autoJoin,proto3" json:"auto_join,omitempty"`
	Active           int64  `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	Full             bool   `protobuf:"varint,8,opt,name=full,proto3" json:"full,omitempty"`
}

func (m *Guild_GuildFilterUpdateRequest) Reset()      { *m = Guild_GuildFilterUpdateRequest{} }
func (*Guild_GuildFilterUpdateRequest) ProtoMessage() {}
func (*Guild_GuildFilterUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 4}
}
func (m *Guild_GuildFilterUpdateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterUpdateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterUpdateRequest.Merge(m, src)
}
func (m *Guild_GuildFilterUpdateRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterUpdateRequest proto.InternalMessageInfo

func (m *Guild_GuildFilterUpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Guild_GuildFilterUpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Guild_GuildFilterUpdateRequest) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Guild_GuildFilterUpdateRequest) GetLang() int64 {
	if m != nil {
		return m.Lang
	}
	return 0
}

func (m *Guild_GuildFilterUpdateRequest) GetCombatValueLimit() int64 {
	if m != nil {
		return m.CombatValueLimit
	}
	return 0
}

func (m *Guild_GuildFilterUpdateRequest) GetAutoJoin() bool {
	if m != nil {
		return m.AutoJoin
	}
	return false
}

func (m *Guild_GuildFilterUpdateRequest) GetActive() int64 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *Guild_GuildFilterUpdateRequest) GetFull() bool {
	if m != nil {
		return m.Full
	}
	return false
}

func (*Guild_GuildFilterUpdateRequest) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterUpdateRequest"
}

type Guild_GuildFilterUpdateResponse struct {
}

func (m *Guild_GuildFilterUpdateResponse) Reset()      { *m = Guild_GuildFilterUpdateResponse{} }
func (*Guild_GuildFilterUpdateResponse) ProtoMessage() {}
func (*Guild_GuildFilterUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 5}
}
func (m *Guild_GuildFilterUpdateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterUpdateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterUpdateResponse.Merge(m, src)
}
func (m *Guild_GuildFilterUpdateResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterUpdateResponse proto.InternalMessageInfo

func (*Guild_GuildFilterUpdateResponse) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterUpdateResponse"
}

// 移除公会
type Guild_GuildFilterDeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Guild_GuildFilterDeleteRequest) Reset()      { *m = Guild_GuildFilterDeleteRequest{} }
func (*Guild_GuildFilterDeleteRequest) ProtoMessage() {}
func (*Guild_GuildFilterDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 6}
}
func (m *Guild_GuildFilterDeleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterDeleteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterDeleteRequest.Merge(m, src)
}
func (m *Guild_GuildFilterDeleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterDeleteRequest proto.InternalMessageInfo

func (m *Guild_GuildFilterDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (*Guild_GuildFilterDeleteRequest) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterDeleteRequest"
}

type Guild_GuildFilterDeleteResponse struct {
}

func (m *Guild_GuildFilterDeleteResponse) Reset()      { *m = Guild_GuildFilterDeleteResponse{} }
func (*Guild_GuildFilterDeleteResponse) ProtoMessage() {}
func (*Guild_GuildFilterDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a886f2f758e43409, []int{0, 7}
}
func (m *Guild_GuildFilterDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Guild_GuildFilterDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Guild_GuildFilterDeleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Guild_GuildFilterDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild_GuildFilterDeleteResponse.Merge(m, src)
}
func (m *Guild_GuildFilterDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *Guild_GuildFilterDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild_GuildFilterDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Guild_GuildFilterDeleteResponse proto.InternalMessageInfo

func (*Guild_GuildFilterDeleteResponse) XXX_MessageName() string {
	return "guild_filter_service.Guild.GuildFilterDeleteResponse"
}
func init() {
	proto.RegisterEnum("guild_filter_service.GuildFilterErrorCode", GuildFilterErrorCode_name, GuildFilterErrorCode_value)
	proto.RegisterType((*Guild)(nil), "guild_filter_service.Guild")
	proto.RegisterType((*Guild_GuildFilterFindRequest)(nil), "guild_filter_service.Guild.GuildFilterFindRequest")
	proto.RegisterType((*Guild_GuildFilterFindResponse)(nil), "guild_filter_service.Guild.GuildFilterFindResponse")
	proto.RegisterType((*Guild_GuildFilterCanJoinGuildRequest)(nil), "guild_filter_service.Guild.GuildFilterCanJoinGuildRequest")
	proto.RegisterType((*Guild_GuildFilterCanJoinGuildResponse)(nil), "guild_filter_service.Guild.GuildFilterCanJoinGuildResponse")
	proto.RegisterType((*Guild_GuildFilterUpdateRequest)(nil), "guild_filter_service.Guild.GuildFilterUpdateRequest")
	proto.RegisterType((*Guild_GuildFilterUpdateResponse)(nil), "guild_filter_service.Guild.GuildFilterUpdateResponse")
	proto.RegisterType((*Guild_GuildFilterDeleteRequest)(nil), "guild_filter_service.Guild.GuildFilterDeleteRequest")
	proto.RegisterType((*Guild_GuildFilterDeleteResponse)(nil), "guild_filter_service.Guild.GuildFilterDeleteResponse")
}

func init() {
	proto.RegisterFile("proto/guild-filter-server/guild.proto", fileDescriptor_a886f2f758e43409)
}

var fileDescriptor_a886f2f758e43409 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0xce, 0x64, 0x7f, 0x74, 0x77, 0x14, 0xad, 0xc3, 0xda, 0x4e, 0x53, 0x18, 0x57, 0x41, 0x58,
	0x8b, 0x6b, 0x11, 0xf1, 0x0f, 0xd0, 0xda, 0x4a, 0x45, 0x2f, 0x01, 0x15, 0xf4, 0x10, 0x66, 0x93,
	0x69, 0x19, 0x99, 0xcc, 0xac, 0xc9, 0x24, 0x47, 0x4f, 0x2a, 0xe2, 0x49, 0x10, 0x11, 0x3c, 0x79,
	0x11, 0xfc, 0x07, 0xbc, 0x7a, 0xee, 0xb1, 0xc7, 0xde, 0xd4, 0x2c, 0xd6, 0x1e, 0xfd, 0x13, 0x24,
	0x93, 0x6e, 0x99, 0xa6, 0xee, 0xed, 0xbd, 0xef, 0xfb, 0xde, 0xcb, 0xf7, 0xbd, 0x30, 0xf0, 0xf2,
	0x38, 0x51, 0x5a, 0xad, 0x6e, 0x67, 0x5c, 0x44, 0xc3, 0x2d, 0x2e, 0x34, 0x4b, 0x86, 0x29, 0x4b,
	0x72, 0x96, 0x54, 0xd8, 0x35, 0xc3, 0xa3, 0x9e, 0x69, 0x82, 0x4a, 0x10, 0x94, 0x02, 0x1e, 0x32,
	0x0f, 0x57, 0xc3, 0xb1, 0x8a, 0x98, 0x48, 0x6d, 0xbd, 0xb7, 0x78, 0x8c, 0x19, 0xd1, 0x94, 0x55,
	0xc4, 0xa5, 0xd7, 0x2d, 0xd8, 0xba, 0x5b, 0x0a, 0xbd, 0x17, 0x70, 0xc1, 0x14, 0x1b, 0x66, 0xe7,
	0x06, 0x97, 0x91, 0xcf, 0x9e, 0x67, 0x2c, 0xd5, 0x08, 0xc1, 0xa6, 0xa4, 0x31, 0xc3, 0xa0, 0x0f,
	0x06, 0x5d, 0xdf, 0xd4, 0x25, 0x26, 0xa8, 0xdc, 0xc6, 0x6e, 0x1f, 0x0c, 0x1a, 0xbe, 0xa9, 0xd1,
	0x12, 0xec, 0x48, 0x15, 0xd0, 0x2c, 0xe2, 0x1a, 0x37, 0xfa, 0x60, 0xd0, 0xf1, 0xe7, 0xa4, 0xba,
	0x55, 0xb6, 0xe8, 0x22, 0x3c, 0x1d, 0xaa, 0x78, 0x44, 0x75, 0x90, 0x53, 0x91, 0x31, 0xdc, 0x34,
	0x63, 0xa7, 0x2a, 0xec, 0x51, 0x09, 0x79, 0x57, 0xe0, 0xe2, 0x89, 0xef, 0xa7, 0x63, 0x25, 0x53,
	0x86, 0xce, 0x40, 0x97, 0x47, 0x18, 0xf4, 0x1b, 0x83, 0xae, 0xef, 0xf2, 0xc8, 0x7b, 0x0c, 0x89,
	0x25, 0x5d, 0xa3, 0xf2, 0x9e, 0xe2, 0xd2, 0x20, 0x96, 0x65, 0x63, 0x0f, 0x58, 0xf6, 0xea, 0x1e,
	0xdc, 0x93, 0x1e, 0xae, 0xc3, 0x0b, 0x33, 0x17, 0xd7, 0xbc, 0x80, 0x43, 0x2f, 0x3f, 0x00, 0xc4,
	0xd6, 0xcc, 0xc3, 0x71, 0x44, 0x35, 0x9b, 0xda, 0xa8, 0x89, 0x8f, 0x2e, 0xe9, 0x5a, 0x97, 0xec,
	0xc1, 0x96, 0x60, 0x39, 0x13, 0xe6, 0x64, 0x0d, 0xbf, 0x6a, 0x8e, 0x02, 0x34, 0xad, 0x00, 0x57,
	0x21, 0xb2, 0x03, 0x04, 0x82, 0xc7, 0x5c, 0xe3, 0x96, 0x51, 0xcc, 0x5b, 0x31, 0xee, 0x97, 0x38,
	0x5a, 0x86, 0x5d, 0x9a, 0x69, 0x15, 0x3c, 0x53, 0x5c, 0xe2, 0xb6, 0xf9, 0x1d, 0x9d, 0x12, 0x28,
	0x23, 0xa1, 0x05, 0xd8, 0xa6, 0xa1, 0xe6, 0x39, 0xc3, 0x73, 0x66, 0xfc, 0xb0, 0x2b, 0x3f, 0xbb,
	0x95, 0x09, 0x81, 0x3b, 0x46, 0x6f, 0x6a, 0x6f, 0x19, 0x2e, 0xfd, 0x27, 0x60, 0x75, 0x0e, 0x6f,
	0xe5, 0x58, 0xfa, 0x3b, 0x4c, 0xb0, 0x99, 0xe9, 0x6b, 0x8b, 0xa6, 0xda, 0x6a, 0xd1, 0xca, 0x03,
	0xd8, 0xb3, 0xc8, 0xf5, 0x24, 0x51, 0xc9, 0x9a, 0x8a, 0x18, 0xba, 0x09, 0xbd, 0xf5, 0x24, 0xb1,
	0xa8, 0x4d, 0x99, 0x53, 0xc1, 0xa3, 0x4d, 0x39, 0xce, 0xf4, 0xbc, 0xe3, 0x9d, 0x7f, 0xfb, 0x0d,
	0x9f, 0x43, 0x67, 0xf7, 0x3f, 0x7e, 0xde, 0xff, 0xf0, 0xe6, 0xcf, 0xa7, 0x97, 0x07, 0xdf, 0xdf,
	0xff, 0x7e, 0xf5, 0xe5, 0xf6, 0xd3, 0xbd, 0x5f, 0xc4, 0xf9, 0x5a, 0x10, 0xb0, 0x53, 0x10, 0xb0,
	0x5b, 0x10, 0xf0, 0xb3, 0x20, 0xe0, 0xa0, 0x20, 0xce, 0xdf, 0x82, 0x80, 0x77, 0x13, 0xe2, 0xec,
	0x4c, 0x08, 0xd8, 0x9d, 0x10, 0x67, 0x6f, 0x42, 0x9c, 0x27, 0xc3, 0x50, 0x71, 0x39, 0x7d, 0x67,
	0xa1, 0x8a, 0x63, 0x25, 0x57, 0xad, 0x87, 0x58, 0x7b, 0x67, 0xa3, 0xb6, 0xe1, 0x6e, 0xfc, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0xe3, 0xa7, 0x97, 0xc8, 0xad, 0x03, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterFindRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterFindResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterCanJoinGuildRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterCanJoinGuildResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterUpdateRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterUpdateResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterDeleteRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuild_GuildFilterDeleteResponse.Get().(proto.Message)
	})
}

var poolGuild = &sync.Pool{New: func() interface{} { return &Guild{} }}

func (m *Guild) ReleasePool() { m.Reset(); poolGuild.Put(m); m = nil }

var poolGuild_GuildFilterFindRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterFindRequest{} }}

func (m *Guild_GuildFilterFindRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterFindRequest.Put(m)
	m = nil
}

var poolGuild_GuildFilterFindResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterFindResponse{} }}

func (m *Guild_GuildFilterFindResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterFindResponse.Put(m)
	m = nil
}

var poolGuild_GuildFilterCanJoinGuildRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterCanJoinGuildRequest{} }}

func (m *Guild_GuildFilterCanJoinGuildRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterCanJoinGuildRequest.Put(m)
	m = nil
}

var poolGuild_GuildFilterCanJoinGuildResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterCanJoinGuildResponse{} }}

func (m *Guild_GuildFilterCanJoinGuildResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterCanJoinGuildResponse.Put(m)
	m = nil
}

var poolGuild_GuildFilterUpdateRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterUpdateRequest{} }}

func (m *Guild_GuildFilterUpdateRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterUpdateRequest.Put(m)
	m = nil
}

var poolGuild_GuildFilterUpdateResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterUpdateResponse{} }}

func (m *Guild_GuildFilterUpdateResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterUpdateResponse.Put(m)
	m = nil
}

var poolGuild_GuildFilterDeleteRequest = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterDeleteRequest{} }}

func (m *Guild_GuildFilterDeleteRequest) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterDeleteRequest.Put(m)
	m = nil
}

var poolGuild_GuildFilterDeleteResponse = &sync.Pool{New: func() interface{} { return &Guild_GuildFilterDeleteResponse{} }}

func (m *Guild_GuildFilterDeleteResponse) ReleasePool() {
	m.Reset()
	poolGuild_GuildFilterDeleteResponse.Put(m)
	m = nil
}
func (x GuildFilterErrorCode) String() string {
	s, ok := GuildFilterErrorCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Guild) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild)
	if !ok {
		that2, ok := that.(Guild)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildFilterFindRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterFindRequest)
	if !ok {
		that2, ok := that.(Guild_GuildFilterFindRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.NoAudit != that1.NoAudit {
		return false
	}
	if this.CombatValue != that1.CombatValue {
		return false
	}
	return true
}
func (this *Guild_GuildFilterFindResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterFindResponse)
	if !ok {
		that2, ok := that.(Guild_GuildFilterFindResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Id) != len(that1.Id) {
		return false
	}
	for i := range this.Id {
		if this.Id[i] != that1.Id[i] {
			return false
		}
	}
	return true
}
func (this *Guild_GuildFilterCanJoinGuildRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterCanJoinGuildRequest)
	if !ok {
		that2, ok := that.(Guild_GuildFilterCanJoinGuildRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.CombatValue != that1.CombatValue {
		return false
	}
	return true
}
func (this *Guild_GuildFilterCanJoinGuildResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterCanJoinGuildResponse)
	if !ok {
		that2, ok := that.(Guild_GuildFilterCanJoinGuildResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *Guild_GuildFilterUpdateRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterUpdateRequest)
	if !ok {
		that2, ok := that.(Guild_GuildFilterUpdateRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Level != that1.Level {
		return false
	}
	if this.Lang != that1.Lang {
		return false
	}
	if this.CombatValueLimit != that1.CombatValueLimit {
		return false
	}
	if this.AutoJoin != that1.AutoJoin {
		return false
	}
	if this.Active != that1.Active {
		return false
	}
	if this.Full != that1.Full {
		return false
	}
	return true
}
func (this *Guild_GuildFilterUpdateResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterUpdateResponse)
	if !ok {
		that2, ok := that.(Guild_GuildFilterUpdateResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *Guild_GuildFilterDeleteRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterDeleteRequest)
	if !ok {
		that2, ok := that.(Guild_GuildFilterDeleteRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *Guild_GuildFilterDeleteResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Guild_GuildFilterDeleteResponse)
	if !ok {
		that2, ok := that.(Guild_GuildFilterDeleteResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (m *Guild) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterFindRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterFindRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterFindRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CombatValue != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValue))
		i--
		dAtA[i] = 0x20
	}
	if m.NoAudit {
		i--
		if m.NoAudit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterFindResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterFindResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterFindResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Id[iNdEx])
			copy(dAtA[i:], m.Id[iNdEx])
			i = encodeVarintGuild(dAtA, i, uint64(len(m.Id[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterCanJoinGuildRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterCanJoinGuildRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterCanJoinGuildRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CombatValue != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValue))
		i--
		dAtA[i] = 0x10
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterCanJoinGuildResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterCanJoinGuildResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterCanJoinGuildResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterUpdateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterUpdateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterUpdateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Full {
		i--
		if m.Full {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.Active != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Active))
		i--
		dAtA[i] = 0x38
	}
	if m.AutoJoin {
		i--
		if m.AutoJoin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.CombatValueLimit != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.CombatValueLimit))
		i--
		dAtA[i] = 0x28
	}
	if m.Lang != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Lang))
		i--
		dAtA[i] = 0x20
	}
	if m.Level != 0 {
		i = encodeVarintGuild(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterUpdateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterUpdateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterDeleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterDeleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterDeleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGuild(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Guild_GuildFilterDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Guild_GuildFilterDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Guild_GuildFilterDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintGuild(dAtA []byte, offset int, v uint64) int {
	offset -= sovGuild(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Guild) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildFilterFindRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Name != "" {
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	if m.Lang != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.NoAudit {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("no_audit")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.NoAudit)
		needWriteComma = true
	}
	if m.CombatValue != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValue))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFilterFindResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("id")
	w.RawByte('"')
	w.RawByte(':')
	if m.Id == nil {
		w.RawString("null")
	} else if len(m.Id) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.Id {
			w.String(v)
			if i != len(m.Id)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFilterCanJoinGuildRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Lang != 0 {
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.CombatValue != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValue))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFilterCanJoinGuildResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != "" {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Id)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFilterUpdateRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != "" {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Id)
		needWriteComma = true
	}
	if m.Name != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("name")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Name)
		needWriteComma = true
	}
	if m.Level != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("level")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Level))
		needWriteComma = true
	}
	if m.Lang != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("lang")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Lang))
		needWriteComma = true
	}
	if m.CombatValueLimit != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("combat_value_limit")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.CombatValueLimit))
		needWriteComma = true
	}
	if m.AutoJoin {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("auto_join")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.AutoJoin)
		needWriteComma = true
	}
	if m.Active != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("active")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Active))
		needWriteComma = true
	}
	if m.Full {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("full")
		w.RawByte('"')
		w.RawByte(':')
		w.Bool(m.Full)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFilterUpdateResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild_GuildFilterDeleteRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Id != "" {
		w.RawByte('"')
		w.RawString("id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Id)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Guild_GuildFilterDeleteResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *Guild) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterFindRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterFindRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterFindRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterFindResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterFindResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterFindResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterCanJoinGuildRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterCanJoinGuildRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterCanJoinGuildRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterCanJoinGuildResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterCanJoinGuildResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterCanJoinGuildResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterUpdateRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterUpdateRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterUpdateRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterUpdateResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterUpdateResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterUpdateResponse) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterDeleteRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterDeleteRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterDeleteRequest) GoString() string {
	return m.String()
}

func (m *Guild_GuildFilterDeleteResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Guild_GuildFilterDeleteResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Guild_GuildFilterDeleteResponse) GoString() string {
	return m.String()
}

func (m *Guild) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildFilterFindRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	if m.NoAudit {
		n += 2
	}
	if m.CombatValue != 0 {
		n += 1 + sovGuild(uint64(m.CombatValue))
	}
	return n
}

func (m *Guild_GuildFilterFindResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Id) > 0 {
		for _, s := range m.Id {
			l = len(s)
			n += 1 + l + sovGuild(uint64(l))
		}
	}
	return n
}

func (m *Guild_GuildFilterCanJoinGuildRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	if m.CombatValue != 0 {
		n += 1 + sovGuild(uint64(m.CombatValue))
	}
	return n
}

func (m *Guild_GuildFilterCanJoinGuildResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildFilterUpdateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	if m.Level != 0 {
		n += 1 + sovGuild(uint64(m.Level))
	}
	if m.Lang != 0 {
		n += 1 + sovGuild(uint64(m.Lang))
	}
	if m.CombatValueLimit != 0 {
		n += 1 + sovGuild(uint64(m.CombatValueLimit))
	}
	if m.AutoJoin {
		n += 2
	}
	if m.Active != 0 {
		n += 1 + sovGuild(uint64(m.Active))
	}
	if m.Full {
		n += 2
	}
	return n
}

func (m *Guild_GuildFilterUpdateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Guild_GuildFilterDeleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGuild(uint64(l))
	}
	return n
}

func (m *Guild_GuildFilterDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovGuild(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGuild(x uint64) (n int) {
	return sovGuild(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Guild) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Guild: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Guild: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterFindRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterFindRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterFindRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoAudit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoAudit = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValue", wireType)
			}
			m.CombatValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterFindResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterFindResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterFindResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterCanJoinGuildRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterCanJoinGuildRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterCanJoinGuildRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValue", wireType)
			}
			m.CombatValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterCanJoinGuildResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterCanJoinGuildResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterCanJoinGuildResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterUpdateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterUpdateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterUpdateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			m.Lang = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombatValueLimit", wireType)
			}
			m.CombatValueLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CombatValueLimit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoJoin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoJoin = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			m.Active = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Active |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Full", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Full = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterUpdateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterUpdateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterDeleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterDeleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterDeleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Guild_GuildFilterDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildFilterDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildFilterDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGuild(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGuild
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuild
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGuild
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGuild
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGuild
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGuild        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGuild          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGuild = fmt.Errorf("proto: unexpected end of group")
)
