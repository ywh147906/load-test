// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/dao/ritual_task.proto

package dao

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_bytespool "github.com/ywh147906/load-test/common/bytespool"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 混沌的仪式
type ChaosRitual struct {
	RoleId string              `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Ritual *models.ChaosRitual `protobuf:"bytes,2,opt,name=ritual,proto3" json:"ritual,omitempty"`
}

func (m *ChaosRitual) Reset()      { *m = ChaosRitual{} }
func (*ChaosRitual) ProtoMessage() {}
func (*ChaosRitual) Descriptor() ([]byte, []int) {
	return fileDescriptor_d81a5ba3d138642e, []int{0}
}
func (m *ChaosRitual) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChaosRitual) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChaosRitual.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChaosRitual) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaosRitual.Merge(m, src)
}
func (m *ChaosRitual) XXX_Size() int {
	return m.Size()
}
func (m *ChaosRitual) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaosRitual.DiscardUnknown(m)
}

var xxx_messageInfo_ChaosRitual proto.InternalMessageInfo

func (m *ChaosRitual) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ChaosRitual) GetRitual() *models.ChaosRitual {
	if m != nil {
		return m.Ritual
	}
	return nil
}

func (*ChaosRitual) XXX_MessageName() string {
	return "dao.ChaosRitual"
}
func init() {
	proto.RegisterType((*ChaosRitual)(nil), "dao.ChaosRitual")
}

func init() { proto.RegisterFile("proto/dao/ritual_task.proto", fileDescriptor_d81a5ba3d138642e) }

var fileDescriptor_d81a5ba3d138642e = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x49, 0xcc, 0xd7, 0x2f, 0xca, 0x2c, 0x29, 0x4d, 0xcc, 0x89, 0x2f, 0x49, 0x2c,
	0xce, 0xd6, 0x03, 0x8b, 0x0a, 0x31, 0xa7, 0x24, 0xe6, 0x4b, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x43,
	0x54, 0x81, 0x58, 0x10, 0x29, 0x29, 0x39, 0x88, 0x48, 0x6e, 0x7e, 0x4a, 0x6a, 0x4e, 0x31, 0xa6,
	0x56, 0xa5, 0x68, 0x2e, 0x6e, 0xe7, 0x8c, 0xc4, 0xfc, 0xe2, 0x20, 0xb0, 0x8c, 0x90, 0x3c, 0x17,
	0x7b, 0x51, 0x7e, 0x4e, 0x6a, 0x7c, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0xa7, 0x13, 0xdb,
	0xa7, 0x7b, 0xf2, 0x4c, 0x05, 0xd9, 0x41, 0x6c, 0x20, 0x61, 0xcf, 0x14, 0x21, 0x6d, 0x2e, 0x36,
	0x88, 0x21, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0xc2, 0x7a, 0x10, 0xa3, 0xf5, 0x90, 0x4c,
	0x09, 0x82, 0x2a, 0x71, 0xf2, 0xba, 0xf1, 0x50, 0x8e, 0x61, 0xc5, 0x23, 0x39, 0xc6, 0x13, 0x8f,
	0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0xf1, 0xc5, 0x23, 0x39, 0x86, 0x0f,
	0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0x38, 0xf1, 0x58, 0x8e, 0xf1, 0xc2, 0x63, 0x39, 0x86,
	0x1b, 0x8f, 0xe5, 0x18, 0xa2, 0x64, 0x92, 0xf3, 0x33, 0xf3, 0x74, 0x8b, 0x53, 0x8b, 0xca, 0x52,
	0x8b, 0xf4, 0x93, 0xf3, 0x73, 0x73, 0xf3, 0xf3, 0xf4, 0xe1, 0xbe, 0x4e, 0x62, 0x03, 0x33, 0x8d,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x1c, 0x82, 0x0e, 0x09, 0x01, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolChaosRitual.Get().(proto.Message)
	})
}

var poolChaosRitual = &sync.Pool{New: func() interface{} { return &ChaosRitual{} }}

func (m *ChaosRitual) ReleasePool() { m.Reset(); poolChaosRitual.Put(m); m = nil }

func (m *ChaosRitual) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *ChaosRitual) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *ChaosRitual) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *ChaosRitual) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *ChaosRitual) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (this *ChaosRitual) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ChaosRitual)
	if !ok {
		that2, ok := that.(ChaosRitual)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Ritual.Equal(that1.Ritual) {
		return false
	}
	return true
}
func (m *ChaosRitual) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChaosRitual) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChaosRitual) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Ritual != nil {
		{
			size, err := m.Ritual.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRitualTask(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintRitualTask(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRitualTask(dAtA []byte, offset int, v uint64) int {
	offset -= sovRitualTask(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *ChaosRitual) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("ritual")
	w.RawByte('"')
	w.RawByte(':')
	m.Ritual.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ChaosRitual) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ChaosRitual) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ChaosRitual) GoString() string {
	return m.String()
}

func (m *ChaosRitual) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovRitualTask(uint64(l))
	}
	if m.Ritual != nil {
		l = m.Ritual.Size()
		n += 1 + l + sovRitualTask(uint64(l))
	}
	return n
}

func sovRitualTask(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRitualTask(x uint64) (n int) {
	return sovRitualTask(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ChaosRitual) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRitualTask
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChaosRitual: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChaosRitual: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRitualTask
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRitualTask
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRitualTask
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ritual", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRitualTask
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRitualTask
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRitualTask
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ritual == nil {
				m.Ritual = &models.ChaosRitual{}
			}
			if err := m.Ritual.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRitualTask(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRitualTask
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRitualTask(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRitualTask
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRitualTask
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRitualTask
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRitualTask
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRitualTask
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRitualTask
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRitualTask        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRitualTask          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRitualTask = fmt.Errorf("proto: unexpected end of group")
)
