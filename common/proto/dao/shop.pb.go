// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/dao/shop.proto

package dao

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_bytespool "github.com/ywh147906/load-test/common/bytespool"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 普通商店
type Shop struct {
	RoleId string            `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Data   *ManualUpdateShop `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Shop) Reset()      { *m = Shop{} }
func (*Shop) ProtoMessage() {}
func (*Shop) Descriptor() ([]byte, []int) {
	return fileDescriptor_398cb62ed87b808c, []int{0}
}
func (m *Shop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Shop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Shop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Shop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shop.Merge(m, src)
}
func (m *Shop) XXX_Size() int {
	return m.Size()
}
func (m *Shop) XXX_DiscardUnknown() {
	xxx_messageInfo_Shop.DiscardUnknown(m)
}

var xxx_messageInfo_Shop proto.InternalMessageInfo

func (m *Shop) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *Shop) GetData() *ManualUpdateShop {
	if m != nil {
		return m.Data
	}
	return nil
}

func (*Shop) XXX_MessageName() string {
	return "dao.Shop"
}

// 竞技场商店
type ArenaShop struct {
	RoleId string          `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Data   *AutoUpdateShop `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ArenaShop) Reset()      { *m = ArenaShop{} }
func (*ArenaShop) ProtoMessage() {}
func (*ArenaShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_398cb62ed87b808c, []int{1}
}
func (m *ArenaShop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArenaShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArenaShop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArenaShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArenaShop.Merge(m, src)
}
func (m *ArenaShop) XXX_Size() int {
	return m.Size()
}
func (m *ArenaShop) XXX_DiscardUnknown() {
	xxx_messageInfo_ArenaShop.DiscardUnknown(m)
}

var xxx_messageInfo_ArenaShop proto.InternalMessageInfo

func (m *ArenaShop) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ArenaShop) GetData() *AutoUpdateShop {
	if m != nil {
		return m.Data
	}
	return nil
}

func (*ArenaShop) XXX_MessageName() string {
	return "dao.ArenaShop"
}

// 公会商店
type GuildShop struct {
	RoleId string          `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Data   *AutoUpdateShop `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *GuildShop) Reset()      { *m = GuildShop{} }
func (*GuildShop) ProtoMessage() {}
func (*GuildShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_398cb62ed87b808c, []int{2}
}
func (m *GuildShop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildShop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildShop.Merge(m, src)
}
func (m *GuildShop) XXX_Size() int {
	return m.Size()
}
func (m *GuildShop) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildShop.DiscardUnknown(m)
}

var xxx_messageInfo_GuildShop proto.InternalMessageInfo

func (m *GuildShop) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *GuildShop) GetData() *AutoUpdateShop {
	if m != nil {
		return m.Data
	}
	return nil
}

func (*GuildShop) XXX_MessageName() string {
	return "dao.GuildShop"
}

// 势力商店
type CampShop struct {
	RoleId string            `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Data   *ManualUpdateShop `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *CampShop) Reset()      { *m = CampShop{} }
func (*CampShop) ProtoMessage() {}
func (*CampShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_398cb62ed87b808c, []int{3}
}
func (m *CampShop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampShop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampShop.Merge(m, src)
}
func (m *CampShop) XXX_Size() int {
	return m.Size()
}
func (m *CampShop) XXX_DiscardUnknown() {
	xxx_messageInfo_CampShop.DiscardUnknown(m)
}

var xxx_messageInfo_CampShop proto.InternalMessageInfo

func (m *CampShop) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *CampShop) GetData() *ManualUpdateShop {
	if m != nil {
		return m.Data
	}
	return nil
}

func (*CampShop) XXX_MessageName() string {
	return "dao.CampShop"
}

// 手动更新商店
type ManualUpdateShop struct {
	Detail              map[int64]*models.TypeShopList `protobuf:"bytes,1,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastRefreshAt       int64                          `protobuf:"varint,2,opt,name=last_refresh_at,json=lastRefreshAt,proto3" json:"last_refresh_at,omitempty"`
	TodayRefreshCnt     int64                          `protobuf:"varint,3,opt,name=today_refresh_cnt,json=todayRefreshCnt,proto3" json:"today_refresh_cnt,omitempty"`
	LastManualRefreshAt int64                          `protobuf:"varint,4,opt,name=last_manual_refresh_at,json=lastManualRefreshAt,proto3" json:"last_manual_refresh_at,omitempty"`
}

func (m *ManualUpdateShop) Reset()      { *m = ManualUpdateShop{} }
func (*ManualUpdateShop) ProtoMessage() {}
func (*ManualUpdateShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_398cb62ed87b808c, []int{4}
}
func (m *ManualUpdateShop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManualUpdateShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManualUpdateShop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManualUpdateShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManualUpdateShop.Merge(m, src)
}
func (m *ManualUpdateShop) XXX_Size() int {
	return m.Size()
}
func (m *ManualUpdateShop) XXX_DiscardUnknown() {
	xxx_messageInfo_ManualUpdateShop.DiscardUnknown(m)
}

var xxx_messageInfo_ManualUpdateShop proto.InternalMessageInfo

func (m *ManualUpdateShop) GetDetail() map[int64]*models.TypeShopList {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *ManualUpdateShop) GetLastRefreshAt() int64 {
	if m != nil {
		return m.LastRefreshAt
	}
	return 0
}

func (m *ManualUpdateShop) GetTodayRefreshCnt() int64 {
	if m != nil {
		return m.TodayRefreshCnt
	}
	return 0
}

func (m *ManualUpdateShop) GetLastManualRefreshAt() int64 {
	if m != nil {
		return m.LastManualRefreshAt
	}
	return 0
}

func (*ManualUpdateShop) XXX_MessageName() string {
	return "dao.ManualUpdateShop"
}

// 自动更新商店
type AutoUpdateShop struct {
	Detail        map[int64]*models.TypeShopList `protobuf:"bytes,1,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastRefreshAt int64                          `protobuf:"varint,2,opt,name=last_refresh_at,json=lastRefreshAt,proto3" json:"last_refresh_at,omitempty"`
}

func (m *AutoUpdateShop) Reset()      { *m = AutoUpdateShop{} }
func (*AutoUpdateShop) ProtoMessage() {}
func (*AutoUpdateShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_398cb62ed87b808c, []int{5}
}
func (m *AutoUpdateShop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AutoUpdateShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AutoUpdateShop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AutoUpdateShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoUpdateShop.Merge(m, src)
}
func (m *AutoUpdateShop) XXX_Size() int {
	return m.Size()
}
func (m *AutoUpdateShop) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoUpdateShop.DiscardUnknown(m)
}

var xxx_messageInfo_AutoUpdateShop proto.InternalMessageInfo

func (m *AutoUpdateShop) GetDetail() map[int64]*models.TypeShopList {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *AutoUpdateShop) GetLastRefreshAt() int64 {
	if m != nil {
		return m.LastRefreshAt
	}
	return 0
}

func (*AutoUpdateShop) XXX_MessageName() string {
	return "dao.AutoUpdateShop"
}
func init() {
	proto.RegisterType((*Shop)(nil), "dao.Shop")
	proto.RegisterType((*ArenaShop)(nil), "dao.ArenaShop")
	proto.RegisterType((*GuildShop)(nil), "dao.GuildShop")
	proto.RegisterType((*CampShop)(nil), "dao.CampShop")
	proto.RegisterType((*ManualUpdateShop)(nil), "dao.ManualUpdateShop")
	proto.RegisterMapType((map[int64]*models.TypeShopList)(nil), "dao.ManualUpdateShop.DetailEntry")
	proto.RegisterType((*AutoUpdateShop)(nil), "dao.AutoUpdateShop")
	proto.RegisterMapType((map[int64]*models.TypeShopList)(nil), "dao.AutoUpdateShop.DetailEntry")
}

func init() { proto.RegisterFile("proto/dao/shop.proto", fileDescriptor_398cb62ed87b808c) }

var fileDescriptor_398cb62ed87b808c = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xbd, 0x76, 0x30, 0x74, 0x23, 0x68, 0xd9, 0x06, 0xb0, 0x22, 0xb4, 0x09, 0x39, 0x40,
	0xa8, 0x84, 0x2d, 0xb5, 0x07, 0xfe, 0xdc, 0xd2, 0x82, 0x10, 0x08, 0x84, 0xb4, 0x50, 0x0e, 0x5c,
	0xa2, 0x25, 0xbb, 0x34, 0x56, 0x6d, 0x8f, 0xb5, 0x5e, 0x57, 0xf2, 0x5b, 0xf0, 0x16, 0xf0, 0x1c,
	0x9c, 0x7a, 0xec, 0xb1, 0x27, 0x04, 0xf6, 0x85, 0x23, 0xe2, 0x09, 0x90, 0xd7, 0x51, 0x94, 0x46,
	0x39, 0x20, 0x91, 0xdb, 0x78, 0xbe, 0x6f, 0x7e, 0x9e, 0xfd, 0xd6, 0xc6, 0x9d, 0x54, 0x81, 0x86,
	0x40, 0x70, 0x08, 0xb2, 0x29, 0xa4, 0xbe, 0x79, 0x24, 0x8e, 0xe0, 0xd0, 0xed, 0x1c, 0xc1, 0x11,
	0x34, 0x72, 0x5d, 0x35, 0x52, 0xf7, 0x56, 0xd3, 0x89, 0x41, 0xc8, 0x28, 0x5b, 0x98, 0x19, 0x30,
	0xdc, 0x7a, 0x3b, 0x85, 0x94, 0xf4, 0xf0, 0x65, 0x05, 0x91, 0x1c, 0x87, 0xc2, 0x43, 0x7d, 0x34,
	0xdc, 0xd8, 0x77, 0xff, 0x7c, 0xef, 0xd9, 0xe9, 0x31, 0x73, 0xeb, 0xf6, 0x0b, 0x41, 0xee, 0xe3,
	0x96, 0xe0, 0x9a, 0x7b, 0x76, 0x1f, 0x0d, 0xdb, 0xbb, 0x37, 0x7c, 0xc1, 0xc1, 0x7f, 0xcd, 0x93,
	0x9c, 0x47, 0x87, 0xa9, 0xe0, 0x5a, 0xd6, 0x14, 0x66, 0x2c, 0x83, 0x43, 0xbc, 0x31, 0x52, 0x32,
	0xe1, 0xff, 0x06, 0xbe, 0x77, 0x01, 0xbc, 0x6d, 0xc0, 0xa3, 0x5c, 0xc3, 0x2a, 0xec, 0xf3, 0x3c,
	0x8c, 0xc4, 0x9a, 0xb1, 0xef, 0xf1, 0x95, 0x03, 0x1e, 0xa7, 0x6b, 0x4f, 0xe1, 0x8b, 0x8d, 0xb7,
	0x96, 0x25, 0xf2, 0x18, 0xbb, 0x42, 0x6a, 0x1e, 0x46, 0x1e, 0xea, 0x3b, 0xc3, 0xf6, 0xee, 0x9d,
	0x95, 0x04, 0xff, 0xa9, 0xf1, 0x3c, 0x4b, 0xb4, 0x2a, 0xd8, 0x6c, 0x80, 0xdc, 0xc5, 0x9b, 0x11,
	0xcf, 0xf4, 0x58, 0xc9, 0x4f, 0x4a, 0x66, 0xd3, 0x31, 0xd7, 0x66, 0x0b, 0x87, 0x5d, 0xad, 0xdb,
	0xac, 0xe9, 0x8e, 0x34, 0xd9, 0xc1, 0xd7, 0x35, 0x08, 0x5e, 0xcc, 0x8d, 0x93, 0x44, 0x7b, 0x8e,
	0x71, 0x6e, 0x1a, 0x61, 0x66, 0x3d, 0x48, 0x34, 0xd9, 0xc3, 0x37, 0x0d, 0x33, 0x36, 0x0b, 0x2c,
	0xa2, 0x5b, 0x66, 0x60, 0xbb, 0x56, 0x9b, 0xed, 0xe6, 0x2f, 0xe8, 0xbe, 0xc1, 0xed, 0x85, 0xfd,
	0xc8, 0x16, 0x76, 0x8e, 0x65, 0x61, 0xf2, 0x72, 0x58, 0x5d, 0x92, 0x1d, 0x7c, 0xe9, 0x84, 0x47,
	0xb9, 0x9c, 0xa5, 0xd4, 0xf1, 0x9b, 0xcf, 0xce, 0x7f, 0x57, 0xa4, 0xe6, 0x78, 0xaf, 0xc2, 0x4c,
	0xb3, 0xc6, 0xf2, 0xc4, 0x7e, 0x84, 0x06, 0xdf, 0x10, 0xbe, 0x76, 0xf1, 0x6a, 0xc8, 0xc3, 0xa5,
	0x9c, 0x7a, 0x2b, 0xee, 0xef, 0x7f, 0x52, 0x5a, 0xfb, 0x21, 0xf6, 0x5f, 0x9e, 0xff, 0xa4, 0xd6,
	0xd7, 0x92, 0xa2, 0xd3, 0x92, 0xa2, 0xb3, 0x92, 0xa2, 0x1f, 0x25, 0x45, 0xbf, 0x4a, 0x6a, 0xfd,
	0x2e, 0x29, 0xfa, 0x5c, 0x51, 0xeb, 0xb4, 0xa2, 0xe8, 0xac, 0xa2, 0xd6, 0x79, 0x45, 0xad, 0x0f,
	0xb7, 0x27, 0x10, 0x26, 0x0f, 0x32, 0xa9, 0x4e, 0xa4, 0x0a, 0x26, 0x10, 0xc7, 0x90, 0x04, 0xf3,
	0x7f, 0xfa, 0xa3, 0x6b, 0xca, 0xbd, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x82, 0x5c, 0xe4, 0x54,
	0xe7, 0x03, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolShop.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolArenaShop.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildShop.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolCampShop.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolManualUpdateShop.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolAutoUpdateShop.Get().(proto.Message)
	})
}

var poolShop = &sync.Pool{New: func() interface{} { return &Shop{} }}

func (m *Shop) ReleasePool() { m.Reset(); poolShop.Put(m); m = nil }

var poolArenaShop = &sync.Pool{New: func() interface{} { return &ArenaShop{} }}

func (m *ArenaShop) ReleasePool() { m.Reset(); poolArenaShop.Put(m); m = nil }

var poolGuildShop = &sync.Pool{New: func() interface{} { return &GuildShop{} }}

func (m *GuildShop) ReleasePool() { m.Reset(); poolGuildShop.Put(m); m = nil }

var poolCampShop = &sync.Pool{New: func() interface{} { return &CampShop{} }}

func (m *CampShop) ReleasePool() { m.Reset(); poolCampShop.Put(m); m = nil }

var poolManualUpdateShop = &sync.Pool{New: func() interface{} { return &ManualUpdateShop{} }}

func (m *ManualUpdateShop) ReleasePool() { m.Reset(); poolManualUpdateShop.Put(m); m = nil }

var poolAutoUpdateShop = &sync.Pool{New: func() interface{} { return &AutoUpdateShop{} }}

func (m *AutoUpdateShop) ReleasePool() { m.Reset(); poolAutoUpdateShop.Put(m); m = nil }

func (m *Shop) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *Shop) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *Shop) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *Shop) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *Shop) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (m *ArenaShop) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *ArenaShop) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *ArenaShop) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *ArenaShop) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *ArenaShop) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (m *GuildShop) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *GuildShop) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *GuildShop) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *GuildShop) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *GuildShop) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (m *CampShop) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *CampShop) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *CampShop) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *CampShop) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *CampShop) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (this *Shop) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Shop)
	if !ok {
		that2, ok := that.(Shop)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *ArenaShop) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ArenaShop)
	if !ok {
		that2, ok := that.(ArenaShop)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GuildShop) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildShop)
	if !ok {
		that2, ok := that.(GuildShop)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *CampShop) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CampShop)
	if !ok {
		that2, ok := that.(CampShop)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *ManualUpdateShop) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ManualUpdateShop)
	if !ok {
		that2, ok := that.(ManualUpdateShop)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Detail) != len(that1.Detail) {
		return false
	}
	for i := range this.Detail {
		if !this.Detail[i].Equal(that1.Detail[i]) {
			return false
		}
	}
	if this.LastRefreshAt != that1.LastRefreshAt {
		return false
	}
	if this.TodayRefreshCnt != that1.TodayRefreshCnt {
		return false
	}
	if this.LastManualRefreshAt != that1.LastManualRefreshAt {
		return false
	}
	return true
}
func (this *AutoUpdateShop) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AutoUpdateShop)
	if !ok {
		that2, ok := that.(AutoUpdateShop)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Detail) != len(that1.Detail) {
		return false
	}
	for i := range this.Detail {
		if !this.Detail[i].Equal(that1.Detail[i]) {
			return false
		}
	}
	if this.LastRefreshAt != that1.LastRefreshAt {
		return false
	}
	return true
}
func (m *Shop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Shop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Shop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShop(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintShop(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ArenaShop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArenaShop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArenaShop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShop(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintShop(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GuildShop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildShop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildShop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShop(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintShop(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampShop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampShop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampShop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShop(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintShop(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManualUpdateShop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManualUpdateShop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManualUpdateShop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastManualRefreshAt != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.LastManualRefreshAt))
		i--
		dAtA[i] = 0x20
	}
	if m.TodayRefreshCnt != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.TodayRefreshCnt))
		i--
		dAtA[i] = 0x18
	}
	if m.LastRefreshAt != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.LastRefreshAt))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Detail) > 0 {
		for k := range m.Detail {
			v := m.Detail[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintShop(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintShop(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintShop(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AutoUpdateShop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AutoUpdateShop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AutoUpdateShop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastRefreshAt != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.LastRefreshAt))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Detail) > 0 {
		for k := range m.Detail {
			v := m.Detail[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintShop(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintShop(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintShop(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintShop(dAtA []byte, offset int, v uint64) int {
	offset -= sovShop(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *Shop) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("data")
	w.RawByte('"')
	w.RawByte(':')
	m.Data.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ArenaShop) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("data")
	w.RawByte('"')
	w.RawByte(':')
	m.Data.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildShop) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("data")
	w.RawByte('"')
	w.RawByte(':')
	m.Data.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *CampShop) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("data")
	w.RawByte('"')
	w.RawByte(':')
	m.Data.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ManualUpdateShop) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("detail")
	w.RawByte('"')
	w.RawByte(':')
	if m.Detail == nil {
		w.RawString("null")
	} else if len(m.Detail) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlDetail := len(m.Detail)
		for k, v := range m.Detail {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			v.JsonBytes(w)
			mlDetail--
			if mlDetail != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.LastRefreshAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("last_refresh_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LastRefreshAt))
		needWriteComma = true
	}
	if m.TodayRefreshCnt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("today_refresh_cnt")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.TodayRefreshCnt))
		needWriteComma = true
	}
	if m.LastManualRefreshAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("last_manual_refresh_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LastManualRefreshAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *AutoUpdateShop) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("detail")
	w.RawByte('"')
	w.RawByte(':')
	if m.Detail == nil {
		w.RawString("null")
	} else if len(m.Detail) == 0 {
		w.RawString("{}")
	} else {
		w.RawByte('{')
		mlDetail := len(m.Detail)
		for k, v := range m.Detail {
			w.RawByte('"')
			w.Int64(int64(k))
			w.RawByte('"')
			w.RawByte(':')
			v.JsonBytes(w)
			mlDetail--
			if mlDetail != 0 {
				w.RawByte(',')
			}
		}
		w.RawByte('}')
	}
	needWriteComma = true
	if m.LastRefreshAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("last_refresh_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.LastRefreshAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *Shop) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *Shop) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *Shop) GoString() string {
	return m.String()
}

func (m *ArenaShop) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ArenaShop) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ArenaShop) GoString() string {
	return m.String()
}

func (m *GuildShop) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildShop) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildShop) GoString() string {
	return m.String()
}

func (m *CampShop) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *CampShop) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *CampShop) GoString() string {
	return m.String()
}

func (m *ManualUpdateShop) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ManualUpdateShop) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ManualUpdateShop) GoString() string {
	return m.String()
}

func (m *AutoUpdateShop) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *AutoUpdateShop) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *AutoUpdateShop) GoString() string {
	return m.String()
}

func (m *Shop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovShop(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovShop(uint64(l))
	}
	return n
}

func (m *ArenaShop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovShop(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovShop(uint64(l))
	}
	return n
}

func (m *GuildShop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovShop(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovShop(uint64(l))
	}
	return n
}

func (m *CampShop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovShop(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovShop(uint64(l))
	}
	return n
}

func (m *ManualUpdateShop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Detail) > 0 {
		for k, v := range m.Detail {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovShop(uint64(l))
			}
			mapEntrySize := 1 + sovShop(uint64(k)) + l
			n += mapEntrySize + 1 + sovShop(uint64(mapEntrySize))
		}
	}
	if m.LastRefreshAt != 0 {
		n += 1 + sovShop(uint64(m.LastRefreshAt))
	}
	if m.TodayRefreshCnt != 0 {
		n += 1 + sovShop(uint64(m.TodayRefreshCnt))
	}
	if m.LastManualRefreshAt != 0 {
		n += 1 + sovShop(uint64(m.LastManualRefreshAt))
	}
	return n
}

func (m *AutoUpdateShop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Detail) > 0 {
		for k, v := range m.Detail {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovShop(uint64(l))
			}
			mapEntrySize := 1 + sovShop(uint64(k)) + l
			n += mapEntrySize + 1 + sovShop(uint64(mapEntrySize))
		}
	}
	if m.LastRefreshAt != 0 {
		n += 1 + sovShop(uint64(m.LastRefreshAt))
	}
	return n
}

func sovShop(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozShop(x uint64) (n int) {
	return sovShop(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Shop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Shop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Shop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ManualUpdateShop{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArenaShop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArenaShop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArenaShop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &AutoUpdateShop{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildShop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildShop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildShop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &AutoUpdateShop{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampShop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampShop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampShop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ManualUpdateShop{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManualUpdateShop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManualUpdateShop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManualUpdateShop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Detail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Detail == nil {
				m.Detail = make(map[int64]*models.TypeShopList)
			}
			var mapkey int64
			var mapvalue *models.TypeShopList
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShop
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShop
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShop
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthShop
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthShop
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &models.TypeShopList{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipShop(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthShop
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Detail[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastRefreshAt", wireType)
			}
			m.LastRefreshAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastRefreshAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TodayRefreshCnt", wireType)
			}
			m.TodayRefreshCnt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TodayRefreshCnt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastManualRefreshAt", wireType)
			}
			m.LastManualRefreshAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastManualRefreshAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AutoUpdateShop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AutoUpdateShop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AutoUpdateShop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Detail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Detail == nil {
				m.Detail = make(map[int64]*models.TypeShopList)
			}
			var mapkey int64
			var mapvalue *models.TypeShopList
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShop
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShop
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShop
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthShop
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthShop
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &models.TypeShopList{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipShop(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthShop
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Detail[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastRefreshAt", wireType)
			}
			m.LastRefreshAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastRefreshAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipShop(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowShop
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShop
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShop
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthShop
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupShop
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthShop
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthShop        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowShop          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupShop = fmt.Errorf("proto: unexpected end of group")
)
