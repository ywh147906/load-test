// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/dao/personal_boss.proto

package dao

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_bytespool "github.com/ywh147906/load-test/common/bytespool"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 全局刷新的boss信息
type GlobalPersonalBossInfo struct {
	Key      string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty" pk`
	BossList []*models.PersonalBoss `protobuf:"bytes,2,rep,name=boss_list,json=bossList,proto3" json:"boss_list,omitempty"`
	ResetAt  int64                  `protobuf:"varint,3,opt,name=reset_at,json=resetAt,proto3" json:"reset_at,omitempty"`
}

func (m *GlobalPersonalBossInfo) Reset()      { *m = GlobalPersonalBossInfo{} }
func (*GlobalPersonalBossInfo) ProtoMessage() {}
func (*GlobalPersonalBossInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b5aff24bc1cc92f, []int{0}
}
func (m *GlobalPersonalBossInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalPersonalBossInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GlobalPersonalBossInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GlobalPersonalBossInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalPersonalBossInfo.Merge(m, src)
}
func (m *GlobalPersonalBossInfo) XXX_Size() int {
	return m.Size()
}
func (m *GlobalPersonalBossInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalPersonalBossInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalPersonalBossInfo proto.InternalMessageInfo

func (m *GlobalPersonalBossInfo) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GlobalPersonalBossInfo) GetBossList() []*models.PersonalBoss {
	if m != nil {
		return m.BossList
	}
	return nil
}

func (m *GlobalPersonalBossInfo) GetResetAt() int64 {
	if m != nil {
		return m.ResetAt
	}
	return 0
}

func (*GlobalPersonalBossInfo) XXX_MessageName() string {
	return "dao.GlobalPersonalBossInfo"
}

// 个人boss
type PersonalBossInfo struct {
	RoleId string                   `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Pbi    *models.PersonalBossInfo `protobuf:"bytes,2,opt,name=pbi,proto3" json:"pbi,omitempty"`
}

func (m *PersonalBossInfo) Reset()      { *m = PersonalBossInfo{} }
func (*PersonalBossInfo) ProtoMessage() {}
func (*PersonalBossInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b5aff24bc1cc92f, []int{1}
}
func (m *PersonalBossInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBossInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBossInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBossInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBossInfo.Merge(m, src)
}
func (m *PersonalBossInfo) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBossInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBossInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBossInfo proto.InternalMessageInfo

func (m *PersonalBossInfo) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *PersonalBossInfo) GetPbi() *models.PersonalBossInfo {
	if m != nil {
		return m.Pbi
	}
	return nil
}

func (*PersonalBossInfo) XXX_MessageName() string {
	return "dao.PersonalBossInfo"
}

// 个人boss助战信息
type PersonalBossHelperInfo struct {
	RoleId string                         `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	Pbh    *models.PersonalBossHelperInfo `protobuf:"bytes,3,opt,name=pbh,proto3" json:"pbh,omitempty"`
	Share  *models.HelpMessage            `protobuf:"bytes,4,opt,name=share,proto3" json:"share,omitempty"`
}

func (m *PersonalBossHelperInfo) Reset()      { *m = PersonalBossHelperInfo{} }
func (*PersonalBossHelperInfo) ProtoMessage() {}
func (*PersonalBossHelperInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b5aff24bc1cc92f, []int{2}
}
func (m *PersonalBossHelperInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonalBossHelperInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonalBossHelperInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonalBossHelperInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalBossHelperInfo.Merge(m, src)
}
func (m *PersonalBossHelperInfo) XXX_Size() int {
	return m.Size()
}
func (m *PersonalBossHelperInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalBossHelperInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalBossHelperInfo proto.InternalMessageInfo

func (m *PersonalBossHelperInfo) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *PersonalBossHelperInfo) GetPbh() *models.PersonalBossHelperInfo {
	if m != nil {
		return m.Pbh
	}
	return nil
}

func (m *PersonalBossHelperInfo) GetShare() *models.HelpMessage {
	if m != nil {
		return m.Share
	}
	return nil
}

func (*PersonalBossHelperInfo) XXX_MessageName() string {
	return "dao.PersonalBossHelperInfo"
}
func init() {
	proto.RegisterType((*GlobalPersonalBossInfo)(nil), "dao.GlobalPersonalBossInfo")
	proto.RegisterType((*PersonalBossInfo)(nil), "dao.PersonalBossInfo")
	proto.RegisterType((*PersonalBossHelperInfo)(nil), "dao.PersonalBossHelperInfo")
}

func init() { proto.RegisterFile("proto/dao/personal_boss.proto", fileDescriptor_3b5aff24bc1cc92f) }

var fileDescriptor_3b5aff24bc1cc92f = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x3b, 0x4e, 0xc3, 0x30,
	0x18, 0xc7, 0xe3, 0x06, 0xfa, 0x70, 0x17, 0x14, 0xaa, 0x2a, 0x54, 0xe0, 0x46, 0x9d, 0x02, 0x12,
	0x0d, 0x94, 0x13, 0xd0, 0x05, 0x8a, 0x40, 0x42, 0x19, 0x59, 0x22, 0xa7, 0x31, 0x6d, 0x54, 0x37,
	0x5f, 0x64, 0x47, 0x48, 0x6c, 0x1c, 0x81, 0x89, 0x33, 0x70, 0x94, 0x8e, 0x1d, 0x3b, 0x21, 0x48,
	0x16, 0x46, 0xc4, 0x09, 0x90, 0x13, 0x1e, 0x15, 0x74, 0x60, 0xfb, 0xf2, 0x7f, 0xfd, 0x32, 0x18,
	0xef, 0xc4, 0x02, 0x12, 0x70, 0x02, 0x0a, 0x4e, 0xcc, 0x84, 0x84, 0x88, 0x72, 0xcf, 0x07, 0x29,
	0xbb, 0xb9, 0x6e, 0xe8, 0x01, 0x85, 0x56, 0x63, 0x04, 0x23, 0x28, 0x72, 0xea, 0x2a, 0xac, 0x96,
	0x55, 0x28, 0x53, 0x08, 0x18, 0x97, 0xab, 0xca, 0x9d, 0x3b, 0x84, 0x9b, 0x27, 0x1c, 0x7c, 0xca,
	0x2f, 0x3f, 0xdd, 0x3e, 0x48, 0x39, 0x88, 0xae, 0xc1, 0x30, 0xb1, 0x3e, 0x61, 0xb7, 0x26, 0xb2,
	0x90, 0x5d, 0xeb, 0x97, 0xdf, 0x9f, 0xda, 0xa5, 0x78, 0xe2, 0x2a, 0xc9, 0x38, 0xc4, 0x35, 0x35,
	0xe1, 0xf1, 0x50, 0x26, 0x66, 0xc9, 0xd2, 0xed, 0x7a, 0xaf, 0xd1, 0x2d, 0x20, 0xdd, 0xe5, 0x19,
	0xb7, 0xaa, 0x62, 0xe7, 0xa1, 0x4c, 0x8c, 0x2d, 0x5c, 0x15, 0x4c, 0xb2, 0xc4, 0xa3, 0x89, 0xa9,
	0x5b, 0xc8, 0xd6, 0xdd, 0x4a, 0xfe, 0x7d, 0x9c, 0x74, 0x3c, 0xbc, 0xf1, 0x87, 0xdd, 0xc6, 0x15,
	0x01, 0x9c, 0x79, 0x61, 0xf0, 0x8b, 0x5f, 0x56, 0xf2, 0x20, 0x30, 0xf6, 0xb0, 0x1e, 0xfb, 0xa1,
	0x59, 0xb2, 0x90, 0x5d, 0xef, 0x99, 0xab, 0xe0, 0x6a, 0xc7, 0x55, 0xa1, 0xce, 0x03, 0xc2, 0xcd,
	0x65, 0xe7, 0x94, 0xf1, 0x98, 0x89, 0xff, 0x71, 0x0e, 0x14, 0x67, 0x9c, 0xff, 0x72, 0xbd, 0x47,
	0x56, 0x71, 0x7e, 0xd6, 0x14, 0x6d, 0x6c, 0xec, 0xe2, 0x75, 0x39, 0xa6, 0x82, 0x99, 0x6b, 0x79,
	0x67, 0xf3, 0xab, 0xa3, 0x72, 0x17, 0x4c, 0x4a, 0x3a, 0x62, 0x6e, 0x91, 0xe8, 0x9f, 0x2d, 0x5e,
	0x88, 0xf6, 0x98, 0x12, 0x34, 0x4b, 0x09, 0x9a, 0xa7, 0x04, 0x3d, 0xa7, 0x04, 0xbd, 0xa6, 0x44,
	0x7b, 0x4b, 0x09, 0xba, 0xcf, 0x88, 0x36, 0xcb, 0x08, 0x9a, 0x67, 0x44, 0x5b, 0x64, 0x44, 0xbb,
	0xda, 0x1e, 0x42, 0x18, 0xed, 0x4b, 0x26, 0x6e, 0x98, 0x70, 0x86, 0x30, 0x9d, 0x42, 0xe4, 0x7c,
	0xbf, 0x0c, 0xbf, 0x9c, 0x9f, 0x47, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x38, 0x11, 0x01,
	0x2d, 0x02, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGlobalPersonalBossInfo.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBossInfo.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolPersonalBossHelperInfo.Get().(proto.Message)
	})
}

var poolGlobalPersonalBossInfo = &sync.Pool{New: func() interface{} { return &GlobalPersonalBossInfo{} }}

func (m *GlobalPersonalBossInfo) ReleasePool() { m.Reset(); poolGlobalPersonalBossInfo.Put(m); m = nil }

var poolPersonalBossInfo = &sync.Pool{New: func() interface{} { return &PersonalBossInfo{} }}

func (m *PersonalBossInfo) ReleasePool() { m.Reset(); poolPersonalBossInfo.Put(m); m = nil }

var poolPersonalBossHelperInfo = &sync.Pool{New: func() interface{} { return &PersonalBossHelperInfo{} }}

func (m *PersonalBossHelperInfo) ReleasePool() { m.Reset(); poolPersonalBossHelperInfo.Put(m); m = nil }

func (m *GlobalPersonalBossInfo) PK() string {
	if m == nil {
		return ""
	}
	return m.Key
}

func (m *GlobalPersonalBossInfo) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.Key...)
}

func (m *GlobalPersonalBossInfo) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *GlobalPersonalBossInfo) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *GlobalPersonalBossInfo) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (m *PersonalBossInfo) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *PersonalBossInfo) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *PersonalBossInfo) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *PersonalBossInfo) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *PersonalBossInfo) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (m *PersonalBossHelperInfo) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *PersonalBossHelperInfo) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *PersonalBossHelperInfo) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *PersonalBossHelperInfo) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *PersonalBossHelperInfo) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (this *GlobalPersonalBossInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalPersonalBossInfo)
	if !ok {
		that2, ok := that.(GlobalPersonalBossInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if len(this.BossList) != len(that1.BossList) {
		return false
	}
	for i := range this.BossList {
		if !this.BossList[i].Equal(that1.BossList[i]) {
			return false
		}
	}
	if this.ResetAt != that1.ResetAt {
		return false
	}
	return true
}
func (this *PersonalBossInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBossInfo)
	if !ok {
		that2, ok := that.(PersonalBossInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Pbi.Equal(that1.Pbi) {
		return false
	}
	return true
}
func (this *PersonalBossHelperInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PersonalBossHelperInfo)
	if !ok {
		that2, ok := that.(PersonalBossHelperInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Pbh.Equal(that1.Pbh) {
		return false
	}
	if !this.Share.Equal(that1.Share) {
		return false
	}
	return true
}
func (m *GlobalPersonalBossInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalPersonalBossInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalPersonalBossInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ResetAt != 0 {
		i = encodeVarintPersonalBoss(dAtA, i, uint64(m.ResetAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.BossList) > 0 {
		for iNdEx := len(m.BossList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BossList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintPersonalBoss(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBossInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBossInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBossInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pbi != nil {
		{
			size, err := m.Pbi.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintPersonalBoss(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PersonalBossHelperInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonalBossHelperInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonalBossHelperInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Share != nil {
		{
			size, err := m.Share.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Pbh != nil {
		{
			size, err := m.Pbh.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPersonalBoss(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintPersonalBoss(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPersonalBoss(dAtA []byte, offset int, v uint64) int {
	offset -= sovPersonalBoss(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *GlobalPersonalBossInfo) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.Key != "" {
		w.RawByte('"')
		w.RawString("key")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.Key)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("boss_list")
	w.RawByte('"')
	w.RawByte(':')
	if m.BossList == nil {
		w.RawString("null")
	} else if len(m.BossList) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.BossList {
			v.JsonBytes(w)
			if i != len(m.BossList)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.ResetAt != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("reset_at")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.ResetAt))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBossInfo) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("pbi")
	w.RawByte('"')
	w.RawByte(':')
	m.Pbi.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *PersonalBossHelperInfo) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("pbh")
	w.RawByte('"')
	w.RawByte(':')
	m.Pbh.JsonBytes(w)
	needWriteComma = true
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("share")
	w.RawByte('"')
	w.RawByte(':')
	m.Share.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GlobalPersonalBossInfo) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GlobalPersonalBossInfo) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GlobalPersonalBossInfo) GoString() string {
	return m.String()
}

func (m *PersonalBossInfo) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBossInfo) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBossInfo) GoString() string {
	return m.String()
}

func (m *PersonalBossHelperInfo) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *PersonalBossHelperInfo) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *PersonalBossHelperInfo) GoString() string {
	return m.String()
}

func (m *GlobalPersonalBossInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	if len(m.BossList) > 0 {
		for _, e := range m.BossList {
			l = e.Size()
			n += 1 + l + sovPersonalBoss(uint64(l))
		}
	}
	if m.ResetAt != 0 {
		n += 1 + sovPersonalBoss(uint64(m.ResetAt))
	}
	return n
}

func (m *PersonalBossInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	if m.Pbi != nil {
		l = m.Pbi.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	return n
}

func (m *PersonalBossHelperInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	if m.Pbh != nil {
		l = m.Pbh.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	if m.Share != nil {
		l = m.Share.Size()
		n += 1 + l + sovPersonalBoss(uint64(l))
	}
	return n
}

func sovPersonalBoss(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPersonalBoss(x uint64) (n int) {
	return sovPersonalBoss(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GlobalPersonalBossInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalPersonalBossInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalPersonalBossInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BossList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BossList = append(m.BossList, &models.PersonalBoss{})
			if err := m.BossList[len(m.BossList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetAt", wireType)
			}
			m.ResetAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResetAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBossInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pbi", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pbi == nil {
				m.Pbi = &models.PersonalBossInfo{}
			}
			if err := m.Pbi.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonalBossHelperInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonalBossHelperInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonalBossHelperInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pbh", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pbh == nil {
				m.Pbh = &models.PersonalBossHelperInfo{}
			}
			if err := m.Pbh.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Share == nil {
				m.Share = &models.HelpMessage{}
			}
			if err := m.Share.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPersonalBoss(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPersonalBoss
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPersonalBoss(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPersonalBoss
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPersonalBoss
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPersonalBoss
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPersonalBoss
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPersonalBoss
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPersonalBoss        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPersonalBoss          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPersonalBoss = fmt.Errorf("proto: unexpected end of group")
)
