// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/dao/google_quest.proto

package dao

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_bytespool "github.com/ywh147906/load-test/common/bytespool"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GoogleQuestData struct {
	RoleId     string  `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" pk`
	VersionIds []int64 `protobuf:"varint,2,rep,packed,name=version_ids,json=versionIds,proto3" json:"version_ids,omitempty"`
}

func (m *GoogleQuestData) Reset()      { *m = GoogleQuestData{} }
func (*GoogleQuestData) ProtoMessage() {}
func (*GoogleQuestData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f5c5db5eaff460b, []int{0}
}
func (m *GoogleQuestData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GoogleQuestData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GoogleQuestData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GoogleQuestData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleQuestData.Merge(m, src)
}
func (m *GoogleQuestData) XXX_Size() int {
	return m.Size()
}
func (m *GoogleQuestData) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleQuestData.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleQuestData proto.InternalMessageInfo

func (m *GoogleQuestData) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *GoogleQuestData) GetVersionIds() []int64 {
	if m != nil {
		return m.VersionIds
	}
	return nil
}

func (*GoogleQuestData) XXX_MessageName() string {
	return "dao.GoogleQuestData"
}
func init() {
	proto.RegisterType((*GoogleQuestData)(nil), "dao.GoogleQuestData")
}

func init() { proto.RegisterFile("proto/dao/google_quest.proto", fileDescriptor_5f5c5db5eaff460b) }

var fileDescriptor_5f5c5db5eaff460b = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x49, 0xcc, 0xd7, 0x4f, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0x8d, 0x2f, 0x2c, 0x4d,
	0x2d, 0x2e, 0xd1, 0x03, 0x0b, 0x0b, 0x31, 0xa7, 0x24, 0xe6, 0x4b, 0x89, 0xa4, 0xe7, 0xa7, 0xe7,
	0x43, 0x94, 0x81, 0x58, 0x10, 0x29, 0xa5, 0x60, 0x2e, 0x7e, 0x77, 0xb0, 0x86, 0x40, 0x90, 0x7a,
	0x97, 0xc4, 0x92, 0x44, 0x21, 0x79, 0x2e, 0xf6, 0xa2, 0xfc, 0x9c, 0xd4, 0xf8, 0xcc, 0x14, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0x4e, 0x27, 0xb6, 0x4f, 0xf7, 0xe4, 0x99, 0x0a, 0xb2, 0x83, 0xd8, 0x40,
	0xc2, 0x9e, 0x29, 0x42, 0xf2, 0x5c, 0xdc, 0x65, 0xa9, 0x45, 0xc5, 0x99, 0xf9, 0x79, 0xf1, 0x99,
	0x29, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xcc, 0x41, 0x5c, 0x50, 0x21, 0xcf, 0x94, 0x62, 0x27,
	0xaf, 0x1b, 0x0f, 0xe5, 0x18, 0x56, 0x3c, 0x92, 0x63, 0x3c, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23,
	0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x5f, 0x3c, 0x92, 0x63, 0xf8, 0xf0, 0x48, 0x8e, 0x71, 0xc2,
	0x63, 0x39, 0x86, 0x13, 0x8f, 0xe5, 0x18, 0x2f, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21,
	0x4a, 0x26, 0x39, 0x3f, 0x33, 0x4f, 0xb7, 0x38, 0xb5, 0xa8, 0x2c, 0xb5, 0x48, 0x3f, 0x39, 0x3f,
	0x37, 0x37, 0x3f, 0x4f, 0x1f, 0xee, 0x9d, 0x24, 0x36, 0x30, 0xd3, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0xa0, 0x53, 0x15, 0xb9, 0xe2, 0x00, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGoogleQuestData.Get().(proto.Message)
	})
}

var poolGoogleQuestData = &sync.Pool{New: func() interface{} { return &GoogleQuestData{} }}

func (m *GoogleQuestData) ReleasePool() { m.Reset(); poolGoogleQuestData.Put(m); m = nil }

func (m *GoogleQuestData) PK() string {
	if m == nil {
		return ""
	}
	return m.RoleId
}

func (m *GoogleQuestData) PKAppendTo(d []byte) []byte {
	if m == nil {
		return d
	}
	return append(d, m.RoleId...)
}

func (m *GoogleQuestData) ToKVSave() ([]byte, []byte) {
	msgName := m.XXX_MessageName()
	dk := coin_server_common_bytespool.GetSample(64)
	dk = dk[:0]
	dk = append(dk, msgName...)
	dk = append(dk, ':', 'k', ':')
	dk = m.PKAppendTo(dk)
	return dk, m.ToSave()
}

func (m *GoogleQuestData) ToSave() []byte {
	msgName := m.XXX_MessageName()
	ml := len(msgName)
	d := coin_server_common_bytespool.GetSample(1 + ml + m.Size())
	d[0] = uint8(ml)
	copy(d[1:], msgName)
	_, _ = m.MarshalToSizedBuffer(d[1+ml:])
	return d
}

func (m *GoogleQuestData) KVKey() string {
	return m.XXX_MessageName() + ":k:" + m.PK()
}

func (this *GoogleQuestData) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GoogleQuestData)
	if !ok {
		that2, ok := that.(GoogleQuestData)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if len(this.VersionIds) != len(that1.VersionIds) {
		return false
	}
	for i := range this.VersionIds {
		if this.VersionIds[i] != that1.VersionIds[i] {
			return false
		}
	}
	return true
}
func (m *GoogleQuestData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GoogleQuestData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GoogleQuestData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VersionIds) > 0 {
		dAtA2 := make([]byte, len(m.VersionIds)*10)
		var j1 int
		for _, num1 := range m.VersionIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintGoogleQuest(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGoogleQuest(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGoogleQuest(dAtA []byte, offset int, v uint64) int {
	offset -= sovGoogleQuest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *GoogleQuestData) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("version_ids")
	w.RawByte('"')
	w.RawByte(':')
	if m.VersionIds == nil {
		w.RawString("null")
	} else if len(m.VersionIds) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.VersionIds {
			w.Int64(int64(v))
			if i != len(m.VersionIds)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GoogleQuestData) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GoogleQuestData) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GoogleQuestData) GoString() string {
	return m.String()
}

func (m *GoogleQuestData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGoogleQuest(uint64(l))
	}
	if len(m.VersionIds) > 0 {
		l = 0
		for _, e := range m.VersionIds {
			l += sovGoogleQuest(uint64(e))
		}
		n += 1 + sovGoogleQuest(uint64(l)) + l
	}
	return n
}

func sovGoogleQuest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGoogleQuest(x uint64) (n int) {
	return sovGoogleQuest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GoogleQuestData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGoogleQuest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GoogleQuestData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GoogleQuestData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGoogleQuest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGoogleQuest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGoogleQuest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGoogleQuest
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.VersionIds = append(m.VersionIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGoogleQuest
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthGoogleQuest
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthGoogleQuest
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.VersionIds) == 0 {
					m.VersionIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGoogleQuest
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.VersionIds = append(m.VersionIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGoogleQuest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGoogleQuest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGoogleQuest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGoogleQuest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGoogleQuest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGoogleQuest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGoogleQuest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGoogleQuest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGoogleQuest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGoogleQuest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGoogleQuest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGoogleQuest = fmt.Errorf("proto: unexpected end of group")
)
