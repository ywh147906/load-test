// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/activity-ranking-service/activity_ranking.proto

package activity_ranking_service

import (
	coin_server_common_buffer "github.com/ywh147906/load-test/common/buffer"
	coin_server_common_jwriter "github.com/ywh147906/load-test/common/jwriter"
	coin_server_common_msgcreate "github.com/ywh147906/load-test/common/msgcreate"
	coin_server_common_proto_jsonany "github.com/ywh147906/load-test/common/proto/jsonany"
	models "github.com/ywh147906/load-test/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ActivityRanking struct {
}

func (m *ActivityRanking) Reset()      { *m = ActivityRanking{} }
func (*ActivityRanking) ProtoMessage() {}
func (*ActivityRanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0}
}
func (m *ActivityRanking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking.Merge(m, src)
}
func (m *ActivityRanking) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking proto.InternalMessageInfo

func (*ActivityRanking) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking"
}

type ActivityRanking_JoinRankingRequest struct {
	RoleId       string                       `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Score        int64                        `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	RankingIndex string                       `protobuf:"bytes,3,opt,name=ranking_index,json=rankingIndex,proto3" json:"ranking_index,omitempty"`
	Version      int64                        `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	CreateInfo   *models.ActivityRanking_Info `protobuf:"bytes,100,opt,name=create_info,json=createInfo,proto3" json:"create_info,omitempty"`
}

func (m *ActivityRanking_JoinRankingRequest) Reset()      { *m = ActivityRanking_JoinRankingRequest{} }
func (*ActivityRanking_JoinRankingRequest) ProtoMessage() {}
func (*ActivityRanking_JoinRankingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 0}
}
func (m *ActivityRanking_JoinRankingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_JoinRankingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_JoinRankingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_JoinRankingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_JoinRankingRequest.Merge(m, src)
}
func (m *ActivityRanking_JoinRankingRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_JoinRankingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_JoinRankingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_JoinRankingRequest proto.InternalMessageInfo

func (m *ActivityRanking_JoinRankingRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ActivityRanking_JoinRankingRequest) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ActivityRanking_JoinRankingRequest) GetRankingIndex() string {
	if m != nil {
		return m.RankingIndex
	}
	return ""
}

func (m *ActivityRanking_JoinRankingRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ActivityRanking_JoinRankingRequest) GetCreateInfo() *models.ActivityRanking_Info {
	if m != nil {
		return m.CreateInfo
	}
	return nil
}

func (*ActivityRanking_JoinRankingRequest) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.JoinRankingRequest"
}

type ActivityRanking_JoinRankingResponse struct {
	RankingIndex string `protobuf:"bytes,1,opt,name=ranking_index,json=rankingIndex,proto3" json:"ranking_index,omitempty"`
}

func (m *ActivityRanking_JoinRankingResponse) Reset()      { *m = ActivityRanking_JoinRankingResponse{} }
func (*ActivityRanking_JoinRankingResponse) ProtoMessage() {}
func (*ActivityRanking_JoinRankingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 1}
}
func (m *ActivityRanking_JoinRankingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_JoinRankingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_JoinRankingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_JoinRankingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_JoinRankingResponse.Merge(m, src)
}
func (m *ActivityRanking_JoinRankingResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_JoinRankingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_JoinRankingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_JoinRankingResponse proto.InternalMessageInfo

func (m *ActivityRanking_JoinRankingResponse) GetRankingIndex() string {
	if m != nil {
		return m.RankingIndex
	}
	return ""
}

func (*ActivityRanking_JoinRankingResponse) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.JoinRankingResponse"
}

type ActivityRanking_UpdateRankingDataRequest struct {
	RoleId       string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Score        int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	RankingIndex string `protobuf:"bytes,3,opt,name=ranking_index,json=rankingIndex,proto3" json:"ranking_index,omitempty"`
}

func (m *ActivityRanking_UpdateRankingDataRequest) Reset() {
	*m = ActivityRanking_UpdateRankingDataRequest{}
}
func (*ActivityRanking_UpdateRankingDataRequest) ProtoMessage() {}
func (*ActivityRanking_UpdateRankingDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 2}
}
func (m *ActivityRanking_UpdateRankingDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_UpdateRankingDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_UpdateRankingDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_UpdateRankingDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_UpdateRankingDataRequest.Merge(m, src)
}
func (m *ActivityRanking_UpdateRankingDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_UpdateRankingDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_UpdateRankingDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_UpdateRankingDataRequest proto.InternalMessageInfo

func (m *ActivityRanking_UpdateRankingDataRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ActivityRanking_UpdateRankingDataRequest) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ActivityRanking_UpdateRankingDataRequest) GetRankingIndex() string {
	if m != nil {
		return m.RankingIndex
	}
	return ""
}

func (*ActivityRanking_UpdateRankingDataRequest) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.UpdateRankingDataRequest"
}

type ActivityRanking_UpdateRankingDataResponse struct {
}

func (m *ActivityRanking_UpdateRankingDataResponse) Reset() {
	*m = ActivityRanking_UpdateRankingDataResponse{}
}
func (*ActivityRanking_UpdateRankingDataResponse) ProtoMessage() {}
func (*ActivityRanking_UpdateRankingDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 3}
}
func (m *ActivityRanking_UpdateRankingDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_UpdateRankingDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_UpdateRankingDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_UpdateRankingDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_UpdateRankingDataResponse.Merge(m, src)
}
func (m *ActivityRanking_UpdateRankingDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_UpdateRankingDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_UpdateRankingDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_UpdateRankingDataResponse proto.InternalMessageInfo

func (*ActivityRanking_UpdateRankingDataResponse) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.UpdateRankingDataResponse"
}

type ActivityRanking_GetSelfRankingRequest struct {
	RoleId       string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RankingIndex string `protobuf:"bytes,2,opt,name=ranking_index,json=rankingIndex,proto3" json:"ranking_index,omitempty"`
}

func (m *ActivityRanking_GetSelfRankingRequest) Reset()      { *m = ActivityRanking_GetSelfRankingRequest{} }
func (*ActivityRanking_GetSelfRankingRequest) ProtoMessage() {}
func (*ActivityRanking_GetSelfRankingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 4}
}
func (m *ActivityRanking_GetSelfRankingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_GetSelfRankingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_GetSelfRankingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_GetSelfRankingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_GetSelfRankingRequest.Merge(m, src)
}
func (m *ActivityRanking_GetSelfRankingRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_GetSelfRankingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_GetSelfRankingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_GetSelfRankingRequest proto.InternalMessageInfo

func (m *ActivityRanking_GetSelfRankingRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ActivityRanking_GetSelfRankingRequest) GetRankingIndex() string {
	if m != nil {
		return m.RankingIndex
	}
	return ""
}

func (*ActivityRanking_GetSelfRankingRequest) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.GetSelfRankingRequest"
}

type ActivityRanking_GetSelfRankingResponse struct {
	RankingId int64 `protobuf:"varint,1,opt,name=ranking_id,json=rankingId,proto3" json:"ranking_id,omitempty"`
}

func (m *ActivityRanking_GetSelfRankingResponse) Reset() {
	*m = ActivityRanking_GetSelfRankingResponse{}
}
func (*ActivityRanking_GetSelfRankingResponse) ProtoMessage() {}
func (*ActivityRanking_GetSelfRankingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 5}
}
func (m *ActivityRanking_GetSelfRankingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_GetSelfRankingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_GetSelfRankingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_GetSelfRankingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_GetSelfRankingResponse.Merge(m, src)
}
func (m *ActivityRanking_GetSelfRankingResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_GetSelfRankingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_GetSelfRankingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_GetSelfRankingResponse proto.InternalMessageInfo

func (m *ActivityRanking_GetSelfRankingResponse) GetRankingId() int64 {
	if m != nil {
		return m.RankingId
	}
	return 0
}

func (*ActivityRanking_GetSelfRankingResponse) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.GetSelfRankingResponse"
}

type ActivityRanking_GetRankingListRequest struct {
	RankingIndex string `protobuf:"bytes,1,opt,name=ranking_index,json=rankingIndex,proto3" json:"ranking_index,omitempty"`
	StartIndex   int64  `protobuf:"varint,2,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	Count        int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (m *ActivityRanking_GetRankingListRequest) Reset()      { *m = ActivityRanking_GetRankingListRequest{} }
func (*ActivityRanking_GetRankingListRequest) ProtoMessage() {}
func (*ActivityRanking_GetRankingListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 6}
}
func (m *ActivityRanking_GetRankingListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_GetRankingListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_GetRankingListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_GetRankingListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_GetRankingListRequest.Merge(m, src)
}
func (m *ActivityRanking_GetRankingListRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_GetRankingListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_GetRankingListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_GetRankingListRequest proto.InternalMessageInfo

func (m *ActivityRanking_GetRankingListRequest) GetRankingIndex() string {
	if m != nil {
		return m.RankingIndex
	}
	return ""
}

func (m *ActivityRanking_GetRankingListRequest) GetStartIndex() int64 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *ActivityRanking_GetRankingListRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ActivityRanking_GetRankingListRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (*ActivityRanking_GetRankingListRequest) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.GetRankingListRequest"
}

type ActivityRanking_GetRankingListResponse struct {
	RankingList     []*models.ActivityRanking_RankInfo `protobuf:"bytes,1,rep,name=ranking_list,json=rankingList,proto3" json:"ranking_list,omitempty"`
	SelfRankingId   int64                              `protobuf:"varint,2,opt,name=self_ranking_id,json=selfRankingId,proto3" json:"self_ranking_id,omitempty"`
	NextRefreshTime int64                              `protobuf:"varint,3,opt,name=next_refresh_time,json=nextRefreshTime,proto3" json:"next_refresh_time,omitempty"`
}

func (m *ActivityRanking_GetRankingListResponse) Reset() {
	*m = ActivityRanking_GetRankingListResponse{}
}
func (*ActivityRanking_GetRankingListResponse) ProtoMessage() {}
func (*ActivityRanking_GetRankingListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ee9423e103a275, []int{0, 7}
}
func (m *ActivityRanking_GetRankingListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivityRanking_GetRankingListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivityRanking_GetRankingListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivityRanking_GetRankingListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRanking_GetRankingListResponse.Merge(m, src)
}
func (m *ActivityRanking_GetRankingListResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivityRanking_GetRankingListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRanking_GetRankingListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRanking_GetRankingListResponse proto.InternalMessageInfo

func (m *ActivityRanking_GetRankingListResponse) GetRankingList() []*models.ActivityRanking_RankInfo {
	if m != nil {
		return m.RankingList
	}
	return nil
}

func (m *ActivityRanking_GetRankingListResponse) GetSelfRankingId() int64 {
	if m != nil {
		return m.SelfRankingId
	}
	return 0
}

func (m *ActivityRanking_GetRankingListResponse) GetNextRefreshTime() int64 {
	if m != nil {
		return m.NextRefreshTime
	}
	return 0
}

func (*ActivityRanking_GetRankingListResponse) XXX_MessageName() string {
	return "activity_ranking_service.ActivityRanking.GetRankingListResponse"
}
func init() {
	proto.RegisterType((*ActivityRanking)(nil), "activity_ranking_service.ActivityRanking")
	proto.RegisterType((*ActivityRanking_JoinRankingRequest)(nil), "activity_ranking_service.ActivityRanking.JoinRankingRequest")
	proto.RegisterType((*ActivityRanking_JoinRankingResponse)(nil), "activity_ranking_service.ActivityRanking.JoinRankingResponse")
	proto.RegisterType((*ActivityRanking_UpdateRankingDataRequest)(nil), "activity_ranking_service.ActivityRanking.UpdateRankingDataRequest")
	proto.RegisterType((*ActivityRanking_UpdateRankingDataResponse)(nil), "activity_ranking_service.ActivityRanking.UpdateRankingDataResponse")
	proto.RegisterType((*ActivityRanking_GetSelfRankingRequest)(nil), "activity_ranking_service.ActivityRanking.GetSelfRankingRequest")
	proto.RegisterType((*ActivityRanking_GetSelfRankingResponse)(nil), "activity_ranking_service.ActivityRanking.GetSelfRankingResponse")
	proto.RegisterType((*ActivityRanking_GetRankingListRequest)(nil), "activity_ranking_service.ActivityRanking.GetRankingListRequest")
	proto.RegisterType((*ActivityRanking_GetRankingListResponse)(nil), "activity_ranking_service.ActivityRanking.GetRankingListResponse")
}

func init() {
	proto.RegisterFile("proto/activity-ranking-service/activity_ranking.proto", fileDescriptor_55ee9423e103a275)
}

var fileDescriptor_55ee9423e103a275 = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x3d, 0x6f, 0x13, 0x41,
	0x10, 0xf5, 0xe6, 0xf2, 0xa1, 0x8c, 0x89, 0x22, 0x8e, 0x40, 0x2e, 0x07, 0x2c, 0x16, 0x91, 0x90,
	0x85, 0x14, 0x9f, 0x08, 0x42, 0x48, 0x48, 0x14, 0x7c, 0x48, 0xc8, 0x88, 0xea, 0x20, 0x0d, 0xcd,
	0xe9, 0x7c, 0x37, 0x67, 0x56, 0x9c, 0x77, 0xcd, 0xee, 0xda, 0x4a, 0xfe, 0x03, 0x05, 0x3f, 0x83,
	0x96, 0x9f, 0x40, 0x97, 0x32, 0x65, 0x4a, 0x38, 0x37, 0x94, 0xf0, 0x0f, 0x90, 0x77, 0xd7, 0x89,
	0xed, 0x18, 0x29, 0x0d, 0x95, 0x3d, 0xf3, 0xf6, 0xcd, 0xbc, 0xf7, 0x6e, 0xb5, 0xf0, 0xa8, 0x2f,
	0x85, 0x16, 0x51, 0x9a, 0x69, 0x36, 0x64, 0xfa, 0x68, 0x4f, 0xa6, 0xfc, 0x23, 0xe3, 0xdd, 0x3d,
	0x85, 0x72, 0xc8, 0x32, 0x3c, 0x03, 0x12, 0x07, 0xb4, 0xcc, 0x79, 0x3f, 0x98, 0xef, 0x27, 0x8e,
	0x10, 0x6e, 0xdb, 0x81, 0x3d, 0x91, 0x63, 0xa9, 0xa2, 0x4e, 0xaa, 0xd0, 0x52, 0xc2, 0x9d, 0xae,
	0x10, 0xdd, 0x12, 0x23, 0x53, 0x75, 0x06, 0x45, 0x94, 0xf2, 0x23, 0x07, 0xed, 0xce, 0x70, 0x16,
	0xaf, 0xbc, 0xfb, 0x67, 0x15, 0x36, 0x9f, 0x39, 0x28, 0xb6, 0x48, 0xf8, 0x9d, 0x80, 0xff, 0x5a,
	0x30, 0xee, 0xea, 0x18, 0x3f, 0x0d, 0x50, 0x69, 0x7f, 0x1b, 0xd6, 0xa4, 0x28, 0x31, 0x61, 0x79,
	0x40, 0x1a, 0xa4, 0xb9, 0x1e, 0xaf, 0x8e, 0xcb, 0x76, 0xee, 0x6f, 0xc1, 0x8a, 0xca, 0x84, 0xc4,
	0x60, 0xa9, 0x41, 0x9a, 0x5e, 0x6c, 0x0b, 0x7f, 0x17, 0x36, 0x26, 0x2e, 0x18, 0xcf, 0xf1, 0x30,
	0xf0, 0x0c, 0xe9, 0x8a, 0x6b, 0xb6, 0xc7, 0x3d, 0x3f, 0x80, 0xb5, 0x21, 0x4a, 0xc5, 0x04, 0x0f,
	0x96, 0x0d, 0x79, 0x52, 0xfa, 0x4f, 0xa1, 0x9e, 0x49, 0x4c, 0x35, 0x26, 0x8c, 0x17, 0x22, 0xc8,
	0x1b, 0xa4, 0x59, 0xdf, 0xbf, 0xd5, 0xb2, 0x6e, 0x5a, 0x73, 0x92, 0x5b, 0x6d, 0x5e, 0x88, 0x18,
	0x2c, 0x61, 0xfc, 0x3f, 0x7c, 0x02, 0xd7, 0x66, 0x2c, 0xa8, 0xbe, 0xe0, 0x6a, 0x81, 0x28, 0x72,
	0x51, 0x54, 0xc8, 0x21, 0x38, 0xe8, 0xe7, 0xa9, 0x46, 0xc7, 0x7e, 0x99, 0xea, 0xf4, 0x3f, 0x86,
	0x10, 0xde, 0x84, 0x9d, 0x05, 0xfb, 0xac, 0xe2, 0xf0, 0x00, 0xae, 0xbf, 0x42, 0xfd, 0x16, 0xcb,
	0xe2, 0xb2, 0x9f, 0xe3, 0xc2, 0xce, 0xa5, 0x05, 0x3b, 0x1f, 0xc3, 0x8d, 0xf9, 0xb1, 0x2e, 0xa2,
	0xdb, 0x00, 0x67, 0x74, 0x3b, 0xda, 0x8b, 0xd7, 0x27, 0xdc, 0x3c, 0xfc, 0x4c, 0x8c, 0x20, 0xc7,
	0x7a, 0xc3, 0x94, 0x9e, 0x08, 0xba, 0x4c, 0xb6, 0xfe, 0x1d, 0xa8, 0x2b, 0x9d, 0x4a, 0x3d, 0x25,
	0xcd, 0x8b, 0xc1, 0xb4, 0xec, 0x81, 0x2d, 0x58, 0xc9, 0xc4, 0x80, 0x6b, 0x93, 0x94, 0x17, 0xdb,
	0x62, 0xda, 0xec, 0xf2, 0xb4, 0xd9, 0xf0, 0x1b, 0x31, 0x46, 0x66, 0xe4, 0x38, 0x23, 0x2f, 0x60,
	0xb2, 0x3a, 0x29, 0x99, 0xd2, 0x01, 0x69, 0x78, 0xcd, 0xfa, 0x7e, 0xe3, 0x5f, 0x57, 0x68, 0xfc,
	0x6b, 0xae, 0x51, 0x5d, 0x9e, 0x0f, 0xf3, 0xef, 0xc1, 0xa6, 0xc2, 0xb2, 0x48, 0xa6, 0x22, 0xb1,
	0x9a, 0x37, 0xd4, 0x79, 0x76, 0xed, 0xdc, 0xbf, 0x0f, 0x57, 0x39, 0x1e, 0xea, 0x44, 0x62, 0x21,
	0x51, 0x7d, 0x48, 0x34, 0xeb, 0xa1, 0xb3, 0xb0, 0x39, 0x06, 0x62, 0xdb, 0x7f, 0xc7, 0x7a, 0xf8,
	0x3c, 0x39, 0xfd, 0x49, 0x6b, 0x5f, 0x2b, 0x4a, 0x8e, 0x2b, 0x4a, 0x4e, 0x2a, 0x4a, 0x7e, 0x54,
	0x94, 0xfc, 0xaa, 0x68, 0xed, 0x77, 0x45, 0xc9, 0x97, 0x11, 0xad, 0x1d, 0x8f, 0x28, 0x39, 0x19,
	0xd1, 0xda, 0xe9, 0x88, 0xd6, 0xde, 0x3f, 0xc8, 0x04, 0xe3, 0xe6, 0xe5, 0x40, 0x19, 0x65, 0xa2,
	0xd7, 0x13, 0x3c, 0x9a, 0x7d, 0x5e, 0xe6, 0x5f, 0x8b, 0xce, 0xaa, 0xc1, 0x1f, 0xfe, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x8a, 0x39, 0x72, 0xdf, 0x87, 0x04, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_JoinRankingRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_JoinRankingResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_UpdateRankingDataRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_UpdateRankingDataResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_GetSelfRankingRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_GetSelfRankingResponse.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_GetRankingListRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolActivityRanking_GetRankingListResponse.Get().(proto.Message)
	})
}

var poolActivityRanking = &sync.Pool{New: func() interface{} { return &ActivityRanking{} }}

func (m *ActivityRanking) ReleasePool() { m.Reset(); poolActivityRanking.Put(m); m = nil }

var poolActivityRanking_JoinRankingRequest = &sync.Pool{New: func() interface{} { return &ActivityRanking_JoinRankingRequest{} }}

func (m *ActivityRanking_JoinRankingRequest) ReleasePool() {
	m.Reset()
	poolActivityRanking_JoinRankingRequest.Put(m)
	m = nil
}

var poolActivityRanking_JoinRankingResponse = &sync.Pool{New: func() interface{} { return &ActivityRanking_JoinRankingResponse{} }}

func (m *ActivityRanking_JoinRankingResponse) ReleasePool() {
	m.Reset()
	poolActivityRanking_JoinRankingResponse.Put(m)
	m = nil
}

var poolActivityRanking_UpdateRankingDataRequest = &sync.Pool{New: func() interface{} { return &ActivityRanking_UpdateRankingDataRequest{} }}

func (m *ActivityRanking_UpdateRankingDataRequest) ReleasePool() {
	m.Reset()
	poolActivityRanking_UpdateRankingDataRequest.Put(m)
	m = nil
}

var poolActivityRanking_UpdateRankingDataResponse = &sync.Pool{New: func() interface{} { return &ActivityRanking_UpdateRankingDataResponse{} }}

func (m *ActivityRanking_UpdateRankingDataResponse) ReleasePool() {
	m.Reset()
	poolActivityRanking_UpdateRankingDataResponse.Put(m)
	m = nil
}

var poolActivityRanking_GetSelfRankingRequest = &sync.Pool{New: func() interface{} { return &ActivityRanking_GetSelfRankingRequest{} }}

func (m *ActivityRanking_GetSelfRankingRequest) ReleasePool() {
	m.Reset()
	poolActivityRanking_GetSelfRankingRequest.Put(m)
	m = nil
}

var poolActivityRanking_GetSelfRankingResponse = &sync.Pool{New: func() interface{} { return &ActivityRanking_GetSelfRankingResponse{} }}

func (m *ActivityRanking_GetSelfRankingResponse) ReleasePool() {
	m.Reset()
	poolActivityRanking_GetSelfRankingResponse.Put(m)
	m = nil
}

var poolActivityRanking_GetRankingListRequest = &sync.Pool{New: func() interface{} { return &ActivityRanking_GetRankingListRequest{} }}

func (m *ActivityRanking_GetRankingListRequest) ReleasePool() {
	m.Reset()
	poolActivityRanking_GetRankingListRequest.Put(m)
	m = nil
}

var poolActivityRanking_GetRankingListResponse = &sync.Pool{New: func() interface{} { return &ActivityRanking_GetRankingListResponse{} }}

func (m *ActivityRanking_GetRankingListResponse) ReleasePool() {
	m.Reset()
	poolActivityRanking_GetRankingListResponse.Put(m)
	m = nil
}
func (this *ActivityRanking) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking)
	if !ok {
		that2, ok := that.(ActivityRanking)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ActivityRanking_JoinRankingRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_JoinRankingRequest)
	if !ok {
		that2, ok := that.(ActivityRanking_JoinRankingRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.Score != that1.Score {
		return false
	}
	if this.RankingIndex != that1.RankingIndex {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	if !this.CreateInfo.Equal(that1.CreateInfo) {
		return false
	}
	return true
}
func (this *ActivityRanking_JoinRankingResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_JoinRankingResponse)
	if !ok {
		that2, ok := that.(ActivityRanking_JoinRankingResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RankingIndex != that1.RankingIndex {
		return false
	}
	return true
}
func (this *ActivityRanking_UpdateRankingDataRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_UpdateRankingDataRequest)
	if !ok {
		that2, ok := that.(ActivityRanking_UpdateRankingDataRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.Score != that1.Score {
		return false
	}
	if this.RankingIndex != that1.RankingIndex {
		return false
	}
	return true
}
func (this *ActivityRanking_UpdateRankingDataResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_UpdateRankingDataResponse)
	if !ok {
		that2, ok := that.(ActivityRanking_UpdateRankingDataResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ActivityRanking_GetSelfRankingRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_GetSelfRankingRequest)
	if !ok {
		that2, ok := that.(ActivityRanking_GetSelfRankingRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if this.RankingIndex != that1.RankingIndex {
		return false
	}
	return true
}
func (this *ActivityRanking_GetSelfRankingResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_GetSelfRankingResponse)
	if !ok {
		that2, ok := that.(ActivityRanking_GetSelfRankingResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RankingId != that1.RankingId {
		return false
	}
	return true
}
func (this *ActivityRanking_GetRankingListRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_GetRankingListRequest)
	if !ok {
		that2, ok := that.(ActivityRanking_GetRankingListRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RankingIndex != that1.RankingIndex {
		return false
	}
	if this.StartIndex != that1.StartIndex {
		return false
	}
	if this.Count != that1.Count {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	return true
}
func (this *ActivityRanking_GetRankingListResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActivityRanking_GetRankingListResponse)
	if !ok {
		that2, ok := that.(ActivityRanking_GetRankingListResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.RankingList) != len(that1.RankingList) {
		return false
	}
	for i := range this.RankingList {
		if !this.RankingList[i].Equal(that1.RankingList[i]) {
			return false
		}
	}
	if this.SelfRankingId != that1.SelfRankingId {
		return false
	}
	if this.NextRefreshTime != that1.NextRefreshTime {
		return false
	}
	return true
}
func (m *ActivityRanking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_JoinRankingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_JoinRankingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_JoinRankingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreateInfo != nil {
		{
			size, err := m.CreateInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintActivityRanking(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	if m.Version != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x20
	}
	if len(m.RankingIndex) > 0 {
		i -= len(m.RankingIndex)
		copy(dAtA[i:], m.RankingIndex)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RankingIndex)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Score != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_JoinRankingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_JoinRankingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_JoinRankingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RankingIndex) > 0 {
		i -= len(m.RankingIndex)
		copy(dAtA[i:], m.RankingIndex)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RankingIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_UpdateRankingDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_UpdateRankingDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_UpdateRankingDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RankingIndex) > 0 {
		i -= len(m.RankingIndex)
		copy(dAtA[i:], m.RankingIndex)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RankingIndex)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Score != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_UpdateRankingDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_UpdateRankingDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_UpdateRankingDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_GetSelfRankingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_GetSelfRankingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_GetSelfRankingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RankingIndex) > 0 {
		i -= len(m.RankingIndex)
		copy(dAtA[i:], m.RankingIndex)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RankingIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_GetSelfRankingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_GetSelfRankingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_GetSelfRankingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RankingId != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.RankingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_GetRankingListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_GetRankingListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_GetRankingListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0x22
	}
	if m.Count != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x18
	}
	if m.StartIndex != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.StartIndex))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RankingIndex) > 0 {
		i -= len(m.RankingIndex)
		copy(dAtA[i:], m.RankingIndex)
		i = encodeVarintActivityRanking(dAtA, i, uint64(len(m.RankingIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivityRanking_GetRankingListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityRanking_GetRankingListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivityRanking_GetRankingListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NextRefreshTime != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.NextRefreshTime))
		i--
		dAtA[i] = 0x18
	}
	if m.SelfRankingId != 0 {
		i = encodeVarintActivityRanking(dAtA, i, uint64(m.SelfRankingId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RankingList) > 0 {
		for iNdEx := len(m.RankingList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RankingList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintActivityRanking(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintActivityRanking(dAtA []byte, offset int, v uint64) int {
	offset -= sovActivityRanking(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *ActivityRanking) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *ActivityRanking_JoinRankingRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.Score != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("score")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Score))
		needWriteComma = true
	}
	if m.RankingIndex != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("ranking_index")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RankingIndex)
		needWriteComma = true
	}
	if m.Version != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("version")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Version))
		needWriteComma = true
	}
	if needWriteComma {
		w.RawByte(',')
	}
	w.RawByte('"')
	w.RawString("create_info")
	w.RawByte('"')
	w.RawByte(':')
	m.CreateInfo.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking_JoinRankingResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RankingIndex != "" {
		w.RawByte('"')
		w.RawString("ranking_index")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RankingIndex)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking_UpdateRankingDataRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.Score != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("score")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Score))
		needWriteComma = true
	}
	if m.RankingIndex != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("ranking_index")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RankingIndex)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking_UpdateRankingDataResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *ActivityRanking_GetSelfRankingRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	if m.RankingIndex != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("ranking_index")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RankingIndex)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking_GetSelfRankingResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RankingId != 0 {
		w.RawByte('"')
		w.RawString("ranking_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.RankingId))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking_GetRankingListRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RankingIndex != "" {
		w.RawByte('"')
		w.RawString("ranking_index")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RankingIndex)
		needWriteComma = true
	}
	if m.StartIndex != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("start_index")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.StartIndex))
		needWriteComma = true
	}
	if m.Count != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("count")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.Count))
		needWriteComma = true
	}
	if m.RoleId != "" {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking_GetRankingListResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("ranking_list")
	w.RawByte('"')
	w.RawByte(':')
	if m.RankingList == nil {
		w.RawString("null")
	} else if len(m.RankingList) == 0 {
		w.RawString("[]")
	} else {
		w.RawByte('[')
		for i, v := range m.RankingList {
			v.JsonBytes(w)
			if i != len(m.RankingList)-1 {
				w.RawByte(',')
			}
		}
		w.RawByte(']')
	}
	needWriteComma = true
	if m.SelfRankingId != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("self_ranking_id")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.SelfRankingId))
		needWriteComma = true
	}
	if m.NextRefreshTime != 0 {
		if needWriteComma {
			w.RawByte(',')
		}
		w.RawByte('"')
		w.RawString("next_refresh_time")
		w.RawByte('"')
		w.RawByte(':')
		w.Int64(int64(m.NextRefreshTime))
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *ActivityRanking) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking) GoString() string {
	return m.String()
}

func (m *ActivityRanking_JoinRankingRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_JoinRankingRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_JoinRankingRequest) GoString() string {
	return m.String()
}

func (m *ActivityRanking_JoinRankingResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_JoinRankingResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_JoinRankingResponse) GoString() string {
	return m.String()
}

func (m *ActivityRanking_UpdateRankingDataRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_UpdateRankingDataRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_UpdateRankingDataRequest) GoString() string {
	return m.String()
}

func (m *ActivityRanking_UpdateRankingDataResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_UpdateRankingDataResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_UpdateRankingDataResponse) GoString() string {
	return m.String()
}

func (m *ActivityRanking_GetSelfRankingRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_GetSelfRankingRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_GetSelfRankingRequest) GoString() string {
	return m.String()
}

func (m *ActivityRanking_GetSelfRankingResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_GetSelfRankingResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_GetSelfRankingResponse) GoString() string {
	return m.String()
}

func (m *ActivityRanking_GetRankingListRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_GetRankingListRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_GetRankingListRequest) GoString() string {
	return m.String()
}

func (m *ActivityRanking_GetRankingListResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *ActivityRanking_GetRankingListResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *ActivityRanking_GetRankingListResponse) GoString() string {
	return m.String()
}

func (m *ActivityRanking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivityRanking_JoinRankingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovActivityRanking(uint64(m.Score))
	}
	l = len(m.RankingIndex)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovActivityRanking(uint64(m.Version))
	}
	if m.CreateInfo != nil {
		l = m.CreateInfo.Size()
		n += 2 + l + sovActivityRanking(uint64(l))
	}
	return n
}

func (m *ActivityRanking_JoinRankingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RankingIndex)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	return n
}

func (m *ActivityRanking_UpdateRankingDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovActivityRanking(uint64(m.Score))
	}
	l = len(m.RankingIndex)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	return n
}

func (m *ActivityRanking_UpdateRankingDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivityRanking_GetSelfRankingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	l = len(m.RankingIndex)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	return n
}

func (m *ActivityRanking_GetSelfRankingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RankingId != 0 {
		n += 1 + sovActivityRanking(uint64(m.RankingId))
	}
	return n
}

func (m *ActivityRanking_GetRankingListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RankingIndex)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	if m.StartIndex != 0 {
		n += 1 + sovActivityRanking(uint64(m.StartIndex))
	}
	if m.Count != 0 {
		n += 1 + sovActivityRanking(uint64(m.Count))
	}
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovActivityRanking(uint64(l))
	}
	return n
}

func (m *ActivityRanking_GetRankingListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RankingList) > 0 {
		for _, e := range m.RankingList {
			l = e.Size()
			n += 1 + l + sovActivityRanking(uint64(l))
		}
	}
	if m.SelfRankingId != 0 {
		n += 1 + sovActivityRanking(uint64(m.SelfRankingId))
	}
	if m.NextRefreshTime != 0 {
		n += 1 + sovActivityRanking(uint64(m.NextRefreshTime))
	}
	return n
}

func sovActivityRanking(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozActivityRanking(x uint64) (n int) {
	return sovActivityRanking(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ActivityRanking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityRanking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityRanking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_JoinRankingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JoinRankingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JoinRankingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateInfo == nil {
				m.CreateInfo = &models.ActivityRanking_Info{}
			}
			if err := m.CreateInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_JoinRankingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JoinRankingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JoinRankingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_UpdateRankingDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateRankingDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateRankingDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_UpdateRankingDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateRankingDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateRankingDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_GetSelfRankingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSelfRankingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSelfRankingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_GetSelfRankingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSelfRankingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSelfRankingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingId", wireType)
			}
			m.RankingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RankingId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_GetRankingListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRankingListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRankingListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartIndex", wireType)
			}
			m.StartIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityRanking_GetRankingListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRankingListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRankingListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankingList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivityRanking
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankingList = append(m.RankingList, &models.ActivityRanking_RankInfo{})
			if err := m.RankingList[len(m.RankingList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfRankingId", wireType)
			}
			m.SelfRankingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SelfRankingId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextRefreshTime", wireType)
			}
			m.NextRefreshTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextRefreshTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivityRanking(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActivityRanking
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipActivityRanking(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowActivityRanking
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivityRanking
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthActivityRanking
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupActivityRanking
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthActivityRanking
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthActivityRanking        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowActivityRanking          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupActivityRanking = fmt.Errorf("proto: unexpected end of group")
)
